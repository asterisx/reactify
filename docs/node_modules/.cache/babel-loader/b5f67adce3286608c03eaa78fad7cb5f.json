{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Toast = exports.shrink = exports.toastWidth = exports.gutter = exports.borderRadius = void 0;\n\nvar _core = _interopRequireWildcard(require(\"@emotion/core\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"from { height: 100%; } to { height: 0% }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nvar borderRadius = 4;\nexports.borderRadius = borderRadius;\nvar gutter = 8;\nexports.gutter = gutter;\nvar toastWidth = 360;\nexports.toastWidth = toastWidth;\nvar shrink = (0, _core.keyframes)(_templateObject());\nexports.shrink = shrink;\n\nvar getTranslate = function getTranslate(placement) {\n  var pos = placement.split('-');\n  var relevantPlacement = pos[1] === 'center' ? pos[0] : pos[1];\n  var translateMap = {\n    right: 'translate3d(120%, 0, 0)',\n    left: 'translate3d(-120%, 0, 0)',\n    bottom: 'translate3d(0, 120%, 0)',\n    top: 'translate3d(0, -120%, 0)'\n  };\n  return translateMap[relevantPlacement];\n};\n\nvar toastStates = function toastStates(placement) {\n  return {\n    entering: {\n      transform: getTranslate(placement)\n    },\n    entered: {\n      transform: 'translate3d(0,0,0)'\n    },\n    exiting: {\n      transform: getTranslate(placement)\n    },\n    exited: {\n      transform: getTranslate(placement)\n    }\n  };\n};\n\nvar ToastDiv = _core.default.div(function (_ref) {\n  var placement = _ref.placement,\n      transitionDuration = _ref.transitionDuration,\n      transitionState = _ref.transitionState;\n  return _objectSpread({\n    boxShadow: '0 3px 8px rgba(0, 0, 0, 0.175)',\n    display: 'flex',\n    marginBottom: gutter,\n    transition: \"transform \".concat(transitionDuration, \"ms cubic-bezier(0.2, 0, 0, 1)\"),\n    width: toastWidth\n  }, toastStates(placement)[transitionState]);\n});\n\nvar Toast = function Toast(_ref2) {\n  var children = _ref2.children,\n      pauseOnHover = _ref2.pauseOnHover,\n      placement = _ref2.placement,\n      transitionDuration = _ref2.transitionDuration,\n      transitionState = _ref2.transitionState,\n      _onMouseEnter = _ref2.onMouseEnter,\n      onMouseLeave = _ref2.onMouseLeave,\n      autoDismissTimeout = _ref2.autoDismissTimeout,\n      isRunning = _ref2.isRunning;\n  return (0, _core.jsx)(ToastDiv, {\n    placement: placement,\n    transitionState: transitionState,\n    transitionDuration: transitionDuration,\n    onMouseEnter: function onMouseEnter() {\n      if (pauseOnHover) _onMouseEnter();\n    },\n    onMouseLeave: onMouseLeave\n  }, children);\n};\n\nexports.Toast = Toast;","map":null,"metadata":{},"sourceType":"script"}