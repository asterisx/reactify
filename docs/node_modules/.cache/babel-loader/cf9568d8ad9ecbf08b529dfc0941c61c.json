{"ast":null,"code":"import _classCallCheck from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/projects/reactify/docs/src/pages/progress-bar/progress-bar.js\";\nimport React, { Component } from 'react';\nimport { ProgressBar } from '@../../../../reactify/build';\nimport { simpleCode } from './code-refrence';\nimport './progress-bar.scss';\nimport DemoCard from '../../components/demo-card';\n\nvar ProgressBarDemo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProgressBarDemo, _Component);\n\n  function ProgressBarDemo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProgressBarDemo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProgressBarDemo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      runningPercentage: 0\n    };\n    _this.interval = undefined;\n    return _this;\n  }\n\n  _createClass(ProgressBarDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        return _this2.setState(function (prevState) {\n          return {\n            runningPercentage: prevState.runningPercentage + 1\n          };\n        });\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(DemoCard, {\n        title: \"Simple Use\",\n        uniqueIdentifier: \"simpleUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        striped: true,\n        percentage: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"30% complete\"), React.createElement(ProgressBar, {\n        striped: true,\n        success: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"60% complete\")), React.createElement(DemoCard, {\n        title: \"Running Demo\",\n        uniqueIdentifier: \"onSelectionUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        striped: true,\n        dark: true,\n        percentage: this.state.runningPercentage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"\".concat(this.state.runningPercentage, \"% complete\"))));\n    }\n  }]);\n\n  return ProgressBarDemo;\n}(Component);\n\nexport default ProgressBarDemo;","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/progress-bar/progress-bar.js"],"names":["React","Component","ProgressBar","simpleCode","DemoCard","ProgressBarDemo","state","runningPercentage","interval","undefined","setInterval","setState","prevState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SACEC,UADF,QAEO,iBAFP;AAGA,OAAO,qBAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;;IAEMC,e;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,iBAAiB,EAAE;AAArB,K;UAGRC,Q,GAAWC,S;;;;;;wCAES;AAAA;;AAClBC,MAAAA,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,QAAL,CAAc,UAAAC,SAAS;AAAA,iBAAK;AAAEL,YAAAA,iBAAiB,EAAEK,SAAS,CAACL,iBAAV,GAA8B;AAAnD,WAAL;AAAA,SAAvB,CAAN;AAAA,OAAD,EAA6F,GAA7F,CAAX;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,gBAAgB,EAAC,WAFnB;AAGE,QAAA,UAAU,EAAEJ,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,WAAD;AAAa,QAAA,OAAO,MAApB;AAAqB,QAAA,UAAU,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAME,oBAAC,WAAD;AAAa,QAAA,OAAO,MAApB;AAAqB,QAAA,OAAO,MAA5B;AAA6B,QAAA,UAAU,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF,EAUE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,gBAAgB,EAAC,gBAFnB;AAGE,QAAA,UAAU,EAAEA,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,WAAD;AAAa,QAAA,OAAO,MAApB;AAAqB,QAAA,IAAI,MAAzB;AAA0B,QAAA,UAAU,EAAE,KAAKG,KAAL,CAAWC,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwE,KAAKD,KAAL,CAAWC,iBAAnF,gBALF,CAVF,CADF;AAoBD;;;;EA/B2BN,S;;AAkC9B,eAAeI,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ProgressBar } from '@../../../../reactify/build';\nimport {\n  simpleCode,\n} from './code-refrence';\nimport './progress-bar.scss';\nimport DemoCard from '../../components/demo-card';\n\nclass ProgressBarDemo extends Component {\n  state = { runningPercentage: 0 }\n\n\n  interval = undefined;\n\n  componentDidMount() {\n    setInterval(() => this.setState(prevState => ({ runningPercentage: prevState.runningPercentage + 1 })), 500);\n  }\n\n  render() {\n    return (\n      <div>\n        <DemoCard\n          title=\"Simple Use\"\n          uniqueIdentifier=\"simpleUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar striped percentage={30}>30% complete</ProgressBar>\n          <ProgressBar striped success percentage={60}>60% complete</ProgressBar>\n        </DemoCard>\n\n        <DemoCard\n          title=\"Running Demo\"\n          uniqueIdentifier=\"onSelectionUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar striped dark percentage={this.state.runningPercentage}>{`${this.state.runningPercentage}% complete`}</ProgressBar>\n        </DemoCard>\n      </div>\n    );\n  }\n}\n\nexport default ProgressBarDemo;\n"]},"metadata":{},"sourceType":"module"}