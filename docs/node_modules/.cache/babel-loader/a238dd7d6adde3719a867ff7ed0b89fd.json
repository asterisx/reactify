{"ast":null,"code":"var onCloseCode = \"\\n<Chip onCloseClick={() => alert('Close Clicked')}>Item 1</Chip>\\n\";\nvar customSizesCode = \"\\n<ListPanel small>\\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\\n</ListPanel>\\n\\n<ListPanel medium>\\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\\n</ListPanel>\\n\\n<ListPanel large>\\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\\n</ListPanel>\\n\\n<ListPanel style={{ fontSize: '40px' }}>\\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\\n</ListPanel>\\n\";\nvar customThemeCode = \"\\n<Chip primary>Item 1</Chip>\\n\\n<Chip secondary>Item 1</Chip>\\n\\n<Chip dark>Item 1</Chip>\\n\\n<Chip light>Item 1</Chip>\\n\\n<Chip info>Item 1</Chip>\\n\\n<Chip warning>Item 1</Chip>\\n\\n<Chip danger>Item 1</Chip>\\n\\n<Chip success>Item 1</Chip>\\n\";\nvar disabledCode = \"\\n<Chips disabled>\\n  {this.state.simpleItems.map((si, index) => (\\n    <Chip\\n      key={index}\\n      onCloseClick={\\n    () => this.setState(prevState => ({ simpleItems: prevState.simpleItems.filter(sit => sit !== si) }))}\\n    >\\n      {si}\\n    </Chip>\\n  ))}\\n</Chips>\\n\\n<Chips>\\n  <Chip disabled key={1}>Item 1</Chip>\\n  <Chip key={2}>Item 2</Chip>\\n  <Chip key={3}>Item 3</Chip>\\n</Chips>\\n\\n\";\nvar simpleCode = \"\\n<Chips>\\n  {this.state.simpleItems.map((si, index) => (\\n    <Chip\\n      key={index}\\n      onCloseClick={\\n    () => this.setState(prevState => ({ simpleItems: prevState.simpleItems.filter(sit => sit !== si) }))}\\n    >\\n      {si}\\n    </Chip>\\n  ))}\\n</Chips>\\n\";\nexport { disabledCode, customThemeCode, customSizesCode, onCloseCode, simpleCode };","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/chips/code-refrence.js"],"names":["onCloseCode","customSizesCode","customThemeCode","disabledCode","simpleCode"],"mappings":"AAAA,IAAMA,WAAW,wEAAjB;AAGA,IAAMC,eAAe,ixCAArB;AAkCA,IAAMC,eAAe,sPAArB;AAiBA,IAAMC,YAAY,sZAAlB;AAqBA,IAAMC,UAAU,gRAAhB;AAcA,SACED,YADF,EAEED,eAFF,EAGED,eAHF,EAIED,WAJF,EAKEI,UALF","sourcesContent":["const onCloseCode = `\n<Chip onCloseClick={() => alert('Close Clicked')}>Item 1</Chip>\n`;\nconst customSizesCode = `\n<ListPanel small>\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\n</ListPanel>\n\n<ListPanel medium>\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\n</ListPanel>\n\n<ListPanel large>\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\n</ListPanel>\n\n<ListPanel style={{ fontSize: '40px' }}>\n  <ListPanel.Item index={1} bordered={false}>Item 1</ListPanel.Item>\n  <ListPanel.Item index={2}>Item 2</ListPanel.Item>\n  <ListPanel.Item index={3}>Item 3</ListPanel.Item>\n  <ListPanel.Item index={4}>Item 4</ListPanel.Item>\n  <ListPanel.Item index={5}>Item 5</ListPanel.Item>\n</ListPanel>\n`;\n\nconst customThemeCode = `\n<Chip primary>Item 1</Chip>\n\n<Chip secondary>Item 1</Chip>\n\n<Chip dark>Item 1</Chip>\n\n<Chip light>Item 1</Chip>\n\n<Chip info>Item 1</Chip>\n\n<Chip warning>Item 1</Chip>\n\n<Chip danger>Item 1</Chip>\n\n<Chip success>Item 1</Chip>\n`;\nconst disabledCode = `\n<Chips disabled>\n  {this.state.simpleItems.map((si, index) => (\n    <Chip\n      key={index}\n      onCloseClick={\n    () => this.setState(prevState => ({ simpleItems: prevState.simpleItems.filter(sit => sit !== si) }))}\n    >\n      {si}\n    </Chip>\n  ))}\n</Chips>\n\n<Chips>\n  <Chip disabled key={1}>Item 1</Chip>\n  <Chip key={2}>Item 2</Chip>\n  <Chip key={3}>Item 3</Chip>\n</Chips>\n\n`;\n\nconst simpleCode = `\n<Chips>\n  {this.state.simpleItems.map((si, index) => (\n    <Chip\n      key={index}\n      onCloseClick={\n    () => this.setState(prevState => ({ simpleItems: prevState.simpleItems.filter(sit => sit !== si) }))}\n    >\n      {si}\n    </Chip>\n  ))}\n</Chips>\n`;\n\nexport {\n  disabledCode,\n  customThemeCode,\n  customSizesCode,\n  onCloseCode,\n  simpleCode,\n};\n"]},"metadata":{},"sourceType":"module"}