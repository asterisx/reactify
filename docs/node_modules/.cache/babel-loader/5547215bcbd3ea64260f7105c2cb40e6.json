{"ast":null,"code":"import _classCallCheck from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/projects/reactify/docs/src/pages/modal/modal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from '@../../../../reactify/build';\nimport { autoCloseCode, hideBackdropCode, simpleCode, modalSizeCode, onCloseCode } from './code-refrence';\nimport './modal.scss';\nimport DemoCard from '../../components/demo-card';\n\nvar ModalDemo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalDemo, _Component);\n\n  function ModalDemo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalDemo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalDemo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      simpleModalOpen: false,\n      smallModalOpen: false,\n      mediumModalOpen: false,\n      largeModalOpen: false,\n      customSizeModal: false,\n      autoCloseModalOpen: false,\n      hideBackdropModalOpen: false,\n      onCloseModal: false\n    };\n    return _this;\n  }\n\n  _createClass(ModalDemo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(DemoCard, {\n        title: \"Simple Use\",\n        uniqueIdentifier: \"simpleUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            simpleModalOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Open Modal\"), this.state.simpleModalOpen && React.createElement(Modal, {\n        onClose: function onClose() {\n          return _this2.setState({\n            simpleModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: closeToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      })), React.createElement(DemoCard, {\n        title: \"Modal Location\",\n        uniqueIdentifier: \"ModalLocationUse\",\n        sourceCode: modalSizeCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            smallModalOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Open Small Modal\"), this.state.smallModalOpen && React.createElement(Modal, {\n        small: true,\n        onClose: function onClose() {\n          return _this2.setState({\n            smallModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: closeToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            mediumModalOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Open Medium Modal\"), this.state.mediumModalOpen && React.createElement(Modal, {\n        medium: true,\n        onClose: function onClose() {\n          return _this2.setState({\n            mediumModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: closeToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            largeModalOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Open Large Modal\"), this.state.largeModalOpen && React.createElement(Modal, {\n        large: true,\n        onClose: function onClose() {\n          return _this2.setState({\n            largeModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: closeToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            customSizeModal: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Open Custom Size Modal\"), this.state.customSizeModal && React.createElement(Modal, {\n        style: {\n          width: '50em'\n        },\n        onClose: function onClose() {\n          return _this2.setState({\n            customSizeModal: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: closeToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(DemoCard, {\n        title: \"Auto Close\",\n        uniqueIdentifier: \"autoCloseUse\",\n        sourceCode: autoCloseCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"pb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"By default the Modal closes when clicking outside the Modal but that can be disabled by passing\", ' ', 'autoClose={false}'), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            autoCloseModalOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Open Modal\"), this.state.autoCloseModalOpen && React.createElement(Modal, {\n        autoClose: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: function onClick() {\n            _this2.setState({\n              autoCloseModalOpen: false\n            });\n\n            closeToggle();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }));\n      })), React.createElement(DemoCard, {\n        title: \"Hide Backdrop\",\n        uniqueIdentifier: \"hideBackdropUse\",\n        sourceCode: hideBackdropCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"pb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"To make the backdrop opaque\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            hideBackdropModalOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Open Modal\"), this.state.hideBackdropModalOpen && React.createElement(Modal, {\n        hideBackDrop: true,\n        onClose: function onClose() {\n          return _this2.setState({\n            hideBackdropModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: closeToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }));\n      })), React.createElement(DemoCard, {\n        title: \"onClose Event\",\n        uniqueIdentifier: \"onCloseUse\",\n        sourceCode: onCloseCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            onCloseModal: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Open Modal\"), this.state.onCloseModal && React.createElement(Modal, {\n        top: true,\n        onClose: function onClose() {\n          _this2.setState({\n            onCloseModal: false\n          });\n\n          alert('Closed');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, function (closeToggle) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '250px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            background: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            fontSize: '20px'\n          },\n          type: \"button\",\n          value: \"Close\",\n          onClick: closeToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return ModalDemo;\n}(Component);\n\nexport default ModalDemo;","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/modal/modal.js"],"names":["React","Component","Modal","Button","autoCloseCode","hideBackdropCode","simpleCode","modalSizeCode","onCloseCode","DemoCard","ModalDemo","state","simpleModalOpen","smallModalOpen","mediumModalOpen","largeModalOpen","customSizeModal","autoCloseModalOpen","hideBackdropModalOpen","onCloseModal","setState","closeToggle","width","height","display","justifyContent","alignContent","alignItems","background","fontSize","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button } from '@../../../../reactify/build';\nimport {\n  autoCloseCode,\n  hideBackdropCode,\n  simpleCode,\n  modalSizeCode,\n  onCloseCode,\n} from './code-refrence';\nimport './modal.scss';\nimport DemoCard from '../../components/demo-card';\n\nclass ModalDemo extends Component {\n    state = {\n      simpleModalOpen: false,\n      smallModalOpen: false,\n      mediumModalOpen: false,\n      largeModalOpen: false,\n      customSizeModal: false,\n      autoCloseModalOpen: false,\n      hideBackdropModalOpen: false,\n      onCloseModal: false,\n    };\n\n    render() {\n      return (\n        <div>\n          <DemoCard\n            title=\"Simple Use\"\n            uniqueIdentifier=\"simpleUse\"\n            sourceCode={simpleCode}\n          >\n            <Button onClick={() => this.setState({ simpleModalOpen: true })}>Open Modal</Button>\n            {this.state.simpleModalOpen && (\n            <Modal onClose={() => this.setState({ simpleModalOpen: false })}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n          </DemoCard>\n\n          <DemoCard\n            title=\"Modal Location\"\n            uniqueIdentifier=\"ModalLocationUse\"\n            sourceCode={modalSizeCode}\n          >\n            <Button\n              onClick={() => this.setState({ smallModalOpen: true })}\n            >\n              Open Small Modal\n            </Button>\n            {this.state.smallModalOpen && (\n            <Modal small onClose={() => this.setState({ smallModalOpen: false })}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n            <br />\n            <br />\n            <Button\n              onClick={() => this.setState({ mediumModalOpen: true })}\n            >\n                Open Medium Modal\n            </Button>\n            {this.state.mediumModalOpen && (\n            <Modal medium onClose={() => this.setState({ mediumModalOpen: false })}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n            <br />\n            <br />\n            <Button\n              onClick={() => this.setState({ largeModalOpen: true })}\n            >\n                Open Large Modal\n            </Button>\n            {this.state.largeModalOpen && (\n            <Modal large onClose={() => this.setState({ largeModalOpen: false })}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n            <br />\n            <br />\n            <Button\n              onClick={() => this.setState({ customSizeModal: true })}\n            >\n                Open Custom Size Modal\n            </Button>\n            {this.state.customSizeModal && (\n            <Modal style={{ width: '50em' }} onClose={() => this.setState({ customSizeModal: false })}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n            <br />\n          </DemoCard>\n\n          <DemoCard\n            title=\"Auto Close\"\n            uniqueIdentifier=\"autoCloseUse\"\n            sourceCode={autoCloseCode}\n          >\n            <h6 className=\"pb-3\">\n              By default the Modal closes when clicking outside the Modal\n               but that can be disabled by passing\n              {' '}\n              {'autoClose={false}'}\n            </h6>\n            <Button\n              onClick={() => this.setState({ autoCloseModalOpen: true })}\n            >\n                Open Modal\n            </Button>\n            {this.state.autoCloseModalOpen && (\n            <Modal autoClose={false}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={\n                        () => {\n                          this.setState({ autoCloseModalOpen: false });\n                          closeToggle();\n                        }}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n          </DemoCard>\n\n          <DemoCard\n            title=\"Hide Backdrop\"\n            uniqueIdentifier=\"hideBackdropUse\"\n            sourceCode={hideBackdropCode}\n          >\n            <h6 className=\"pb-3\">\n                To make the backdrop opaque\n            </h6>\n            <Button\n              onClick={() => this.setState({ hideBackdropModalOpen: true })}\n            >\n                Open Modal\n            </Button>\n            {this.state.hideBackdropModalOpen && (\n            <Modal\n              hideBackDrop\n              onClose={() => this.setState({ hideBackdropModalOpen: false })}\n            >\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n          </DemoCard>\n\n          <DemoCard\n            title=\"onClose Event\"\n            uniqueIdentifier=\"onCloseUse\"\n            sourceCode={onCloseCode}\n          >\n            <Button\n              onClick={() => this.setState({ onCloseModal: true })}\n            >\n                Open Modal\n            </Button>\n            {this.state.onCloseModal && (\n            <Modal top onClose={() => { this.setState({ onCloseModal: false }); alert('Closed'); }}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n          </DemoCard>\n        </div>\n      );\n    }\n}\n\nexport default ModalDemo;\n"]},"metadata":{},"sourceType":"module"}