{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _polished = require(\"polished\");\n\nvar _common = require(\"../../../../common\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  0% {\\n    border-top: 0.5em \", \" solid;\\n    border-right: 0.5em \", \" solid;\\n    border-bottom: 0.5em \", \" solid;\\n    border-left: 0.5em \", \" solid;\\n  }\\n  25% {\\n    border-top: 0.5em \", \" solid;\\n    border-right: 0.5em \", \" solid;\\n    border-bottom: 0.5em \", \" solid;\\n    border-left: 0.5em \", \" solid;\\n  }\\n  50% {\\n    border-top: 0.5em \", \" solid;\\n    border-right: 0.5em \", \" solid;\\n    border-bottom: 0.5em \", \" solid;\\n    border-left: 0.5em \", \" solid;\\n  }\\n  75% {\\n    border-top: 0.5em \", \" solid;\\n    border-right: 0.5em \", \" solid;\\n    border-bottom: 0.5em \", \" solid;\\n    border-left: 0.5em \", \" solid;\\n  }\\n  100% {\\n    border-top: 0.5em \", \" solid;\\n    border-right: 0.5em \", \" solid;\\n    border-bottom: 0.5em \", \" solid;\\n    border-left: 0.5em \", \" solid;\\n  }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nvar spSlices = function spSlices(_ref) {\n  var color = _ref.color;\n  return (0, _core.keyframes)(_templateObject(), (0, _polished.rgba)(color, 0.75), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.75), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.75), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.75), (0, _polished.rgba)(color, 0.75), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25), (0, _polished.rgba)(color, 0.25));\n};\n\nvar styles = {\n  getContainerStyle: function getContainerStyle(_ref2) {\n    var primary = _ref2.primary,\n        secondary = _ref2.secondary,\n        dark = _ref2.dark,\n        light = _ref2.light,\n        info = _ref2.info,\n        warning = _ref2.warning,\n        danger = _ref2.danger,\n        success = _ref2.success,\n        theme = _ref2.theme;\n    return function (_ref3) {\n      var animationDuration = _ref3.animationDuration,\n          _ref3$color = _ref3.color,\n          color = _ref3$color === void 0 ? _common.commonStyles.get.theme.color({\n        primary: primary,\n        secondary: secondary,\n        dark: dark,\n        light: light,\n        info: info,\n        warning: warning,\n        danger: danger,\n        success: success,\n        theme: theme\n      }) : _ref3$color;\n      return {\n        display: 'inline-block',\n        height: '2em',\n        width: '2em',\n        borderRadius: '50%',\n        borderTop: \"0.5em \".concat((0, _polished.rgba)(color, 0.75), \" solid\"),\n        borderLeft: \"0.5em \".concat((0, _polished.rgba)(color, 0.25), \" solid\"),\n        borderBottom: \"0.5em \".concat((0, _polished.rgba)(color, 0.25), \" solid\"),\n        borderRight: \"0.5em \".concat((0, _polished.rgba)(color, 0.25), \" solid\"),\n        animation: \"\".concat(spSlices, \" \").concat(animationDuration, \" infinite linear\")\n      };\n    };\n  }\n};\nexports.styles = styles;","map":null,"metadata":{},"sourceType":"script"}