{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _css2 = _interopRequireDefault(require(\"@emotion/css\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _io = require(\"react-icons/io\");\n\nvar _styles = require(\"./styles\");\n\nvar _common = require(\"../../common\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      trayOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeTray\", function () {\n      _this.setState({\n        trayOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleTray\", function () {\n      _this.setState(function (prevState) {\n        return {\n          trayOpen: !prevState.trayOpen\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          userName = _this$props.userName,\n          avatarLeft = _this$props.avatarLeft,\n          avatarRight = _this$props.avatarRight,\n          showMessage = _this$props.showMessage,\n          welcomeMessage = _this$props.welcomeMessage,\n          dropDownTop = _this$props.dropDownTop,\n          dropDownBottom = _this$props.dropDownBottom,\n          sm = _this$props.sm,\n          md = _this$props.md,\n          lg = _this$props.lg,\n          xl = _this$props.xl,\n          imgPath = _this$props.imgPath,\n          primary = _this$props.primary,\n          secondary = _this$props.secondary,\n          dark = _this$props.dark,\n          light = _this$props.light,\n          info = _this$props.info,\n          warning = _this$props.warning,\n          danger = _this$props.danger,\n          success = _this$props.success,\n          theme = _this$props.theme,\n          disabled = _this$props.disabled,\n          _onClick = _this$props.onClick,\n          otherProps = _objectWithoutProperties(_this$props, [\"children\", \"userName\", \"avatarLeft\", \"avatarRight\", \"showMessage\", \"welcomeMessage\", \"dropDownTop\", \"dropDownBottom\", \"sm\", \"md\", \"lg\", \"xl\", \"imgPath\", \"primary\", \"secondary\", \"dark\", \"light\", \"info\", \"warning\", \"danger\", \"success\", \"theme\", \"disabled\", \"onClick\"]);\n\n      var image = (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.imgContainer], \"label:image;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUlRIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbHQtdGV4dCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBJb01kQXJyb3dEcm9wZG93biB9IGZyb20gJ3JlYWN0LWljb25zL2lvJztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCB7IGRlZmF1bHRUaGVtZVByb3BUeXBlcywgdGhlbWVQcm9wVHlwZXMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jbGFzcyBVc2VyUHJvZmlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXJuYW1lIHZhbHVlIG9mIHRoZSB1c2VyXG4gICAgICovXG4gICAgdXNlck5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBhdmF0YXIgaXMgcGxhY2UgbGVmdCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhckxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGF2YXRhciBpcyBwbGFjZSByaWdodCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhclJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGlzIHRvIHNob3duXG4gICAgICogRGVmYXVsdHMgdG8gdHJ1ZVxuICAgICAqL1xuICAgIHNob3dNZXNzYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBUaGUgd2VsY29tZSBtZXNhYWdlXG4gICAgICovXG4gICAgd2VsY29tZU1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogVGhlIGBwYXRoYCBvZiB0aGUgYXZhdGFyXG4gICAgICovXG4gICAgaW1nUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIHRvcFxuICAgICAqIERlZmF1bHRzIHRvIGZhbHNlXG4gICAgICovXG4gICAgZHJvcERvd25Ub3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIGJvdHRvbVxuICAgICAqIERlZmF1bHRzIHRvIHRydWVcbiAgICAgKi9cbiAgICBkcm9wRG93bkJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgbWVzc2FnZSBhbmQgdXNlcm5hbWUgaXNcbiAgICAgKiBub3Qgc2hvd24gb24gc20gc2NyZWVucy5cbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgc206IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1lc3NhZ2UgYW5kIHVzZXJuYW1lIGlzXG4gICAgICogbm90IHNob3duIG9uIHNtIHNjcmVlbnMuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIG1kOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICAqIG5vdCBzaG93biBvbiBsZyBzY3JlZW5zLlxuICAgICAqIERlZmF1bHRzIHRvICdmYWxzZSdcbiAgICAgKi9cbiAgICBsZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICogbm90IHNob3duIG9uIHhsIHNjcmVlbnMuXG4gICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgKi9cbiAgICB4bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkXG4gICAgICogRGVmYXVsdCBpcyAnZmFsc2UnXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAgICovXG4gICAgLi4udGhlbWVQcm9wVHlwZXMsXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGF2YXRhckxlZnQ6IHRydWUsXG4gICAgYXZhdGFyUmlnaHQ6IGZhbHNlLFxuICAgIHNob3dNZXNzYWdlOiB0cnVlLFxuICAgIHdlbGNvbWVNZXNzYWdlOiAnV2VsY29tZScsXG4gICAgZHJvcERvd25Ub3A6IGZhbHNlLFxuICAgIGRyb3BEb3duQm90dG9tOiB0cnVlLFxuICAgIHNtOiBmYWxzZSxcbiAgICBtZDogZmFsc2UsXG4gICAgbGc6IGZhbHNlLFxuICAgIHhsOiBmYWxzZSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgLi4uZGVmYXVsdFRoZW1lUHJvcFR5cGVzLFxuICB9XG5cbiAgc3RhdGUgPSB7IHRyYXlPcGVuOiBmYWxzZSB9XG5cbiAgY2xvc2VUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmF5T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICB0b2dnbGVUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IHRyYXlPcGVuOiAhcHJldlN0YXRlLnRyYXlPcGVuIH0pKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgYXZhdGFyTGVmdCxcbiAgICAgIGF2YXRhclJpZ2h0LFxuICAgICAgc2hvd01lc3NhZ2UsXG4gICAgICB3ZWxjb21lTWVzc2FnZSxcbiAgICAgIGRyb3BEb3duVG9wLFxuICAgICAgZHJvcERvd25Cb3R0b20sXG4gICAgICBzbSxcbiAgICAgIG1kLFxuICAgICAgbGcsXG4gICAgICB4bCxcbiAgICAgIGltZ1BhdGgsXG4gICAgICBwcmltYXJ5LFxuICAgICAgc2Vjb25kYXJ5LFxuICAgICAgZGFyayxcbiAgICAgIGxpZ2h0LFxuICAgICAgaW5mbyxcbiAgICAgIHdhcm5pbmcsXG4gICAgICBkYW5nZXIsXG4gICAgICBzdWNjZXNzLFxuICAgICAgdGhlbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBpbWFnZSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbc3R5bGVzLmltZ0NvbnRhaW5lcl19XG4gICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbWdDb250YWluZXJ9XG4gICAgICA+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjc3M9e1tzdHlsZXMuaW1nXX1cbiAgICAgICAgICBjbGFzc05hbWU9e0JFTUNsYXNzTmFtZXMuaW1nfVxuICAgICAgICAgIHNyYz17aW1nUGF0aH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBzdHlsZXMuZ2V0QmFja2dyb3VuZENvbG9yU3R5bGUoe1xuICAgICAgICAgICAgcHJpbWFyeSxcbiAgICAgICAgICAgIHNlY29uZGFyeSxcbiAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICBsaWdodCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgZGFuZ2VyLFxuICAgICAgICAgICAgc3VjY2VzcyxcbiAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlcy5nZXRGb250Q29sb3JTdHlsZSh7XG4gICAgICAgICAgICBwcmltYXJ5LFxuICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgZGFyayxcbiAgICAgICAgICAgIGxpZ2h0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgIHdhcm5pbmcsXG4gICAgICAgICAgICBkYW5nZXIsXG4gICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoe1xuICAgICAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIF19XG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4geyB0aGlzLnRvZ2dsZVRyYXkoKTsgaWYgKG9uQ2xpY2spIHsgb25DbGljayh7IGV2ZW50IH0pOyB9IH19XG4gICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICBzdHlsZXMubWFpbixcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5tYWlufVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjc3M9e1tzdHlsZXMuaW5mb0NvbnRhaW5lcl19IGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbmZvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsoYXZhdGFyTGVmdCAmJiAhYXZhdGFyUmlnaHQpICYmIGltYWdlfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmluZm8sXG4gICAgICAgICAgICAgICAgc20gJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC5zbSxcbiAgICAgICAgICAgICAgICBtZCAmJiBzdHlsZXMuaGlkZS5icmVha3BvaW50Lm1kLFxuICAgICAgICAgICAgICAgIGxnICYmIHN0eWxlcy5oaWRlLmJyZWFrcG9pbnQubGcsXG4gICAgICAgICAgICAgICAgeGwgJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC54bCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmluZm99XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8c3Bhbj57d2VsY29tZU1lc3NhZ2V9PC9zcGFuPn1cbiAgICAgICAgICAgICAgeyhzaG93TWVzc2FnZSAmJiB1c2VyTmFtZSkgJiYgJywgJ31cbiAgICAgICAgICAgICAgPHNwYW4+e3VzZXJOYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHthdmF0YXJSaWdodCAmJiBpbWFnZX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8SW9NZEFycm93RHJvcGRvd24gY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmljb259IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS50cmF5T3BlblxuICAgICAgICAgICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgZHJvcERvd25Ub3AgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LnRvcCxcbiAgICAgICAgICAgICAgKGRyb3BEb3duQm90dG9tICYmICFkcm9wRG93blRvcCkgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LmJvdHRvbSxcbiAgICAgICAgICAgICAgc3R5bGVzLnpkSW5kZXguejEwMDAwLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW4gJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMuY2xvc2VUcmF5KSA6IGNoaWxkcmVuKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7XG4iXX0= */\")),\n        className: _styles.BEMClassNames.imgContainer\n      }, (0, _core.jsx)(\"img\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.img], \"label:image;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMklVIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbHQtdGV4dCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBJb01kQXJyb3dEcm9wZG93biB9IGZyb20gJ3JlYWN0LWljb25zL2lvJztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCB7IGRlZmF1bHRUaGVtZVByb3BUeXBlcywgdGhlbWVQcm9wVHlwZXMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jbGFzcyBVc2VyUHJvZmlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXJuYW1lIHZhbHVlIG9mIHRoZSB1c2VyXG4gICAgICovXG4gICAgdXNlck5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBhdmF0YXIgaXMgcGxhY2UgbGVmdCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhckxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGF2YXRhciBpcyBwbGFjZSByaWdodCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhclJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGlzIHRvIHNob3duXG4gICAgICogRGVmYXVsdHMgdG8gdHJ1ZVxuICAgICAqL1xuICAgIHNob3dNZXNzYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBUaGUgd2VsY29tZSBtZXNhYWdlXG4gICAgICovXG4gICAgd2VsY29tZU1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogVGhlIGBwYXRoYCBvZiB0aGUgYXZhdGFyXG4gICAgICovXG4gICAgaW1nUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIHRvcFxuICAgICAqIERlZmF1bHRzIHRvIGZhbHNlXG4gICAgICovXG4gICAgZHJvcERvd25Ub3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIGJvdHRvbVxuICAgICAqIERlZmF1bHRzIHRvIHRydWVcbiAgICAgKi9cbiAgICBkcm9wRG93bkJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgbWVzc2FnZSBhbmQgdXNlcm5hbWUgaXNcbiAgICAgKiBub3Qgc2hvd24gb24gc20gc2NyZWVucy5cbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgc206IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1lc3NhZ2UgYW5kIHVzZXJuYW1lIGlzXG4gICAgICogbm90IHNob3duIG9uIHNtIHNjcmVlbnMuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIG1kOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICAqIG5vdCBzaG93biBvbiBsZyBzY3JlZW5zLlxuICAgICAqIERlZmF1bHRzIHRvICdmYWxzZSdcbiAgICAgKi9cbiAgICBsZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICogbm90IHNob3duIG9uIHhsIHNjcmVlbnMuXG4gICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgKi9cbiAgICB4bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkXG4gICAgICogRGVmYXVsdCBpcyAnZmFsc2UnXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAgICovXG4gICAgLi4udGhlbWVQcm9wVHlwZXMsXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGF2YXRhckxlZnQ6IHRydWUsXG4gICAgYXZhdGFyUmlnaHQ6IGZhbHNlLFxuICAgIHNob3dNZXNzYWdlOiB0cnVlLFxuICAgIHdlbGNvbWVNZXNzYWdlOiAnV2VsY29tZScsXG4gICAgZHJvcERvd25Ub3A6IGZhbHNlLFxuICAgIGRyb3BEb3duQm90dG9tOiB0cnVlLFxuICAgIHNtOiBmYWxzZSxcbiAgICBtZDogZmFsc2UsXG4gICAgbGc6IGZhbHNlLFxuICAgIHhsOiBmYWxzZSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgLi4uZGVmYXVsdFRoZW1lUHJvcFR5cGVzLFxuICB9XG5cbiAgc3RhdGUgPSB7IHRyYXlPcGVuOiBmYWxzZSB9XG5cbiAgY2xvc2VUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmF5T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICB0b2dnbGVUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IHRyYXlPcGVuOiAhcHJldlN0YXRlLnRyYXlPcGVuIH0pKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgYXZhdGFyTGVmdCxcbiAgICAgIGF2YXRhclJpZ2h0LFxuICAgICAgc2hvd01lc3NhZ2UsXG4gICAgICB3ZWxjb21lTWVzc2FnZSxcbiAgICAgIGRyb3BEb3duVG9wLFxuICAgICAgZHJvcERvd25Cb3R0b20sXG4gICAgICBzbSxcbiAgICAgIG1kLFxuICAgICAgbGcsXG4gICAgICB4bCxcbiAgICAgIGltZ1BhdGgsXG4gICAgICBwcmltYXJ5LFxuICAgICAgc2Vjb25kYXJ5LFxuICAgICAgZGFyayxcbiAgICAgIGxpZ2h0LFxuICAgICAgaW5mbyxcbiAgICAgIHdhcm5pbmcsXG4gICAgICBkYW5nZXIsXG4gICAgICBzdWNjZXNzLFxuICAgICAgdGhlbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBpbWFnZSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbc3R5bGVzLmltZ0NvbnRhaW5lcl19XG4gICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbWdDb250YWluZXJ9XG4gICAgICA+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjc3M9e1tzdHlsZXMuaW1nXX1cbiAgICAgICAgICBjbGFzc05hbWU9e0JFTUNsYXNzTmFtZXMuaW1nfVxuICAgICAgICAgIHNyYz17aW1nUGF0aH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBzdHlsZXMuZ2V0QmFja2dyb3VuZENvbG9yU3R5bGUoe1xuICAgICAgICAgICAgcHJpbWFyeSxcbiAgICAgICAgICAgIHNlY29uZGFyeSxcbiAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICBsaWdodCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgZGFuZ2VyLFxuICAgICAgICAgICAgc3VjY2VzcyxcbiAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlcy5nZXRGb250Q29sb3JTdHlsZSh7XG4gICAgICAgICAgICBwcmltYXJ5LFxuICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgZGFyayxcbiAgICAgICAgICAgIGxpZ2h0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgIHdhcm5pbmcsXG4gICAgICAgICAgICBkYW5nZXIsXG4gICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoe1xuICAgICAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIF19XG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4geyB0aGlzLnRvZ2dsZVRyYXkoKTsgaWYgKG9uQ2xpY2spIHsgb25DbGljayh7IGV2ZW50IH0pOyB9IH19XG4gICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICBzdHlsZXMubWFpbixcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5tYWlufVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjc3M9e1tzdHlsZXMuaW5mb0NvbnRhaW5lcl19IGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbmZvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsoYXZhdGFyTGVmdCAmJiAhYXZhdGFyUmlnaHQpICYmIGltYWdlfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmluZm8sXG4gICAgICAgICAgICAgICAgc20gJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC5zbSxcbiAgICAgICAgICAgICAgICBtZCAmJiBzdHlsZXMuaGlkZS5icmVha3BvaW50Lm1kLFxuICAgICAgICAgICAgICAgIGxnICYmIHN0eWxlcy5oaWRlLmJyZWFrcG9pbnQubGcsXG4gICAgICAgICAgICAgICAgeGwgJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC54bCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmluZm99XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8c3Bhbj57d2VsY29tZU1lc3NhZ2V9PC9zcGFuPn1cbiAgICAgICAgICAgICAgeyhzaG93TWVzc2FnZSAmJiB1c2VyTmFtZSkgJiYgJywgJ31cbiAgICAgICAgICAgICAgPHNwYW4+e3VzZXJOYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHthdmF0YXJSaWdodCAmJiBpbWFnZX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8SW9NZEFycm93RHJvcGRvd24gY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmljb259IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS50cmF5T3BlblxuICAgICAgICAgICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgZHJvcERvd25Ub3AgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LnRvcCxcbiAgICAgICAgICAgICAgKGRyb3BEb3duQm90dG9tICYmICFkcm9wRG93blRvcCkgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LmJvdHRvbSxcbiAgICAgICAgICAgICAgc3R5bGVzLnpkSW5kZXguejEwMDAwLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW4gJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMuY2xvc2VUcmF5KSA6IGNoaWxkcmVuKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7XG4iXX0= */\")),\n        className: _styles.BEMClassNames.img,\n        src: imgPath\n      }));\n      return (0, _core.jsx)(\"div\", _extends({\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.container, _styles.styles.getBackgroundColorStyle({\n          primary: primary,\n          secondary: secondary,\n          dark: dark,\n          light: light,\n          info: info,\n          warning: warning,\n          danger: danger,\n          success: success,\n          theme: theme\n        }), _styles.styles.getFontColorStyle({\n          primary: primary,\n          secondary: secondary,\n          dark: dark,\n          light: light,\n          info: info,\n          warning: warning,\n          danger: danger,\n          success: success,\n          theme: theme\n        }), _styles.styles.getDisabledStyle({\n          disabled: disabled\n        })], \"label:UserProfile;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUpRIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbHQtdGV4dCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBJb01kQXJyb3dEcm9wZG93biB9IGZyb20gJ3JlYWN0LWljb25zL2lvJztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCB7IGRlZmF1bHRUaGVtZVByb3BUeXBlcywgdGhlbWVQcm9wVHlwZXMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jbGFzcyBVc2VyUHJvZmlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXJuYW1lIHZhbHVlIG9mIHRoZSB1c2VyXG4gICAgICovXG4gICAgdXNlck5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBhdmF0YXIgaXMgcGxhY2UgbGVmdCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhckxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGF2YXRhciBpcyBwbGFjZSByaWdodCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhclJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGlzIHRvIHNob3duXG4gICAgICogRGVmYXVsdHMgdG8gdHJ1ZVxuICAgICAqL1xuICAgIHNob3dNZXNzYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBUaGUgd2VsY29tZSBtZXNhYWdlXG4gICAgICovXG4gICAgd2VsY29tZU1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogVGhlIGBwYXRoYCBvZiB0aGUgYXZhdGFyXG4gICAgICovXG4gICAgaW1nUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIHRvcFxuICAgICAqIERlZmF1bHRzIHRvIGZhbHNlXG4gICAgICovXG4gICAgZHJvcERvd25Ub3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIGJvdHRvbVxuICAgICAqIERlZmF1bHRzIHRvIHRydWVcbiAgICAgKi9cbiAgICBkcm9wRG93bkJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgbWVzc2FnZSBhbmQgdXNlcm5hbWUgaXNcbiAgICAgKiBub3Qgc2hvd24gb24gc20gc2NyZWVucy5cbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgc206IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1lc3NhZ2UgYW5kIHVzZXJuYW1lIGlzXG4gICAgICogbm90IHNob3duIG9uIHNtIHNjcmVlbnMuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIG1kOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICAqIG5vdCBzaG93biBvbiBsZyBzY3JlZW5zLlxuICAgICAqIERlZmF1bHRzIHRvICdmYWxzZSdcbiAgICAgKi9cbiAgICBsZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICogbm90IHNob3duIG9uIHhsIHNjcmVlbnMuXG4gICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgKi9cbiAgICB4bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkXG4gICAgICogRGVmYXVsdCBpcyAnZmFsc2UnXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAgICovXG4gICAgLi4udGhlbWVQcm9wVHlwZXMsXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGF2YXRhckxlZnQ6IHRydWUsXG4gICAgYXZhdGFyUmlnaHQ6IGZhbHNlLFxuICAgIHNob3dNZXNzYWdlOiB0cnVlLFxuICAgIHdlbGNvbWVNZXNzYWdlOiAnV2VsY29tZScsXG4gICAgZHJvcERvd25Ub3A6IGZhbHNlLFxuICAgIGRyb3BEb3duQm90dG9tOiB0cnVlLFxuICAgIHNtOiBmYWxzZSxcbiAgICBtZDogZmFsc2UsXG4gICAgbGc6IGZhbHNlLFxuICAgIHhsOiBmYWxzZSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgLi4uZGVmYXVsdFRoZW1lUHJvcFR5cGVzLFxuICB9XG5cbiAgc3RhdGUgPSB7IHRyYXlPcGVuOiBmYWxzZSB9XG5cbiAgY2xvc2VUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmF5T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICB0b2dnbGVUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IHRyYXlPcGVuOiAhcHJldlN0YXRlLnRyYXlPcGVuIH0pKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgYXZhdGFyTGVmdCxcbiAgICAgIGF2YXRhclJpZ2h0LFxuICAgICAgc2hvd01lc3NhZ2UsXG4gICAgICB3ZWxjb21lTWVzc2FnZSxcbiAgICAgIGRyb3BEb3duVG9wLFxuICAgICAgZHJvcERvd25Cb3R0b20sXG4gICAgICBzbSxcbiAgICAgIG1kLFxuICAgICAgbGcsXG4gICAgICB4bCxcbiAgICAgIGltZ1BhdGgsXG4gICAgICBwcmltYXJ5LFxuICAgICAgc2Vjb25kYXJ5LFxuICAgICAgZGFyayxcbiAgICAgIGxpZ2h0LFxuICAgICAgaW5mbyxcbiAgICAgIHdhcm5pbmcsXG4gICAgICBkYW5nZXIsXG4gICAgICBzdWNjZXNzLFxuICAgICAgdGhlbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBpbWFnZSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbc3R5bGVzLmltZ0NvbnRhaW5lcl19XG4gICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbWdDb250YWluZXJ9XG4gICAgICA+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjc3M9e1tzdHlsZXMuaW1nXX1cbiAgICAgICAgICBjbGFzc05hbWU9e0JFTUNsYXNzTmFtZXMuaW1nfVxuICAgICAgICAgIHNyYz17aW1nUGF0aH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBzdHlsZXMuZ2V0QmFja2dyb3VuZENvbG9yU3R5bGUoe1xuICAgICAgICAgICAgcHJpbWFyeSxcbiAgICAgICAgICAgIHNlY29uZGFyeSxcbiAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICBsaWdodCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgZGFuZ2VyLFxuICAgICAgICAgICAgc3VjY2VzcyxcbiAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlcy5nZXRGb250Q29sb3JTdHlsZSh7XG4gICAgICAgICAgICBwcmltYXJ5LFxuICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgZGFyayxcbiAgICAgICAgICAgIGxpZ2h0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgIHdhcm5pbmcsXG4gICAgICAgICAgICBkYW5nZXIsXG4gICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoe1xuICAgICAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIF19XG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4geyB0aGlzLnRvZ2dsZVRyYXkoKTsgaWYgKG9uQ2xpY2spIHsgb25DbGljayh7IGV2ZW50IH0pOyB9IH19XG4gICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICBzdHlsZXMubWFpbixcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5tYWlufVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjc3M9e1tzdHlsZXMuaW5mb0NvbnRhaW5lcl19IGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbmZvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsoYXZhdGFyTGVmdCAmJiAhYXZhdGFyUmlnaHQpICYmIGltYWdlfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmluZm8sXG4gICAgICAgICAgICAgICAgc20gJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC5zbSxcbiAgICAgICAgICAgICAgICBtZCAmJiBzdHlsZXMuaGlkZS5icmVha3BvaW50Lm1kLFxuICAgICAgICAgICAgICAgIGxnICYmIHN0eWxlcy5oaWRlLmJyZWFrcG9pbnQubGcsXG4gICAgICAgICAgICAgICAgeGwgJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC54bCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmluZm99XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8c3Bhbj57d2VsY29tZU1lc3NhZ2V9PC9zcGFuPn1cbiAgICAgICAgICAgICAgeyhzaG93TWVzc2FnZSAmJiB1c2VyTmFtZSkgJiYgJywgJ31cbiAgICAgICAgICAgICAgPHNwYW4+e3VzZXJOYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHthdmF0YXJSaWdodCAmJiBpbWFnZX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8SW9NZEFycm93RHJvcGRvd24gY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmljb259IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS50cmF5T3BlblxuICAgICAgICAgICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgZHJvcERvd25Ub3AgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LnRvcCxcbiAgICAgICAgICAgICAgKGRyb3BEb3duQm90dG9tICYmICFkcm9wRG93blRvcCkgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LmJvdHRvbSxcbiAgICAgICAgICAgICAgc3R5bGVzLnpkSW5kZXguejEwMDAwLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW4gJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMuY2xvc2VUcmF5KSA6IGNoaWxkcmVuKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7XG4iXX0= */\")),\n        onClick: function onClick(event) {\n          _this2.toggleTray();\n\n          if (_onClick) {\n            _onClick({\n              event: event\n            });\n          }\n        }\n      }, otherProps), (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.main], \"label:UserProfile;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUxVIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbHQtdGV4dCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBJb01kQXJyb3dEcm9wZG93biB9IGZyb20gJ3JlYWN0LWljb25zL2lvJztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCB7IGRlZmF1bHRUaGVtZVByb3BUeXBlcywgdGhlbWVQcm9wVHlwZXMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jbGFzcyBVc2VyUHJvZmlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXJuYW1lIHZhbHVlIG9mIHRoZSB1c2VyXG4gICAgICovXG4gICAgdXNlck5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBhdmF0YXIgaXMgcGxhY2UgbGVmdCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhckxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGF2YXRhciBpcyBwbGFjZSByaWdodCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhclJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGlzIHRvIHNob3duXG4gICAgICogRGVmYXVsdHMgdG8gdHJ1ZVxuICAgICAqL1xuICAgIHNob3dNZXNzYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBUaGUgd2VsY29tZSBtZXNhYWdlXG4gICAgICovXG4gICAgd2VsY29tZU1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogVGhlIGBwYXRoYCBvZiB0aGUgYXZhdGFyXG4gICAgICovXG4gICAgaW1nUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIHRvcFxuICAgICAqIERlZmF1bHRzIHRvIGZhbHNlXG4gICAgICovXG4gICAgZHJvcERvd25Ub3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIGJvdHRvbVxuICAgICAqIERlZmF1bHRzIHRvIHRydWVcbiAgICAgKi9cbiAgICBkcm9wRG93bkJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgbWVzc2FnZSBhbmQgdXNlcm5hbWUgaXNcbiAgICAgKiBub3Qgc2hvd24gb24gc20gc2NyZWVucy5cbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgc206IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1lc3NhZ2UgYW5kIHVzZXJuYW1lIGlzXG4gICAgICogbm90IHNob3duIG9uIHNtIHNjcmVlbnMuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIG1kOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICAqIG5vdCBzaG93biBvbiBsZyBzY3JlZW5zLlxuICAgICAqIERlZmF1bHRzIHRvICdmYWxzZSdcbiAgICAgKi9cbiAgICBsZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICogbm90IHNob3duIG9uIHhsIHNjcmVlbnMuXG4gICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgKi9cbiAgICB4bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkXG4gICAgICogRGVmYXVsdCBpcyAnZmFsc2UnXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAgICovXG4gICAgLi4udGhlbWVQcm9wVHlwZXMsXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGF2YXRhckxlZnQ6IHRydWUsXG4gICAgYXZhdGFyUmlnaHQ6IGZhbHNlLFxuICAgIHNob3dNZXNzYWdlOiB0cnVlLFxuICAgIHdlbGNvbWVNZXNzYWdlOiAnV2VsY29tZScsXG4gICAgZHJvcERvd25Ub3A6IGZhbHNlLFxuICAgIGRyb3BEb3duQm90dG9tOiB0cnVlLFxuICAgIHNtOiBmYWxzZSxcbiAgICBtZDogZmFsc2UsXG4gICAgbGc6IGZhbHNlLFxuICAgIHhsOiBmYWxzZSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgLi4uZGVmYXVsdFRoZW1lUHJvcFR5cGVzLFxuICB9XG5cbiAgc3RhdGUgPSB7IHRyYXlPcGVuOiBmYWxzZSB9XG5cbiAgY2xvc2VUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmF5T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICB0b2dnbGVUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IHRyYXlPcGVuOiAhcHJldlN0YXRlLnRyYXlPcGVuIH0pKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgYXZhdGFyTGVmdCxcbiAgICAgIGF2YXRhclJpZ2h0LFxuICAgICAgc2hvd01lc3NhZ2UsXG4gICAgICB3ZWxjb21lTWVzc2FnZSxcbiAgICAgIGRyb3BEb3duVG9wLFxuICAgICAgZHJvcERvd25Cb3R0b20sXG4gICAgICBzbSxcbiAgICAgIG1kLFxuICAgICAgbGcsXG4gICAgICB4bCxcbiAgICAgIGltZ1BhdGgsXG4gICAgICBwcmltYXJ5LFxuICAgICAgc2Vjb25kYXJ5LFxuICAgICAgZGFyayxcbiAgICAgIGxpZ2h0LFxuICAgICAgaW5mbyxcbiAgICAgIHdhcm5pbmcsXG4gICAgICBkYW5nZXIsXG4gICAgICBzdWNjZXNzLFxuICAgICAgdGhlbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBpbWFnZSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbc3R5bGVzLmltZ0NvbnRhaW5lcl19XG4gICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbWdDb250YWluZXJ9XG4gICAgICA+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjc3M9e1tzdHlsZXMuaW1nXX1cbiAgICAgICAgICBjbGFzc05hbWU9e0JFTUNsYXNzTmFtZXMuaW1nfVxuICAgICAgICAgIHNyYz17aW1nUGF0aH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBzdHlsZXMuZ2V0QmFja2dyb3VuZENvbG9yU3R5bGUoe1xuICAgICAgICAgICAgcHJpbWFyeSxcbiAgICAgICAgICAgIHNlY29uZGFyeSxcbiAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICBsaWdodCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgZGFuZ2VyLFxuICAgICAgICAgICAgc3VjY2VzcyxcbiAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlcy5nZXRGb250Q29sb3JTdHlsZSh7XG4gICAgICAgICAgICBwcmltYXJ5LFxuICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgZGFyayxcbiAgICAgICAgICAgIGxpZ2h0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgIHdhcm5pbmcsXG4gICAgICAgICAgICBkYW5nZXIsXG4gICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoe1xuICAgICAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIF19XG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4geyB0aGlzLnRvZ2dsZVRyYXkoKTsgaWYgKG9uQ2xpY2spIHsgb25DbGljayh7IGV2ZW50IH0pOyB9IH19XG4gICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICBzdHlsZXMubWFpbixcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5tYWlufVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjc3M9e1tzdHlsZXMuaW5mb0NvbnRhaW5lcl19IGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbmZvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsoYXZhdGFyTGVmdCAmJiAhYXZhdGFyUmlnaHQpICYmIGltYWdlfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmluZm8sXG4gICAgICAgICAgICAgICAgc20gJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC5zbSxcbiAgICAgICAgICAgICAgICBtZCAmJiBzdHlsZXMuaGlkZS5icmVha3BvaW50Lm1kLFxuICAgICAgICAgICAgICAgIGxnICYmIHN0eWxlcy5oaWRlLmJyZWFrcG9pbnQubGcsXG4gICAgICAgICAgICAgICAgeGwgJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC54bCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmluZm99XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8c3Bhbj57d2VsY29tZU1lc3NhZ2V9PC9zcGFuPn1cbiAgICAgICAgICAgICAgeyhzaG93TWVzc2FnZSAmJiB1c2VyTmFtZSkgJiYgJywgJ31cbiAgICAgICAgICAgICAgPHNwYW4+e3VzZXJOYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHthdmF0YXJSaWdodCAmJiBpbWFnZX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8SW9NZEFycm93RHJvcGRvd24gY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmljb259IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS50cmF5T3BlblxuICAgICAgICAgICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgZHJvcERvd25Ub3AgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LnRvcCxcbiAgICAgICAgICAgICAgKGRyb3BEb3duQm90dG9tICYmICFkcm9wRG93blRvcCkgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LmJvdHRvbSxcbiAgICAgICAgICAgICAgc3R5bGVzLnpkSW5kZXguejEwMDAwLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW4gJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMuY2xvc2VUcmF5KSA6IGNoaWxkcmVuKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7XG4iXX0= */\")),\n        className: _styles.BEMClassNames.main\n      }, (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.infoContainer], \"label:UserProfile;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0xlIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbHQtdGV4dCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBJb01kQXJyb3dEcm9wZG93biB9IGZyb20gJ3JlYWN0LWljb25zL2lvJztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCB7IGRlZmF1bHRUaGVtZVByb3BUeXBlcywgdGhlbWVQcm9wVHlwZXMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jbGFzcyBVc2VyUHJvZmlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXJuYW1lIHZhbHVlIG9mIHRoZSB1c2VyXG4gICAgICovXG4gICAgdXNlck5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBhdmF0YXIgaXMgcGxhY2UgbGVmdCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhckxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGF2YXRhciBpcyBwbGFjZSByaWdodCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhclJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGlzIHRvIHNob3duXG4gICAgICogRGVmYXVsdHMgdG8gdHJ1ZVxuICAgICAqL1xuICAgIHNob3dNZXNzYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBUaGUgd2VsY29tZSBtZXNhYWdlXG4gICAgICovXG4gICAgd2VsY29tZU1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogVGhlIGBwYXRoYCBvZiB0aGUgYXZhdGFyXG4gICAgICovXG4gICAgaW1nUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIHRvcFxuICAgICAqIERlZmF1bHRzIHRvIGZhbHNlXG4gICAgICovXG4gICAgZHJvcERvd25Ub3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIGJvdHRvbVxuICAgICAqIERlZmF1bHRzIHRvIHRydWVcbiAgICAgKi9cbiAgICBkcm9wRG93bkJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgbWVzc2FnZSBhbmQgdXNlcm5hbWUgaXNcbiAgICAgKiBub3Qgc2hvd24gb24gc20gc2NyZWVucy5cbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgc206IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1lc3NhZ2UgYW5kIHVzZXJuYW1lIGlzXG4gICAgICogbm90IHNob3duIG9uIHNtIHNjcmVlbnMuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIG1kOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICAqIG5vdCBzaG93biBvbiBsZyBzY3JlZW5zLlxuICAgICAqIERlZmF1bHRzIHRvICdmYWxzZSdcbiAgICAgKi9cbiAgICBsZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICogbm90IHNob3duIG9uIHhsIHNjcmVlbnMuXG4gICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgKi9cbiAgICB4bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkXG4gICAgICogRGVmYXVsdCBpcyAnZmFsc2UnXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAgICovXG4gICAgLi4udGhlbWVQcm9wVHlwZXMsXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGF2YXRhckxlZnQ6IHRydWUsXG4gICAgYXZhdGFyUmlnaHQ6IGZhbHNlLFxuICAgIHNob3dNZXNzYWdlOiB0cnVlLFxuICAgIHdlbGNvbWVNZXNzYWdlOiAnV2VsY29tZScsXG4gICAgZHJvcERvd25Ub3A6IGZhbHNlLFxuICAgIGRyb3BEb3duQm90dG9tOiB0cnVlLFxuICAgIHNtOiBmYWxzZSxcbiAgICBtZDogZmFsc2UsXG4gICAgbGc6IGZhbHNlLFxuICAgIHhsOiBmYWxzZSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgLi4uZGVmYXVsdFRoZW1lUHJvcFR5cGVzLFxuICB9XG5cbiAgc3RhdGUgPSB7IHRyYXlPcGVuOiBmYWxzZSB9XG5cbiAgY2xvc2VUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmF5T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICB0b2dnbGVUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IHRyYXlPcGVuOiAhcHJldlN0YXRlLnRyYXlPcGVuIH0pKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgYXZhdGFyTGVmdCxcbiAgICAgIGF2YXRhclJpZ2h0LFxuICAgICAgc2hvd01lc3NhZ2UsXG4gICAgICB3ZWxjb21lTWVzc2FnZSxcbiAgICAgIGRyb3BEb3duVG9wLFxuICAgICAgZHJvcERvd25Cb3R0b20sXG4gICAgICBzbSxcbiAgICAgIG1kLFxuICAgICAgbGcsXG4gICAgICB4bCxcbiAgICAgIGltZ1BhdGgsXG4gICAgICBwcmltYXJ5LFxuICAgICAgc2Vjb25kYXJ5LFxuICAgICAgZGFyayxcbiAgICAgIGxpZ2h0LFxuICAgICAgaW5mbyxcbiAgICAgIHdhcm5pbmcsXG4gICAgICBkYW5nZXIsXG4gICAgICBzdWNjZXNzLFxuICAgICAgdGhlbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBpbWFnZSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbc3R5bGVzLmltZ0NvbnRhaW5lcl19XG4gICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbWdDb250YWluZXJ9XG4gICAgICA+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjc3M9e1tzdHlsZXMuaW1nXX1cbiAgICAgICAgICBjbGFzc05hbWU9e0JFTUNsYXNzTmFtZXMuaW1nfVxuICAgICAgICAgIHNyYz17aW1nUGF0aH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBzdHlsZXMuZ2V0QmFja2dyb3VuZENvbG9yU3R5bGUoe1xuICAgICAgICAgICAgcHJpbWFyeSxcbiAgICAgICAgICAgIHNlY29uZGFyeSxcbiAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICBsaWdodCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgZGFuZ2VyLFxuICAgICAgICAgICAgc3VjY2VzcyxcbiAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlcy5nZXRGb250Q29sb3JTdHlsZSh7XG4gICAgICAgICAgICBwcmltYXJ5LFxuICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgZGFyayxcbiAgICAgICAgICAgIGxpZ2h0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgIHdhcm5pbmcsXG4gICAgICAgICAgICBkYW5nZXIsXG4gICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoe1xuICAgICAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIF19XG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4geyB0aGlzLnRvZ2dsZVRyYXkoKTsgaWYgKG9uQ2xpY2spIHsgb25DbGljayh7IGV2ZW50IH0pOyB9IH19XG4gICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICBzdHlsZXMubWFpbixcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5tYWlufVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjc3M9e1tzdHlsZXMuaW5mb0NvbnRhaW5lcl19IGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbmZvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsoYXZhdGFyTGVmdCAmJiAhYXZhdGFyUmlnaHQpICYmIGltYWdlfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmluZm8sXG4gICAgICAgICAgICAgICAgc20gJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC5zbSxcbiAgICAgICAgICAgICAgICBtZCAmJiBzdHlsZXMuaGlkZS5icmVha3BvaW50Lm1kLFxuICAgICAgICAgICAgICAgIGxnICYmIHN0eWxlcy5oaWRlLmJyZWFrcG9pbnQubGcsXG4gICAgICAgICAgICAgICAgeGwgJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC54bCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmluZm99XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8c3Bhbj57d2VsY29tZU1lc3NhZ2V9PC9zcGFuPn1cbiAgICAgICAgICAgICAgeyhzaG93TWVzc2FnZSAmJiB1c2VyTmFtZSkgJiYgJywgJ31cbiAgICAgICAgICAgICAgPHNwYW4+e3VzZXJOYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHthdmF0YXJSaWdodCAmJiBpbWFnZX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8SW9NZEFycm93RHJvcGRvd24gY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmljb259IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS50cmF5T3BlblxuICAgICAgICAgICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgZHJvcERvd25Ub3AgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LnRvcCxcbiAgICAgICAgICAgICAgKGRyb3BEb3duQm90dG9tICYmICFkcm9wRG93blRvcCkgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LmJvdHRvbSxcbiAgICAgICAgICAgICAgc3R5bGVzLnpkSW5kZXguejEwMDAwLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW4gJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMuY2xvc2VUcmF5KSA6IGNoaWxkcmVuKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7XG4iXX0= */\")),\n        className: _styles.BEMClassNames.infoContainer\n      }, avatarLeft && !avatarRight && image, (0, _core.jsx)(\"span\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.info, sm && _styles.styles.hide.breakpoint.sm, md && _styles.styles.hide.breakpoint.md, lg && _styles.styles.hide.breakpoint.lg, xl && _styles.styles.hide.breakpoint.xl], \"label:UserProfile;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkxjIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbHQtdGV4dCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBJb01kQXJyb3dEcm9wZG93biB9IGZyb20gJ3JlYWN0LWljb25zL2lvJztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCB7IGRlZmF1bHRUaGVtZVByb3BUeXBlcywgdGhlbWVQcm9wVHlwZXMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jbGFzcyBVc2VyUHJvZmlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXJuYW1lIHZhbHVlIG9mIHRoZSB1c2VyXG4gICAgICovXG4gICAgdXNlck5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBhdmF0YXIgaXMgcGxhY2UgbGVmdCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhckxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGF2YXRhciBpcyBwbGFjZSByaWdodCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhclJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGlzIHRvIHNob3duXG4gICAgICogRGVmYXVsdHMgdG8gdHJ1ZVxuICAgICAqL1xuICAgIHNob3dNZXNzYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBUaGUgd2VsY29tZSBtZXNhYWdlXG4gICAgICovXG4gICAgd2VsY29tZU1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogVGhlIGBwYXRoYCBvZiB0aGUgYXZhdGFyXG4gICAgICovXG4gICAgaW1nUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIHRvcFxuICAgICAqIERlZmF1bHRzIHRvIGZhbHNlXG4gICAgICovXG4gICAgZHJvcERvd25Ub3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIGJvdHRvbVxuICAgICAqIERlZmF1bHRzIHRvIHRydWVcbiAgICAgKi9cbiAgICBkcm9wRG93bkJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgbWVzc2FnZSBhbmQgdXNlcm5hbWUgaXNcbiAgICAgKiBub3Qgc2hvd24gb24gc20gc2NyZWVucy5cbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgc206IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1lc3NhZ2UgYW5kIHVzZXJuYW1lIGlzXG4gICAgICogbm90IHNob3duIG9uIHNtIHNjcmVlbnMuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIG1kOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICAqIG5vdCBzaG93biBvbiBsZyBzY3JlZW5zLlxuICAgICAqIERlZmF1bHRzIHRvICdmYWxzZSdcbiAgICAgKi9cbiAgICBsZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICogbm90IHNob3duIG9uIHhsIHNjcmVlbnMuXG4gICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgKi9cbiAgICB4bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkXG4gICAgICogRGVmYXVsdCBpcyAnZmFsc2UnXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAgICovXG4gICAgLi4udGhlbWVQcm9wVHlwZXMsXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGF2YXRhckxlZnQ6IHRydWUsXG4gICAgYXZhdGFyUmlnaHQ6IGZhbHNlLFxuICAgIHNob3dNZXNzYWdlOiB0cnVlLFxuICAgIHdlbGNvbWVNZXNzYWdlOiAnV2VsY29tZScsXG4gICAgZHJvcERvd25Ub3A6IGZhbHNlLFxuICAgIGRyb3BEb3duQm90dG9tOiB0cnVlLFxuICAgIHNtOiBmYWxzZSxcbiAgICBtZDogZmFsc2UsXG4gICAgbGc6IGZhbHNlLFxuICAgIHhsOiBmYWxzZSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgLi4uZGVmYXVsdFRoZW1lUHJvcFR5cGVzLFxuICB9XG5cbiAgc3RhdGUgPSB7IHRyYXlPcGVuOiBmYWxzZSB9XG5cbiAgY2xvc2VUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmF5T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICB0b2dnbGVUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IHRyYXlPcGVuOiAhcHJldlN0YXRlLnRyYXlPcGVuIH0pKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgYXZhdGFyTGVmdCxcbiAgICAgIGF2YXRhclJpZ2h0LFxuICAgICAgc2hvd01lc3NhZ2UsXG4gICAgICB3ZWxjb21lTWVzc2FnZSxcbiAgICAgIGRyb3BEb3duVG9wLFxuICAgICAgZHJvcERvd25Cb3R0b20sXG4gICAgICBzbSxcbiAgICAgIG1kLFxuICAgICAgbGcsXG4gICAgICB4bCxcbiAgICAgIGltZ1BhdGgsXG4gICAgICBwcmltYXJ5LFxuICAgICAgc2Vjb25kYXJ5LFxuICAgICAgZGFyayxcbiAgICAgIGxpZ2h0LFxuICAgICAgaW5mbyxcbiAgICAgIHdhcm5pbmcsXG4gICAgICBkYW5nZXIsXG4gICAgICBzdWNjZXNzLFxuICAgICAgdGhlbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBpbWFnZSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbc3R5bGVzLmltZ0NvbnRhaW5lcl19XG4gICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbWdDb250YWluZXJ9XG4gICAgICA+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjc3M9e1tzdHlsZXMuaW1nXX1cbiAgICAgICAgICBjbGFzc05hbWU9e0JFTUNsYXNzTmFtZXMuaW1nfVxuICAgICAgICAgIHNyYz17aW1nUGF0aH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBzdHlsZXMuZ2V0QmFja2dyb3VuZENvbG9yU3R5bGUoe1xuICAgICAgICAgICAgcHJpbWFyeSxcbiAgICAgICAgICAgIHNlY29uZGFyeSxcbiAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICBsaWdodCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgZGFuZ2VyLFxuICAgICAgICAgICAgc3VjY2VzcyxcbiAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlcy5nZXRGb250Q29sb3JTdHlsZSh7XG4gICAgICAgICAgICBwcmltYXJ5LFxuICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgZGFyayxcbiAgICAgICAgICAgIGxpZ2h0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgIHdhcm5pbmcsXG4gICAgICAgICAgICBkYW5nZXIsXG4gICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoe1xuICAgICAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIF19XG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4geyB0aGlzLnRvZ2dsZVRyYXkoKTsgaWYgKG9uQ2xpY2spIHsgb25DbGljayh7IGV2ZW50IH0pOyB9IH19XG4gICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICBzdHlsZXMubWFpbixcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5tYWlufVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjc3M9e1tzdHlsZXMuaW5mb0NvbnRhaW5lcl19IGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbmZvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsoYXZhdGFyTGVmdCAmJiAhYXZhdGFyUmlnaHQpICYmIGltYWdlfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmluZm8sXG4gICAgICAgICAgICAgICAgc20gJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC5zbSxcbiAgICAgICAgICAgICAgICBtZCAmJiBzdHlsZXMuaGlkZS5icmVha3BvaW50Lm1kLFxuICAgICAgICAgICAgICAgIGxnICYmIHN0eWxlcy5oaWRlLmJyZWFrcG9pbnQubGcsXG4gICAgICAgICAgICAgICAgeGwgJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC54bCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmluZm99XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8c3Bhbj57d2VsY29tZU1lc3NhZ2V9PC9zcGFuPn1cbiAgICAgICAgICAgICAgeyhzaG93TWVzc2FnZSAmJiB1c2VyTmFtZSkgJiYgJywgJ31cbiAgICAgICAgICAgICAgPHNwYW4+e3VzZXJOYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHthdmF0YXJSaWdodCAmJiBpbWFnZX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8SW9NZEFycm93RHJvcGRvd24gY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmljb259IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS50cmF5T3BlblxuICAgICAgICAgICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgZHJvcERvd25Ub3AgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LnRvcCxcbiAgICAgICAgICAgICAgKGRyb3BEb3duQm90dG9tICYmICFkcm9wRG93blRvcCkgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LmJvdHRvbSxcbiAgICAgICAgICAgICAgc3R5bGVzLnpkSW5kZXguejEwMDAwLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW4gJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMuY2xvc2VUcmF5KSA6IGNoaWxkcmVuKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7XG4iXX0= */\")),\n        className: _styles.BEMClassNames.info\n      }, showMessage && (0, _core.jsx)(\"span\", null, welcomeMessage), showMessage && userName && ', ', (0, _core.jsx)(\"span\", null, userName)), avatarRight && image), (0, _core.jsx)(_io.IoMdArrowDropdown, {\n        className: _styles.BEMClassNames.icon\n      })), this.state.trayOpen && (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([dropDownTop && _styles.styles.tray.placement.top, dropDownBottom && !dropDownTop && _styles.styles.tray.placement.bottom, _styles.styles.zdIndex.z10000], \"label:UserProfile;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ05ZIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbHQtdGV4dCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBJb01kQXJyb3dEcm9wZG93biB9IGZyb20gJ3JlYWN0LWljb25zL2lvJztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCB7IGRlZmF1bHRUaGVtZVByb3BUeXBlcywgdGhlbWVQcm9wVHlwZXMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jbGFzcyBVc2VyUHJvZmlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogVGhlIHVzZXJuYW1lIHZhbHVlIG9mIHRoZSB1c2VyXG4gICAgICovXG4gICAgdXNlck5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBhdmF0YXIgaXMgcGxhY2UgbGVmdCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhckxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGF2YXRhciBpcyBwbGFjZSByaWdodCBvZiB1c2VybmFtZVxuICAgICAqL1xuICAgIGF2YXRhclJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGlzIHRvIHNob3duXG4gICAgICogRGVmYXVsdHMgdG8gdHJ1ZVxuICAgICAqL1xuICAgIHNob3dNZXNzYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBUaGUgd2VsY29tZSBtZXNhYWdlXG4gICAgICovXG4gICAgd2VsY29tZU1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogVGhlIGBwYXRoYCBvZiB0aGUgYXZhdGFyXG4gICAgICovXG4gICAgaW1nUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIHRvcFxuICAgICAqIERlZmF1bHRzIHRvIGZhbHNlXG4gICAgICovXG4gICAgZHJvcERvd25Ub3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIGRyb3Bkb3duIGlzIHNob3duIGJvdHRvbVxuICAgICAqIERlZmF1bHRzIHRvIHRydWVcbiAgICAgKi9cbiAgICBkcm9wRG93bkJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgbWVzc2FnZSBhbmQgdXNlcm5hbWUgaXNcbiAgICAgKiBub3Qgc2hvd24gb24gc20gc2NyZWVucy5cbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgc206IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1lc3NhZ2UgYW5kIHVzZXJuYW1lIGlzXG4gICAgICogbm90IHNob3duIG9uIHNtIHNjcmVlbnMuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIG1kOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvKipcbiAgICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICAqIG5vdCBzaG93biBvbiBsZyBzY3JlZW5zLlxuICAgICAqIERlZmF1bHRzIHRvICdmYWxzZSdcbiAgICAgKi9cbiAgICBsZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgKiBJZiAndHJ1ZScsIHRoZSBtZXNzYWdlIGFuZCB1c2VybmFtZSBpc1xuICAgICogbm90IHNob3duIG9uIHhsIHNjcmVlbnMuXG4gICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgKi9cbiAgICB4bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkXG4gICAgICogRGVmYXVsdCBpcyAnZmFsc2UnXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAgICovXG4gICAgLi4udGhlbWVQcm9wVHlwZXMsXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGF2YXRhckxlZnQ6IHRydWUsXG4gICAgYXZhdGFyUmlnaHQ6IGZhbHNlLFxuICAgIHNob3dNZXNzYWdlOiB0cnVlLFxuICAgIHdlbGNvbWVNZXNzYWdlOiAnV2VsY29tZScsXG4gICAgZHJvcERvd25Ub3A6IGZhbHNlLFxuICAgIGRyb3BEb3duQm90dG9tOiB0cnVlLFxuICAgIHNtOiBmYWxzZSxcbiAgICBtZDogZmFsc2UsXG4gICAgbGc6IGZhbHNlLFxuICAgIHhsOiBmYWxzZSxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgLi4uZGVmYXVsdFRoZW1lUHJvcFR5cGVzLFxuICB9XG5cbiAgc3RhdGUgPSB7IHRyYXlPcGVuOiBmYWxzZSB9XG5cbiAgY2xvc2VUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmF5T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICB0b2dnbGVUcmF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IHRyYXlPcGVuOiAhcHJldlN0YXRlLnRyYXlPcGVuIH0pKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHVzZXJOYW1lLFxuICAgICAgYXZhdGFyTGVmdCxcbiAgICAgIGF2YXRhclJpZ2h0LFxuICAgICAgc2hvd01lc3NhZ2UsXG4gICAgICB3ZWxjb21lTWVzc2FnZSxcbiAgICAgIGRyb3BEb3duVG9wLFxuICAgICAgZHJvcERvd25Cb3R0b20sXG4gICAgICBzbSxcbiAgICAgIG1kLFxuICAgICAgbGcsXG4gICAgICB4bCxcbiAgICAgIGltZ1BhdGgsXG4gICAgICBwcmltYXJ5LFxuICAgICAgc2Vjb25kYXJ5LFxuICAgICAgZGFyayxcbiAgICAgIGxpZ2h0LFxuICAgICAgaW5mbyxcbiAgICAgIHdhcm5pbmcsXG4gICAgICBkYW5nZXIsXG4gICAgICBzdWNjZXNzLFxuICAgICAgdGhlbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBpbWFnZSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbc3R5bGVzLmltZ0NvbnRhaW5lcl19XG4gICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbWdDb250YWluZXJ9XG4gICAgICA+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjc3M9e1tzdHlsZXMuaW1nXX1cbiAgICAgICAgICBjbGFzc05hbWU9e0JFTUNsYXNzTmFtZXMuaW1nfVxuICAgICAgICAgIHNyYz17aW1nUGF0aH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBzdHlsZXMuZ2V0QmFja2dyb3VuZENvbG9yU3R5bGUoe1xuICAgICAgICAgICAgcHJpbWFyeSxcbiAgICAgICAgICAgIHNlY29uZGFyeSxcbiAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICBsaWdodCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgZGFuZ2VyLFxuICAgICAgICAgICAgc3VjY2VzcyxcbiAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHN0eWxlcy5nZXRGb250Q29sb3JTdHlsZSh7XG4gICAgICAgICAgICBwcmltYXJ5LFxuICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgZGFyayxcbiAgICAgICAgICAgIGxpZ2h0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgIHdhcm5pbmcsXG4gICAgICAgICAgICBkYW5nZXIsXG4gICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoe1xuICAgICAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIF19XG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4geyB0aGlzLnRvZ2dsZVRyYXkoKTsgaWYgKG9uQ2xpY2spIHsgb25DbGljayh7IGV2ZW50IH0pOyB9IH19XG4gICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICBzdHlsZXMubWFpbixcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5tYWlufVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjc3M9e1tzdHlsZXMuaW5mb0NvbnRhaW5lcl19IGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5pbmZvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsoYXZhdGFyTGVmdCAmJiAhYXZhdGFyUmlnaHQpICYmIGltYWdlfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmluZm8sXG4gICAgICAgICAgICAgICAgc20gJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC5zbSxcbiAgICAgICAgICAgICAgICBtZCAmJiBzdHlsZXMuaGlkZS5icmVha3BvaW50Lm1kLFxuICAgICAgICAgICAgICAgIGxnICYmIHN0eWxlcy5oaWRlLmJyZWFrcG9pbnQubGcsXG4gICAgICAgICAgICAgICAgeGwgJiYgc3R5bGVzLmhpZGUuYnJlYWtwb2ludC54bCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmluZm99XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8c3Bhbj57d2VsY29tZU1lc3NhZ2V9PC9zcGFuPn1cbiAgICAgICAgICAgICAgeyhzaG93TWVzc2FnZSAmJiB1c2VyTmFtZSkgJiYgJywgJ31cbiAgICAgICAgICAgICAgPHNwYW4+e3VzZXJOYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIHthdmF0YXJSaWdodCAmJiBpbWFnZX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8SW9NZEFycm93RHJvcGRvd24gY2xhc3NOYW1lPXtCRU1DbGFzc05hbWVzLmljb259IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS50cmF5T3BlblxuICAgICAgICAgICYmIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgZHJvcERvd25Ub3AgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LnRvcCxcbiAgICAgICAgICAgICAgKGRyb3BEb3duQm90dG9tICYmICFkcm9wRG93blRvcCkgJiYgc3R5bGVzLnRyYXkucGxhY2VtZW50LmJvdHRvbSxcbiAgICAgICAgICAgICAgc3R5bGVzLnpkSW5kZXguejEwMDAwLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW4gJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHRoaXMuY2xvc2VUcmF5KSA6IGNoaWxkcmVuKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7XG4iXX0= */\")),\n        className: _styles.BEMClassNames.children\n      }, children && (typeof children === 'function' ? children(this.closeTray) : children)));\n    }\n  }]);\n\n  return UserProfile;\n}(_react.Component);\n\n_defineProperty(UserProfile, \"propTypes\", _objectSpread({\n  /**\n   * The username value of the user\n   */\n  userName: _propTypes.default.string.isRequired,\n\n  /**\n   * If 'true', the avatar is place left of username\n   */\n  avatarLeft: _propTypes.default.bool,\n\n  /**\n   * If 'true', the avatar is place right of username\n   */\n  avatarRight: _propTypes.default.bool,\n\n  /**\n   * If 'true', the message is to shown\n   * Defaults to true\n   */\n  showMessage: _propTypes.default.bool,\n\n  /**\n   * The welcome mesaage\n   */\n  welcomeMessage: _propTypes.default.string,\n\n  /**\n   * The `path` of the avatar\n   */\n  imgPath: _propTypes.default.string.isRequired,\n\n  /**\n   * If 'true', the dropdown is shown top\n   * Defaults to false\n   */\n  dropDownTop: _propTypes.default.bool,\n\n  /**\n   * If 'true', the dropdown is shown bottom\n   * Defaults to true\n   */\n  dropDownBottom: _propTypes.default.bool,\n\n  /**\n   * If 'true', the message and username is\n   * not shown on sm screens.\n   * Defaults to 'false'\n   */\n  sm: _propTypes.default.bool,\n\n  /**\n   * If 'true', the message and username is\n   * not shown on sm screens.\n   * Defaults to 'false'\n   */\n  md: _propTypes.default.bool,\n\n  /**\n   * If 'true', the message and username is\n   * not shown on lg screens.\n   * Defaults to 'false'\n   */\n  lg: _propTypes.default.bool,\n\n  /**\n  * If 'true', the message and username is\n  * not shown on xl screens.\n  * Defaults to 'false'\n  */\n  xl: _propTypes.default.bool,\n\n  /**\n   * If 'true', the component is disabled\n   * Default is 'false'\n   */\n  disabled: _propTypes.default.bool\n}, _common.themePropTypes));\n\n_defineProperty(UserProfile, \"defaultProps\", _objectSpread({\n  avatarLeft: true,\n  avatarRight: false,\n  showMessage: true,\n  welcomeMessage: 'Welcome',\n  dropDownTop: false,\n  dropDownBottom: true,\n  sm: false,\n  md: false,\n  lg: false,\n  xl: false,\n  disabled: false\n}, _common.defaultThemePropTypes));\n\nvar _default = UserProfile;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}