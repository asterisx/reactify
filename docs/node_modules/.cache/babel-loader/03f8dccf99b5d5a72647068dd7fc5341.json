{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _css2 = _interopRequireDefault(require(\"@emotion/css\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _common = require(\"../../common\");\n\nvar _styles = require(\"./styles\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar HeatMap = function HeatMap(_ref) {\n  var data = _ref.data,\n      children = _ref.children,\n      cellRender = _ref.cellRender,\n      baseColor = _ref.baseColor,\n      primary = _ref.primary,\n      secondary = _ref.secondary,\n      dark = _ref.dark,\n      light = _ref.light,\n      info = _ref.info,\n      warning = _ref.warning,\n      danger = _ref.danger,\n      success = _ref.success,\n      theme = _ref.theme,\n      disabled = _ref.disabled,\n      onCellClick = _ref.onCellClick,\n      otherProps = _objectWithoutProperties(_ref, [\"data\", \"children\", \"cellRender\", \"baseColor\", \"primary\", \"secondary\", \"dark\", \"light\", \"info\", \"warning\", \"danger\", \"success\", \"theme\", \"disabled\", \"onCellClick\"]);\n\n  var flattenedValuesArray = data.reduce(function (acc, row) {\n    return acc.concat(row);\n  }, []);\n  /**\n   * The below two values are useful in finding the darkest shade and the lightest shade\n   */\n\n  var maxValInData = Math.max.apply(Math, _toConsumableArray(flattenedValuesArray));\n  var minValInData = Math.min.apply(Math, _toConsumableArray(flattenedValuesArray));\n  var spread = maxValInData - minValInData;\n  /**\n   * If children is passed, use them\n   * The component supports declaration style too.\n   * <HeatMap>\n   *    <HeatMap.Row>\n   *        <HeatMap.Cell>\n   *        .\n   *        .\n   *        .\n   *        <HeatMap.Cell>\n   *    <HeatMap.Row>\n   * <HeatMap>\n   */\n\n  var rows = children || data.map(function (row, xIndex) {\n    return (0, _core.jsx)(HeatMap.Row, {\n      key: row.reduce(function (acc, curr) {\n        return \"\".concat(acc, \"-\").concat(curr);\n      }, '')\n    }, row.map(function (columnValue, yIndex) {\n      return cellRender ? cellRender({\n        baseColor: baseColor,\n        value: columnValue,\n        row: xIndex,\n        column: yIndex\n      }) : (0, _core.jsx)(HeatMap.Cell, {\n        // eslint-disable-next-line react/no-array-index-key\n        key: \"\".concat(xIndex, \" - \").concat(yIndex, \" - \").concat(columnValue),\n        onClick: function onClick() {\n          if (onCellClick) {\n            onCellClick({\n              row: xIndex,\n              column: yIndex\n            });\n          }\n        },\n        style: {\n          background: \"\".concat(_styles.styles.getBackgroundColor({\n            baseColor: baseColor,\n            primary: primary,\n            secondary: secondary,\n            dark: dark,\n            light: light,\n            info: info,\n            warning: warning,\n            danger: danger,\n            success: success,\n            theme: theme,\n            opacity: (+columnValue - minValInData) / spread\n          }))\n        },\n        disabled: disabled\n      }, columnValue);\n    }));\n  });\n  return (0, _core.jsx)(\"div\", _extends({\n    css:\n    /*#__PURE__*/\n    (0, _css2.default)([_styles.styles.container], \"label:HeatMap;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2hlYXQtbWFwL2hlYXQtbWFwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFGTSIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9oZWF0LW1hcC9oZWF0LW1hcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHtcbiAgdGhlbWVQcm9wVHlwZXMsXG4gIGRlZmF1bHRUaGVtZVByb3BUeXBlcyxcbn0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuY29uc3QgSGVhdE1hcCA9ICh7XG4gIGRhdGEsXG4gIGNoaWxkcmVuLFxuICBjZWxsUmVuZGVyLFxuICBiYXNlQ29sb3IsXG4gIHByaW1hcnksXG4gIHNlY29uZGFyeSxcbiAgZGFyayxcbiAgbGlnaHQsXG4gIGluZm8sXG4gIHdhcm5pbmcsXG4gIGRhbmdlcixcbiAgc3VjY2VzcyxcbiAgdGhlbWUsXG4gIGRpc2FibGVkLFxuICBvbkNlbGxDbGljayxcbiAgLi4ub3RoZXJQcm9wc1xufSkgPT4ge1xuICBjb25zdCBmbGF0dGVuZWRWYWx1ZXNBcnJheSA9IGRhdGEucmVkdWNlKChhY2MsIHJvdykgPT4gYWNjLmNvbmNhdChyb3cpLCBbXSk7XG4gIC8qKlxuICAgKiBUaGUgYmVsb3cgdHdvIHZhbHVlcyBhcmUgdXNlZnVsIGluIGZpbmRpbmcgdGhlIGRhcmtlc3Qgc2hhZGUgYW5kIHRoZSBsaWdodGVzdCBzaGFkZVxuICAgKi9cbiAgY29uc3QgbWF4VmFsSW5EYXRhID0gTWF0aC5tYXgoLi4uZmxhdHRlbmVkVmFsdWVzQXJyYXkpO1xuICBjb25zdCBtaW5WYWxJbkRhdGEgPSBNYXRoLm1pbiguLi5mbGF0dGVuZWRWYWx1ZXNBcnJheSk7XG5cbiAgY29uc3Qgc3ByZWFkID0gbWF4VmFsSW5EYXRhIC0gbWluVmFsSW5EYXRhO1xuXG4gIC8qKlxuICAgKiBJZiBjaGlsZHJlbiBpcyBwYXNzZWQsIHVzZSB0aGVtXG4gICAqIFRoZSBjb21wb25lbnQgc3VwcG9ydHMgZGVjbGFyYXRpb24gc3R5bGUgdG9vLlxuICAgKiA8SGVhdE1hcD5cbiAgICogICAgPEhlYXRNYXAuUm93PlxuICAgKiAgICAgICAgPEhlYXRNYXAuQ2VsbD5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIDxIZWF0TWFwLkNlbGw+XG4gICAqICAgIDxIZWF0TWFwLlJvdz5cbiAgICogPEhlYXRNYXA+XG4gICAqL1xuICBjb25zdCByb3dzID0gY2hpbGRyZW4gfHwgZGF0YS5tYXAoKHJvdywgeEluZGV4KSA9PiAoXG4gICAgPEhlYXRNYXAuUm93IGtleT17cm93LnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBgJHthY2N9LSR7Y3Vycn1gLCAnJyl9PlxuICAgICAge3Jvdy5tYXAoKGNvbHVtblZhbHVlLCB5SW5kZXgpID0+IChcbiAgICAgICAgY2VsbFJlbmRlciA/IGNlbGxSZW5kZXIoe1xuICAgICAgICAgIGJhc2VDb2xvciwgdmFsdWU6IGNvbHVtblZhbHVlLCByb3c6IHhJbmRleCwgY29sdW1uOiB5SW5kZXgsXG4gICAgICAgIH0pIDogKFxuICAgICAgICAgIDxIZWF0TWFwLkNlbGxcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YCR7eEluZGV4fSAtICR7eUluZGV4fSAtICR7Y29sdW1uVmFsdWV9YH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgaWYgKG9uQ2VsbENsaWNrKSB7IG9uQ2VsbENsaWNrKHsgcm93OiB4SW5kZXgsIGNvbHVtbjogeUluZGV4IH0pOyB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogYCR7c3R5bGVzLmdldEJhY2tncm91bmRDb2xvcih7XG4gICAgICAgICAgICAgICAgYmFzZUNvbG9yLFxuICAgICAgICAgICAgICAgIHByaW1hcnksXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICAgICAgbGlnaHQsXG4gICAgICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgICAgIGRhbmdlcixcbiAgICAgICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6ICgrY29sdW1uVmFsdWUgLSBtaW5WYWxJbkRhdGEpIC8gc3ByZWFkLFxuICAgICAgICAgICAgICB9KX1gLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y29sdW1uVmFsdWV9XG4gICAgICAgICAgPC9IZWF0TWFwLkNlbGw+XG4gICAgICAgICkpKX1cbiAgICA8L0hlYXRNYXAuUm93PlxuICApKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNzcz17W1xuICAgICAgICBzdHlsZXMuY29udGFpbmVyLFxuICAgICAgXX1cbiAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgID5cbiAgICAgIHtyb3dzfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuXG5IZWF0TWFwLlJvdyA9ICh7XG4gIGNoaWxkcmVuLFxuICAuLi5vdGhlclByb3BzXG59KSA9PiAoXG4gIDxkaXZcbiAgICBjc3M9e1tcbiAgICAgIHN0eWxlcy5yb3csXG4gICAgXX1cbiAgICB7Li4ub3RoZXJQcm9wc31cbiAgPlxuICAgIHtjaGlsZHJlbn1cbiAgPC9kaXY+XG4pO1xuXG5IZWF0TWFwLkNlbGwgPSAoe1xuICBjaGlsZHJlbixcbiAgZGlzYWJsZWQsXG4gIC4uLm90aGVyUHJvcHNcbn0pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e1tcbiAgICAgIHN0eWxlcy5jZWxsLFxuICAgICAgZGlzYWJsZWQgJiYgc3R5bGVzLm5vUG9pbnRlckV2ZW50cyxcbiAgICBdfVxuICAgIHsuLi5vdGhlclByb3BzfVxuICA+XG4gICAge2NoaWxkcmVufVxuICA8L3NwYW4+XG4pO1xuXG5IZWF0TWFwLkNlbGwuZGlzcGxheU5hbWUgPSAnQ2VsbCc7XG5cbkhlYXRNYXAuQ2VsbC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBJZiAndHJ1ZScsIG5vIHBvaW50ZXIgZXZlbnRzXG4gICAqIERlZmF1bHQgaXMgJ2ZhbHNlJ1xuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuSGVhdE1hcC5DZWxsLmRlZmF1bHRQcm9wcyA9IHtcbiAgZGlzYWJsZWQ6IGZhbHNlLFxufTtcblxuSGVhdE1hcC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgZGF0YXNldCBpdHNlbGYsXG4gICAqIFRoaXMgaXMgYSBtdWx0ZGltZW5zaW9uYWwgYXJyYXkgb2YgbnVtYmVyc1xuICAgKiBXaGVyZSBlYWNoIHJvdyBoYXMgc2FtZSBudW1iZXIgb2YgY29sdW1ucy5cbiAgICogSWYgeW91IGRvbid0IGRvIHRoYXQsIHBhc3MgdW5kZWZpbmVkIGZvciB0aG9zZSBjZWxsc1xuICAgKiB3aGVyZSB5b3UgZG9uJ3Qgd2FudCB0byBwYXNzIGFueSB2YWx1ZVxuICAgKi9cbiAgZGF0YTogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm51bWJlcikpLFxuICAvKipcbiAgICogVGhlIGJhc2VDb2xvciBhY3RzIGFzIGEgYmFzZSBmb3IgY2VsbCBiYWNrZ3JvdW5kIGNvbG9ycyxcbiAgICogVGhlIG1heGltdW0gdmFsdWUgaW4gdGhlIGRhdGEgc2V0IGhhcyB0aGUgYmFzZUNvbG9yLFxuICAgKiBUaGUgbGVhc3QgdmFsdWUgaGFzIG5vIGJhY2tncm91bmQgY29sb3JcbiAgICogQWxsIG90aGVyIGNlbGxzIGdldCBhIHJhdGlvIG9mIGBvcGFjaXR5YCBhcHBsaWVkIHRvIHRoZSBiYXNlQ29sb3JcbiAgICogZGVwZW5kaW5nIG9uIHRoZWlyIGRhdGFzZXQgdmFsdWVcbiAgICovXG4gIGJhc2VDb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIFJlbmRlciBQcm9wIGZvciBIZWF0TWFwIENlbGxzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlQ29sb3IgVGhlIGJhc2VDb2xvciBpcyBwYXNzZWQgYW55LCB0aGVtZSBjb2xvcnMgb3RoZXJ3aXNlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgdmFsdWUgaW4gdGhlIGRhdGFzZXQgZm9yIGN1cnJlbnQgY2VsbFxuICAgKiBAcGFyYW0ge251bWJlcn0gcm93IFRoaXMgaXMgdGhlIHJvdyBudW1iZXJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGNvbHVtbiBUaGlzIGlzIHRoZSBjb2x1bW4gbnVtYmVyXG4gICAqL1xuICBjZWxsUmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gYSBjZWxsIGlzIGNsaWNrZWRcbiAgICogQHBhcmFtIHtudW1iZXJ9IHJvdyBUaGlzIGlzIHRoZSByb3cgbnVtYmVyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBjb2x1bW4gVGhpcyBpcyB0aGUgY29sdW1uIG51bWJlclxuICAgKi9cbiAgb25DZWxsQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogSWYgJ3RydWUnLCBubyBwb2ludGVyIGV2ZW50c1xuICAgKiBEZWZhdWx0IGlzICdmYWxzZSdcbiAgICovXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAqL1xuICAuLi50aGVtZVByb3BUeXBlcyxcbn07XG5cbkhlYXRNYXAuZGVmYXVsdFByb3BzID0ge1xuICBkYXRhOiBbXSxcbiAgYmFzZUNvbG9yOiB1bmRlZmluZWQsXG4gIGNlbGxSZW5kZXI6IHVuZGVmaW5lZCxcbiAgb25DZWxsQ2xpY2s6IHVuZGVmaW5lZCxcbiAgZGlzYWJsZWQ6IGZhbHNlLFxuICAuLi5kZWZhdWx0VGhlbWVQcm9wVHlwZXMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWF0TWFwO1xuIl19 */\"))\n  }, otherProps), rows);\n};\n\nHeatMap.Row = function (_ref2) {\n  var children = _ref2.children,\n      otherProps = _objectWithoutProperties(_ref2, [\"children\"]);\n\n  return (0, _core.jsx)(\"div\", _extends({\n    css:\n    /*#__PURE__*/\n    (0, _css2.default)([_styles.styles.row], process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2hlYXQtbWFwL2hlYXQtbWFwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFHSSIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9oZWF0LW1hcC9oZWF0LW1hcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHtcbiAgdGhlbWVQcm9wVHlwZXMsXG4gIGRlZmF1bHRUaGVtZVByb3BUeXBlcyxcbn0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuY29uc3QgSGVhdE1hcCA9ICh7XG4gIGRhdGEsXG4gIGNoaWxkcmVuLFxuICBjZWxsUmVuZGVyLFxuICBiYXNlQ29sb3IsXG4gIHByaW1hcnksXG4gIHNlY29uZGFyeSxcbiAgZGFyayxcbiAgbGlnaHQsXG4gIGluZm8sXG4gIHdhcm5pbmcsXG4gIGRhbmdlcixcbiAgc3VjY2VzcyxcbiAgdGhlbWUsXG4gIGRpc2FibGVkLFxuICBvbkNlbGxDbGljayxcbiAgLi4ub3RoZXJQcm9wc1xufSkgPT4ge1xuICBjb25zdCBmbGF0dGVuZWRWYWx1ZXNBcnJheSA9IGRhdGEucmVkdWNlKChhY2MsIHJvdykgPT4gYWNjLmNvbmNhdChyb3cpLCBbXSk7XG4gIC8qKlxuICAgKiBUaGUgYmVsb3cgdHdvIHZhbHVlcyBhcmUgdXNlZnVsIGluIGZpbmRpbmcgdGhlIGRhcmtlc3Qgc2hhZGUgYW5kIHRoZSBsaWdodGVzdCBzaGFkZVxuICAgKi9cbiAgY29uc3QgbWF4VmFsSW5EYXRhID0gTWF0aC5tYXgoLi4uZmxhdHRlbmVkVmFsdWVzQXJyYXkpO1xuICBjb25zdCBtaW5WYWxJbkRhdGEgPSBNYXRoLm1pbiguLi5mbGF0dGVuZWRWYWx1ZXNBcnJheSk7XG5cbiAgY29uc3Qgc3ByZWFkID0gbWF4VmFsSW5EYXRhIC0gbWluVmFsSW5EYXRhO1xuXG4gIC8qKlxuICAgKiBJZiBjaGlsZHJlbiBpcyBwYXNzZWQsIHVzZSB0aGVtXG4gICAqIFRoZSBjb21wb25lbnQgc3VwcG9ydHMgZGVjbGFyYXRpb24gc3R5bGUgdG9vLlxuICAgKiA8SGVhdE1hcD5cbiAgICogICAgPEhlYXRNYXAuUm93PlxuICAgKiAgICAgICAgPEhlYXRNYXAuQ2VsbD5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIDxIZWF0TWFwLkNlbGw+XG4gICAqICAgIDxIZWF0TWFwLlJvdz5cbiAgICogPEhlYXRNYXA+XG4gICAqL1xuICBjb25zdCByb3dzID0gY2hpbGRyZW4gfHwgZGF0YS5tYXAoKHJvdywgeEluZGV4KSA9PiAoXG4gICAgPEhlYXRNYXAuUm93IGtleT17cm93LnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBgJHthY2N9LSR7Y3Vycn1gLCAnJyl9PlxuICAgICAge3Jvdy5tYXAoKGNvbHVtblZhbHVlLCB5SW5kZXgpID0+IChcbiAgICAgICAgY2VsbFJlbmRlciA/IGNlbGxSZW5kZXIoe1xuICAgICAgICAgIGJhc2VDb2xvciwgdmFsdWU6IGNvbHVtblZhbHVlLCByb3c6IHhJbmRleCwgY29sdW1uOiB5SW5kZXgsXG4gICAgICAgIH0pIDogKFxuICAgICAgICAgIDxIZWF0TWFwLkNlbGxcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YCR7eEluZGV4fSAtICR7eUluZGV4fSAtICR7Y29sdW1uVmFsdWV9YH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgaWYgKG9uQ2VsbENsaWNrKSB7IG9uQ2VsbENsaWNrKHsgcm93OiB4SW5kZXgsIGNvbHVtbjogeUluZGV4IH0pOyB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogYCR7c3R5bGVzLmdldEJhY2tncm91bmRDb2xvcih7XG4gICAgICAgICAgICAgICAgYmFzZUNvbG9yLFxuICAgICAgICAgICAgICAgIHByaW1hcnksXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICAgICAgbGlnaHQsXG4gICAgICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgICAgIGRhbmdlcixcbiAgICAgICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6ICgrY29sdW1uVmFsdWUgLSBtaW5WYWxJbkRhdGEpIC8gc3ByZWFkLFxuICAgICAgICAgICAgICB9KX1gLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y29sdW1uVmFsdWV9XG4gICAgICAgICAgPC9IZWF0TWFwLkNlbGw+XG4gICAgICAgICkpKX1cbiAgICA8L0hlYXRNYXAuUm93PlxuICApKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNzcz17W1xuICAgICAgICBzdHlsZXMuY29udGFpbmVyLFxuICAgICAgXX1cbiAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgID5cbiAgICAgIHtyb3dzfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuXG5IZWF0TWFwLlJvdyA9ICh7XG4gIGNoaWxkcmVuLFxuICAuLi5vdGhlclByb3BzXG59KSA9PiAoXG4gIDxkaXZcbiAgICBjc3M9e1tcbiAgICAgIHN0eWxlcy5yb3csXG4gICAgXX1cbiAgICB7Li4ub3RoZXJQcm9wc31cbiAgPlxuICAgIHtjaGlsZHJlbn1cbiAgPC9kaXY+XG4pO1xuXG5IZWF0TWFwLkNlbGwgPSAoe1xuICBjaGlsZHJlbixcbiAgZGlzYWJsZWQsXG4gIC4uLm90aGVyUHJvcHNcbn0pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e1tcbiAgICAgIHN0eWxlcy5jZWxsLFxuICAgICAgZGlzYWJsZWQgJiYgc3R5bGVzLm5vUG9pbnRlckV2ZW50cyxcbiAgICBdfVxuICAgIHsuLi5vdGhlclByb3BzfVxuICA+XG4gICAge2NoaWxkcmVufVxuICA8L3NwYW4+XG4pO1xuXG5IZWF0TWFwLkNlbGwuZGlzcGxheU5hbWUgPSAnQ2VsbCc7XG5cbkhlYXRNYXAuQ2VsbC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBJZiAndHJ1ZScsIG5vIHBvaW50ZXIgZXZlbnRzXG4gICAqIERlZmF1bHQgaXMgJ2ZhbHNlJ1xuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuSGVhdE1hcC5DZWxsLmRlZmF1bHRQcm9wcyA9IHtcbiAgZGlzYWJsZWQ6IGZhbHNlLFxufTtcblxuSGVhdE1hcC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgZGF0YXNldCBpdHNlbGYsXG4gICAqIFRoaXMgaXMgYSBtdWx0ZGltZW5zaW9uYWwgYXJyYXkgb2YgbnVtYmVyc1xuICAgKiBXaGVyZSBlYWNoIHJvdyBoYXMgc2FtZSBudW1iZXIgb2YgY29sdW1ucy5cbiAgICogSWYgeW91IGRvbid0IGRvIHRoYXQsIHBhc3MgdW5kZWZpbmVkIGZvciB0aG9zZSBjZWxsc1xuICAgKiB3aGVyZSB5b3UgZG9uJ3Qgd2FudCB0byBwYXNzIGFueSB2YWx1ZVxuICAgKi9cbiAgZGF0YTogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm51bWJlcikpLFxuICAvKipcbiAgICogVGhlIGJhc2VDb2xvciBhY3RzIGFzIGEgYmFzZSBmb3IgY2VsbCBiYWNrZ3JvdW5kIGNvbG9ycyxcbiAgICogVGhlIG1heGltdW0gdmFsdWUgaW4gdGhlIGRhdGEgc2V0IGhhcyB0aGUgYmFzZUNvbG9yLFxuICAgKiBUaGUgbGVhc3QgdmFsdWUgaGFzIG5vIGJhY2tncm91bmQgY29sb3JcbiAgICogQWxsIG90aGVyIGNlbGxzIGdldCBhIHJhdGlvIG9mIGBvcGFjaXR5YCBhcHBsaWVkIHRvIHRoZSBiYXNlQ29sb3JcbiAgICogZGVwZW5kaW5nIG9uIHRoZWlyIGRhdGFzZXQgdmFsdWVcbiAgICovXG4gIGJhc2VDb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIFJlbmRlciBQcm9wIGZvciBIZWF0TWFwIENlbGxzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlQ29sb3IgVGhlIGJhc2VDb2xvciBpcyBwYXNzZWQgYW55LCB0aGVtZSBjb2xvcnMgb3RoZXJ3aXNlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgdmFsdWUgaW4gdGhlIGRhdGFzZXQgZm9yIGN1cnJlbnQgY2VsbFxuICAgKiBAcGFyYW0ge251bWJlcn0gcm93IFRoaXMgaXMgdGhlIHJvdyBudW1iZXJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGNvbHVtbiBUaGlzIGlzIHRoZSBjb2x1bW4gbnVtYmVyXG4gICAqL1xuICBjZWxsUmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gYSBjZWxsIGlzIGNsaWNrZWRcbiAgICogQHBhcmFtIHtudW1iZXJ9IHJvdyBUaGlzIGlzIHRoZSByb3cgbnVtYmVyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBjb2x1bW4gVGhpcyBpcyB0aGUgY29sdW1uIG51bWJlclxuICAgKi9cbiAgb25DZWxsQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogSWYgJ3RydWUnLCBubyBwb2ludGVyIGV2ZW50c1xuICAgKiBEZWZhdWx0IGlzICdmYWxzZSdcbiAgICovXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAqL1xuICAuLi50aGVtZVByb3BUeXBlcyxcbn07XG5cbkhlYXRNYXAuZGVmYXVsdFByb3BzID0ge1xuICBkYXRhOiBbXSxcbiAgYmFzZUNvbG9yOiB1bmRlZmluZWQsXG4gIGNlbGxSZW5kZXI6IHVuZGVmaW5lZCxcbiAgb25DZWxsQ2xpY2s6IHVuZGVmaW5lZCxcbiAgZGlzYWJsZWQ6IGZhbHNlLFxuICAuLi5kZWZhdWx0VGhlbWVQcm9wVHlwZXMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWF0TWFwO1xuIl19 */\")\n  }, otherProps), children);\n};\n\nHeatMap.Cell = function (_ref3) {\n  var children = _ref3.children,\n      disabled = _ref3.disabled,\n      otherProps = _objectWithoutProperties(_ref3, [\"children\", \"disabled\"]);\n\n  return (0, _core.jsx)(\"span\", _extends({\n    css:\n    /*#__PURE__*/\n    (0, _css2.default)([_styles.styles.cell, disabled && _styles.styles.noPointerEvents], process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2hlYXQtbWFwL2hlYXQtbWFwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9ISSIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9oZWF0LW1hcC9oZWF0LW1hcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHtcbiAgdGhlbWVQcm9wVHlwZXMsXG4gIGRlZmF1bHRUaGVtZVByb3BUeXBlcyxcbn0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuY29uc3QgSGVhdE1hcCA9ICh7XG4gIGRhdGEsXG4gIGNoaWxkcmVuLFxuICBjZWxsUmVuZGVyLFxuICBiYXNlQ29sb3IsXG4gIHByaW1hcnksXG4gIHNlY29uZGFyeSxcbiAgZGFyayxcbiAgbGlnaHQsXG4gIGluZm8sXG4gIHdhcm5pbmcsXG4gIGRhbmdlcixcbiAgc3VjY2VzcyxcbiAgdGhlbWUsXG4gIGRpc2FibGVkLFxuICBvbkNlbGxDbGljayxcbiAgLi4ub3RoZXJQcm9wc1xufSkgPT4ge1xuICBjb25zdCBmbGF0dGVuZWRWYWx1ZXNBcnJheSA9IGRhdGEucmVkdWNlKChhY2MsIHJvdykgPT4gYWNjLmNvbmNhdChyb3cpLCBbXSk7XG4gIC8qKlxuICAgKiBUaGUgYmVsb3cgdHdvIHZhbHVlcyBhcmUgdXNlZnVsIGluIGZpbmRpbmcgdGhlIGRhcmtlc3Qgc2hhZGUgYW5kIHRoZSBsaWdodGVzdCBzaGFkZVxuICAgKi9cbiAgY29uc3QgbWF4VmFsSW5EYXRhID0gTWF0aC5tYXgoLi4uZmxhdHRlbmVkVmFsdWVzQXJyYXkpO1xuICBjb25zdCBtaW5WYWxJbkRhdGEgPSBNYXRoLm1pbiguLi5mbGF0dGVuZWRWYWx1ZXNBcnJheSk7XG5cbiAgY29uc3Qgc3ByZWFkID0gbWF4VmFsSW5EYXRhIC0gbWluVmFsSW5EYXRhO1xuXG4gIC8qKlxuICAgKiBJZiBjaGlsZHJlbiBpcyBwYXNzZWQsIHVzZSB0aGVtXG4gICAqIFRoZSBjb21wb25lbnQgc3VwcG9ydHMgZGVjbGFyYXRpb24gc3R5bGUgdG9vLlxuICAgKiA8SGVhdE1hcD5cbiAgICogICAgPEhlYXRNYXAuUm93PlxuICAgKiAgICAgICAgPEhlYXRNYXAuQ2VsbD5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIC5cbiAgICogICAgICAgIDxIZWF0TWFwLkNlbGw+XG4gICAqICAgIDxIZWF0TWFwLlJvdz5cbiAgICogPEhlYXRNYXA+XG4gICAqL1xuICBjb25zdCByb3dzID0gY2hpbGRyZW4gfHwgZGF0YS5tYXAoKHJvdywgeEluZGV4KSA9PiAoXG4gICAgPEhlYXRNYXAuUm93IGtleT17cm93LnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBgJHthY2N9LSR7Y3Vycn1gLCAnJyl9PlxuICAgICAge3Jvdy5tYXAoKGNvbHVtblZhbHVlLCB5SW5kZXgpID0+IChcbiAgICAgICAgY2VsbFJlbmRlciA/IGNlbGxSZW5kZXIoe1xuICAgICAgICAgIGJhc2VDb2xvciwgdmFsdWU6IGNvbHVtblZhbHVlLCByb3c6IHhJbmRleCwgY29sdW1uOiB5SW5kZXgsXG4gICAgICAgIH0pIDogKFxuICAgICAgICAgIDxIZWF0TWFwLkNlbGxcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YCR7eEluZGV4fSAtICR7eUluZGV4fSAtICR7Y29sdW1uVmFsdWV9YH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgaWYgKG9uQ2VsbENsaWNrKSB7IG9uQ2VsbENsaWNrKHsgcm93OiB4SW5kZXgsIGNvbHVtbjogeUluZGV4IH0pOyB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogYCR7c3R5bGVzLmdldEJhY2tncm91bmRDb2xvcih7XG4gICAgICAgICAgICAgICAgYmFzZUNvbG9yLFxuICAgICAgICAgICAgICAgIHByaW1hcnksXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5LFxuICAgICAgICAgICAgICAgIGRhcmssXG4gICAgICAgICAgICAgICAgbGlnaHQsXG4gICAgICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgICAgICB3YXJuaW5nLFxuICAgICAgICAgICAgICAgIGRhbmdlcixcbiAgICAgICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6ICgrY29sdW1uVmFsdWUgLSBtaW5WYWxJbkRhdGEpIC8gc3ByZWFkLFxuICAgICAgICAgICAgICB9KX1gLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y29sdW1uVmFsdWV9XG4gICAgICAgICAgPC9IZWF0TWFwLkNlbGw+XG4gICAgICAgICkpKX1cbiAgICA8L0hlYXRNYXAuUm93PlxuICApKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNzcz17W1xuICAgICAgICBzdHlsZXMuY29udGFpbmVyLFxuICAgICAgXX1cbiAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgID5cbiAgICAgIHtyb3dzfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuXG5IZWF0TWFwLlJvdyA9ICh7XG4gIGNoaWxkcmVuLFxuICAuLi5vdGhlclByb3BzXG59KSA9PiAoXG4gIDxkaXZcbiAgICBjc3M9e1tcbiAgICAgIHN0eWxlcy5yb3csXG4gICAgXX1cbiAgICB7Li4ub3RoZXJQcm9wc31cbiAgPlxuICAgIHtjaGlsZHJlbn1cbiAgPC9kaXY+XG4pO1xuXG5IZWF0TWFwLkNlbGwgPSAoe1xuICBjaGlsZHJlbixcbiAgZGlzYWJsZWQsXG4gIC4uLm90aGVyUHJvcHNcbn0pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e1tcbiAgICAgIHN0eWxlcy5jZWxsLFxuICAgICAgZGlzYWJsZWQgJiYgc3R5bGVzLm5vUG9pbnRlckV2ZW50cyxcbiAgICBdfVxuICAgIHsuLi5vdGhlclByb3BzfVxuICA+XG4gICAge2NoaWxkcmVufVxuICA8L3NwYW4+XG4pO1xuXG5IZWF0TWFwLkNlbGwuZGlzcGxheU5hbWUgPSAnQ2VsbCc7XG5cbkhlYXRNYXAuQ2VsbC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBJZiAndHJ1ZScsIG5vIHBvaW50ZXIgZXZlbnRzXG4gICAqIERlZmF1bHQgaXMgJ2ZhbHNlJ1xuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuSGVhdE1hcC5DZWxsLmRlZmF1bHRQcm9wcyA9IHtcbiAgZGlzYWJsZWQ6IGZhbHNlLFxufTtcblxuSGVhdE1hcC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgZGF0YXNldCBpdHNlbGYsXG4gICAqIFRoaXMgaXMgYSBtdWx0ZGltZW5zaW9uYWwgYXJyYXkgb2YgbnVtYmVyc1xuICAgKiBXaGVyZSBlYWNoIHJvdyBoYXMgc2FtZSBudW1iZXIgb2YgY29sdW1ucy5cbiAgICogSWYgeW91IGRvbid0IGRvIHRoYXQsIHBhc3MgdW5kZWZpbmVkIGZvciB0aG9zZSBjZWxsc1xuICAgKiB3aGVyZSB5b3UgZG9uJ3Qgd2FudCB0byBwYXNzIGFueSB2YWx1ZVxuICAgKi9cbiAgZGF0YTogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm51bWJlcikpLFxuICAvKipcbiAgICogVGhlIGJhc2VDb2xvciBhY3RzIGFzIGEgYmFzZSBmb3IgY2VsbCBiYWNrZ3JvdW5kIGNvbG9ycyxcbiAgICogVGhlIG1heGltdW0gdmFsdWUgaW4gdGhlIGRhdGEgc2V0IGhhcyB0aGUgYmFzZUNvbG9yLFxuICAgKiBUaGUgbGVhc3QgdmFsdWUgaGFzIG5vIGJhY2tncm91bmQgY29sb3JcbiAgICogQWxsIG90aGVyIGNlbGxzIGdldCBhIHJhdGlvIG9mIGBvcGFjaXR5YCBhcHBsaWVkIHRvIHRoZSBiYXNlQ29sb3JcbiAgICogZGVwZW5kaW5nIG9uIHRoZWlyIGRhdGFzZXQgdmFsdWVcbiAgICovXG4gIGJhc2VDb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIFJlbmRlciBQcm9wIGZvciBIZWF0TWFwIENlbGxzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlQ29sb3IgVGhlIGJhc2VDb2xvciBpcyBwYXNzZWQgYW55LCB0aGVtZSBjb2xvcnMgb3RoZXJ3aXNlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgdmFsdWUgaW4gdGhlIGRhdGFzZXQgZm9yIGN1cnJlbnQgY2VsbFxuICAgKiBAcGFyYW0ge251bWJlcn0gcm93IFRoaXMgaXMgdGhlIHJvdyBudW1iZXJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGNvbHVtbiBUaGlzIGlzIHRoZSBjb2x1bW4gbnVtYmVyXG4gICAqL1xuICBjZWxsUmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gYSBjZWxsIGlzIGNsaWNrZWRcbiAgICogQHBhcmFtIHtudW1iZXJ9IHJvdyBUaGlzIGlzIHRoZSByb3cgbnVtYmVyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBjb2x1bW4gVGhpcyBpcyB0aGUgY29sdW1uIG51bWJlclxuICAgKi9cbiAgb25DZWxsQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogSWYgJ3RydWUnLCBubyBwb2ludGVyIGV2ZW50c1xuICAgKiBEZWZhdWx0IGlzICdmYWxzZSdcbiAgICovXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIEEgY29sbGVjdGlvbiBvZiB2YWxpZCB0aGVtZSB0eXBlcywgYWxsIGJvb2xlYW4gdmFsdWVzXG4gICAqL1xuICAuLi50aGVtZVByb3BUeXBlcyxcbn07XG5cbkhlYXRNYXAuZGVmYXVsdFByb3BzID0ge1xuICBkYXRhOiBbXSxcbiAgYmFzZUNvbG9yOiB1bmRlZmluZWQsXG4gIGNlbGxSZW5kZXI6IHVuZGVmaW5lZCxcbiAgb25DZWxsQ2xpY2s6IHVuZGVmaW5lZCxcbiAgZGlzYWJsZWQ6IGZhbHNlLFxuICAuLi5kZWZhdWx0VGhlbWVQcm9wVHlwZXMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWF0TWFwO1xuIl19 */\")\n  }, otherProps), children);\n};\n\nHeatMap.Cell.displayName = 'Cell';\nHeatMap.Cell.propTypes = {\n  /**\n   * If 'true', no pointer events\n   * Default is 'false'\n   */\n  disabled: _propTypes.default.bool\n};\nHeatMap.Cell.defaultProps = {\n  disabled: false\n};\nHeatMap.propTypes = _objectSpread({\n  /**\n   * The dataset itself,\n   * This is a multdimensional array of numbers\n   * Where each row has same number of columns.\n   * If you don't do that, pass undefined for those cells\n   * where you don't want to pass any value\n   */\n  data: _propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.number)),\n\n  /**\n   * The baseColor acts as a base for cell background colors,\n   * The maximum value in the data set has the baseColor,\n   * The least value has no background color\n   * All other cells get a ratio of `opacity` applied to the baseColor\n   * depending on their dataset value\n   */\n  baseColor: _propTypes.default.string,\n\n  /**\n   * Render Prop for HeatMap Cells\n   * @param {string} baseColor The baseColor is passed any, theme colors otherwise\n   * @param {number} value The value in the dataset for current cell\n   * @param {number} row This is the row number\n   * @param {number} column This is the column number\n   */\n  cellRender: _propTypes.default.func,\n\n  /**\n   * Callback fired when a cell is clicked\n   * @param {number} row This is the row number\n   * @param {number} column This is the column number\n   */\n  onCellClick: _propTypes.default.func,\n\n  /**\n   * If 'true', no pointer events\n   * Default is 'false'\n   */\n  disabled: _propTypes.default.bool\n}, _common.themePropTypes);\nHeatMap.defaultProps = _objectSpread({\n  data: [],\n  baseColor: undefined,\n  cellRender: undefined,\n  onCellClick: undefined,\n  disabled: false\n}, _common.defaultThemePropTypes);\nvar _default = HeatMap;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}