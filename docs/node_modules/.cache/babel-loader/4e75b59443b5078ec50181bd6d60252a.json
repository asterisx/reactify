{"ast":null,"code":"var directionCode = \"\\n<ToastProvider topCenter>\\n    <ToastConsumer>\\n    {({ addToast }) => (\\n        <Button\\n        onClick={\\n        () => addToast(\\n            <Dismiss>\\n            Top Center Toast\\n            </Dismiss>,\\n        )\\n        }\\n        >\\n        Show Top Center\\n        </Button>\\n    )}\\n    </ToastConsumer>\\n</ToastProvider>\\n\\n<ToastProvider topRight>\\n    <ToastConsumer>\\n    {({ addToast }) => (\\n        <Button\\n        onClick={\\n        () => addToast(\\n            <Dismiss>\\n            Top Right Toast\\n            </Dismiss>,\\n        )\\n        }\\n        >\\n        Show Top Right\\n        </Button>\\n    )}\\n    </ToastConsumer>\\n</ToastProvider>\\n\\n<ToastProvider bottomLeft>\\n    <ToastConsumer>\\n      {({ addToast }) => (\\n        <Button\\n          onClick={\\n          () => addToast(\\n            <Dismiss>\\n            Bottom Left Toast\\n            </Dismiss>,\\n          )\\n          }\\n        >\\n        Show Bottom Left\\n        </Button>\\n      )}\\n    </ToastConsumer>\\n</ToastProvider>\\n\\n<ToastProvider bottomCenter>\\n    <ToastConsumer>\\n    {({ addToast }) => (\\n      <Button\\n        onClick={\\n        () => addToast(\\n          <Dismiss>\\n          Bottom Center Toast\\n          </Dismiss>,\\n        )\\n        }\\n      >\\n      Show Bottom Center\\n      </Button>\\n    )}\\n    </ToastConsumer>\\n</ToastProvider>\\n\\n<ToastProvider bottomRight>\\n    <ToastConsumer>\\n      {({ addToast }) => (\\n        <Button\\n          onClick={\\n          () => addToast(\\n            <Dismiss>\\n            Bottom Right Toast\\n            </Dismiss>,\\n          )\\n          }\\n        >\\n        Show Bottom Right\\n        </Button>\\n      )}\\n    </ToastConsumer>\\n</ToastProvider>\\n\";\nvar hideCode = \"\\n<ToastProvider>\\n    <ToastConsumer>\\n    {({ addToast, removeToast }) => {\\n        let toastId;\\n        return (\\n        <>\\n            <Button\\n            onClick={\\n        () => {\\n            toastId = addToast(\\n            <Dismiss>\\n            Lorem Ipsum is not gypsum. Did you know Toast\\n            </Dismiss>,\\n            );\\n            this.setState({ toastId });\\n        }\\n        }\\n            >\\n        Show Toast\\n            </Button>\\n            <Button\\n            danger\\n            onClick={\\n            () => removeToast(this.state.toastId)\\n        }\\n            >\\n        Remove Toast\\n            </Button>\\n        </>\\n        );\\n    }\\n    }\\n    </ToastConsumer>\\n</ToastProvider>\\n\";\nvar pauseOnHover = \"\\n<ToastProvider pauseOnHover>\\n    <ToastConsumer>\\n      {({ addToast, removeToast }) => (\\n        <Button\\n          onClick={\\n            () => addToast(\\n              <Dismiss\\n                onClose={removeToast}\\n              >\\n              Hover over this toast and it will pause\\n              </Dismiss>,\\n            )\\n            }\\n        >\\n        Show Toast\\n        </Button>\\n      )}\\n    </ToastConsumer>\\n</ToastProvider>\\n\";\nvar simpleCode = \"\\n<ToastProvider autoDismissTimeout={5000}>\\n  <ToastConsumer>\\n    {({ addToast }) => (\\n      <Button\\n        onClick={\\n        () => addToast(\\n          <Paper success>Any content can go here, check this sample's code</Paper>,\\n        )\\n        }\\n      >\\n    Show Toast\\n      </Button>\\n    )}\\n  </ToastConsumer>\\n</ToastProvider>\\n\";\nexport { directionCode, hideCode, pauseOnHover, simpleCode };","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/toast/code-refrence.js"],"names":["directionCode","hideCode","pauseOnHover","simpleCode"],"mappings":"AAAA,IAAMA,aAAa,ksDAAnB;AA4FA,IAAMC,QAAQ,muBAAd;AAqCA,IAAMC,YAAY,0cAAlB;AAuBA,IAAMC,UAAU,6VAAhB;AAkBA,SACEH,aADF,EAEEC,QAFF,EAGEC,YAHF,EAIEC,UAJF","sourcesContent":["const directionCode = `\n<ToastProvider topCenter>\n    <ToastConsumer>\n    {({ addToast }) => (\n        <Button\n        onClick={\n        () => addToast(\n            <Dismiss>\n            Top Center Toast\n            </Dismiss>,\n        )\n        }\n        >\n        Show Top Center\n        </Button>\n    )}\n    </ToastConsumer>\n</ToastProvider>\n\n<ToastProvider topRight>\n    <ToastConsumer>\n    {({ addToast }) => (\n        <Button\n        onClick={\n        () => addToast(\n            <Dismiss>\n            Top Right Toast\n            </Dismiss>,\n        )\n        }\n        >\n        Show Top Right\n        </Button>\n    )}\n    </ToastConsumer>\n</ToastProvider>\n\n<ToastProvider bottomLeft>\n    <ToastConsumer>\n      {({ addToast }) => (\n        <Button\n          onClick={\n          () => addToast(\n            <Dismiss>\n            Bottom Left Toast\n            </Dismiss>,\n          )\n          }\n        >\n        Show Bottom Left\n        </Button>\n      )}\n    </ToastConsumer>\n</ToastProvider>\n\n<ToastProvider bottomCenter>\n    <ToastConsumer>\n    {({ addToast }) => (\n      <Button\n        onClick={\n        () => addToast(\n          <Dismiss>\n          Bottom Center Toast\n          </Dismiss>,\n        )\n        }\n      >\n      Show Bottom Center\n      </Button>\n    )}\n    </ToastConsumer>\n</ToastProvider>\n\n<ToastProvider bottomRight>\n    <ToastConsumer>\n      {({ addToast }) => (\n        <Button\n          onClick={\n          () => addToast(\n            <Dismiss>\n            Bottom Right Toast\n            </Dismiss>,\n          )\n          }\n        >\n        Show Bottom Right\n        </Button>\n      )}\n    </ToastConsumer>\n</ToastProvider>\n`;\n\nconst hideCode = `\n<ToastProvider>\n    <ToastConsumer>\n    {({ addToast, removeToast }) => {\n        let toastId;\n        return (\n        <>\n            <Button\n            onClick={\n        () => {\n            toastId = addToast(\n            <Dismiss>\n            Lorem Ipsum is not gypsum. Did you know Toast\n            </Dismiss>,\n            );\n            this.setState({ toastId });\n        }\n        }\n            >\n        Show Toast\n            </Button>\n            <Button\n            danger\n            onClick={\n            () => removeToast(this.state.toastId)\n        }\n            >\n        Remove Toast\n            </Button>\n        </>\n        );\n    }\n    }\n    </ToastConsumer>\n</ToastProvider>\n`;\n\nconst pauseOnHover = `\n<ToastProvider pauseOnHover>\n    <ToastConsumer>\n      {({ addToast, removeToast }) => (\n        <Button\n          onClick={\n            () => addToast(\n              <Dismiss\n                onClose={removeToast}\n              >\n              Hover over this toast and it will pause\n              </Dismiss>,\n            )\n            }\n        >\n        Show Toast\n        </Button>\n      )}\n    </ToastConsumer>\n</ToastProvider>\n`;\n\n\nconst simpleCode = `\n<ToastProvider autoDismissTimeout={5000}>\n  <ToastConsumer>\n    {({ addToast }) => (\n      <Button\n        onClick={\n        () => addToast(\n          <Paper success>Any content can go here, check this sample's code</Paper>,\n        )\n        }\n      >\n    Show Toast\n      </Button>\n    )}\n  </ToastConsumer>\n</ToastProvider>\n`;\n\nexport {\n  directionCode,\n  hideCode,\n  pauseOnHover,\n  simpleCode,\n};\n"]},"metadata":{},"sourceType":"module"}