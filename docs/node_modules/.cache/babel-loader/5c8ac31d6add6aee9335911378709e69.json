{"ast":null,"code":"var simpleCode = \"\\n<Button onClick={() => this.setState({ simpleModalOpen: true })}>Open Modal</Button>\\n{this.state.simpleModalOpen && (\\n<Modal onClose={() => this.setState({ simpleModalOpen: false })}>\\n  {closeToggle => (\\n    <div\\n      style={{\\n        width: '100%',\\n        height: '250px',\\n        display: 'flex',\\n        justifyContent: 'center',\\n        alignContent: 'center',\\n        alignItems: 'center',\\n        background: 'white',\\n      }}\\n    >\\n      <input\\n        style={{ fontSize: '20px' }}\\n        type=\\\"button\\\"\\n        value=\\\"Close\\\"\\n        onClick={closeToggle}\\n      />\\n    </div>\\n  )}\\n</Modal>\\n)}\\n\";\nvar autoCloseCode = \"\\n<Button\\nonClick={() => this.setState({ autoCloseModalOpen: true })}\\n>\\n  Open Modal\\n</Button>\\n{this.state.autoCloseModalOpen && (\\n<Modal autoClose={false}>\\n{closeToggle => (\\n  <div\\n    style={{\\n      width: '100%',\\n      height: '250px',\\n      display: 'flex',\\n      justifyContent: 'center',\\n      alignContent: 'center',\\n      alignItems: 'center',\\n      background: 'white',\\n    }}\\n  >\\n    <input\\n      style={{ fontSize: '20px' }}\\n      type=\\\"button\\\"\\n      value=\\\"Close\\\"\\n      onClick={\\n          () => {\\n            this.setState({ autoCloseModalOpen: false });\\n            closeToggle();\\n          }}\\n    />\\n  </div>\\n)}\\n</Modal>\\n)}\\n\";\nvar hideBackdropCode = \"\\n<Button\\nonClick={() => this.setState({ hideBackdropModalOpen: true })}\\n>\\n  Open Modal\\n</Button>\\n{this.state.hideBackdropModalOpen && (\\n<Modal\\nhideBackDrop\\nonClose={() => this.setState({ hideBackdropModalOpen: false })}\\n>\\n{closeToggle => (\\n  <div\\n    style={{\\n      width: '100%',\\n      height: '250px',\\n      display: 'flex',\\n      justifyContent: 'center',\\n      alignContent: 'center',\\n      alignItems: 'center',\\n      background: 'white',\\n    }}\\n  >\\n    <input\\n      style={{ fontSize: '20px' }}\\n      type=\\\"button\\\"\\n      value=\\\"Close\\\"\\n      onClick={closeToggle}\\n    />\\n  </div>\\n)}\\n</Modal>\\n)}\\n\";\nvar onCloseCode = \"\\n<Button\\n  onClick={() => this.setState({ onCloseModal: true })}\\n>\\n    Open Modal\\n</Button>\\n{this.state.onCloseModal && (\\n<Modal top onClose={() => { this.setState({ onCloseModal: false }); alert('Closed'); }}>\\n  {closeToggle => (\\n    <div\\n      style={{\\n        width: '100%',\\n        height: '250px',\\n        display: 'flex',\\n        justifyContent: 'center',\\n        alignContent: 'center',\\n        alignItems: 'center',\\n        background: 'white',\\n      }}\\n    >\\n      <input\\n        style={{ fontSize: '20px' }}\\n        type=\\\"button\\\"\\n        value=\\\"Close\\\"\\n        onClick={closeToggle}\\n      />\\n    </div>\\n  )}\\n</Modal>\\n)}\\n\";\nvar modalSizeCode = \"\\n<Button\\n              onClick={() => this.setState({ largeModalOpen: true })}\\n            >\\n                Open Large Modal\\n            </Button>\\n            {this.state.largeModalOpen && (\\n            <Modal large onClose={() => this.setState({ largeModalOpen: false })}>\\n              {closeToggle => (\\n                <div\\n                  style={{\\n                    width: '100%',\\n                    height: '250px',\\n                    display: 'flex',\\n                    justifyContent: 'center',\\n                    alignContent: 'center',\\n                    alignItems: 'center',\\n                    background: 'white',\\n                  }}\\n                >\\n                  <input\\n                    style={{ fontSize: '20px' }}\\n                    type=\\\"button\\\"\\n                    value=\\\"Close\\\"\\n                    onClick={closeToggle}\\n                  />\\n                </div>\\n              )}\\n            </Modal>\\n            )}\\n\\n<Button\\n  onClick={() => this.setState({ customSizeModal: true })}\\n>\\n    Open Custom Size Modal\\n</Button>\\n{this.state.customSizeModal && (\\n<Modal style={{ width: '90%' }} onClose={() => this.setState({ customSizeModal: false })}>\\n  {closeToggle => (\\n    <div\\n      style={{\\n        width: '100%',\\n        height: '250px',\\n        display: 'flex',\\n        justifyContent: 'center',\\n        alignContent: 'center',\\n        alignItems: 'center',\\n        background: 'white',\\n      }}\\n    >\\n      <input\\n        style={{ fontSize: '20px' }}\\n        type=\\\"button\\\"\\n        value=\\\"Close\\\"\\n        onClick={closeToggle}\\n      />\\n    </div>\\n  )}\\n</Modal>\\n)}\\n\";\nexport { autoCloseCode, hideBackdropCode, simpleCode, onCloseCode, modalSizeCode };","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/modal/code-refrence.js"],"names":["simpleCode","autoCloseCode","hideBackdropCode","onCloseCode","modalSizeCode"],"mappings":"AAAA,IAAMA,UAAU,8nBAAhB;AA4BA,IAAMC,aAAa,yqBAAnB;AAmCA,IAAMC,gBAAgB,koBAAtB;AAkCA,IAAMC,WAAW,4pBAAjB;AA+BA,IAAMC,aAAa,+oDAAnB;AA6DA,SACEH,aADF,EAEEC,gBAFF,EAGEF,UAHF,EAIEG,WAJF,EAKEC,aALF","sourcesContent":["const simpleCode = `\n<Button onClick={() => this.setState({ simpleModalOpen: true })}>Open Modal</Button>\n{this.state.simpleModalOpen && (\n<Modal onClose={() => this.setState({ simpleModalOpen: false })}>\n  {closeToggle => (\n    <div\n      style={{\n        width: '100%',\n        height: '250px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        background: 'white',\n      }}\n    >\n      <input\n        style={{ fontSize: '20px' }}\n        type=\"button\"\n        value=\"Close\"\n        onClick={closeToggle}\n      />\n    </div>\n  )}\n</Modal>\n)}\n`;\n\nconst autoCloseCode = `\n<Button\nonClick={() => this.setState({ autoCloseModalOpen: true })}\n>\n  Open Modal\n</Button>\n{this.state.autoCloseModalOpen && (\n<Modal autoClose={false}>\n{closeToggle => (\n  <div\n    style={{\n      width: '100%',\n      height: '250px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      background: 'white',\n    }}\n  >\n    <input\n      style={{ fontSize: '20px' }}\n      type=\"button\"\n      value=\"Close\"\n      onClick={\n          () => {\n            this.setState({ autoCloseModalOpen: false });\n            closeToggle();\n          }}\n    />\n  </div>\n)}\n</Modal>\n)}\n`;\nconst hideBackdropCode = `\n<Button\nonClick={() => this.setState({ hideBackdropModalOpen: true })}\n>\n  Open Modal\n</Button>\n{this.state.hideBackdropModalOpen && (\n<Modal\nhideBackDrop\nonClose={() => this.setState({ hideBackdropModalOpen: false })}\n>\n{closeToggle => (\n  <div\n    style={{\n      width: '100%',\n      height: '250px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      background: 'white',\n    }}\n  >\n    <input\n      style={{ fontSize: '20px' }}\n      type=\"button\"\n      value=\"Close\"\n      onClick={closeToggle}\n    />\n  </div>\n)}\n</Modal>\n)}\n`;\nconst onCloseCode = `\n<Button\n  onClick={() => this.setState({ onCloseModal: true })}\n>\n    Open Modal\n</Button>\n{this.state.onCloseModal && (\n<Modal top onClose={() => { this.setState({ onCloseModal: false }); alert('Closed'); }}>\n  {closeToggle => (\n    <div\n      style={{\n        width: '100%',\n        height: '250px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        background: 'white',\n      }}\n    >\n      <input\n        style={{ fontSize: '20px' }}\n        type=\"button\"\n        value=\"Close\"\n        onClick={closeToggle}\n      />\n    </div>\n  )}\n</Modal>\n)}\n`;\nconst modalSizeCode = `\n<Button\n              onClick={() => this.setState({ largeModalOpen: true })}\n            >\n                Open Large Modal\n            </Button>\n            {this.state.largeModalOpen && (\n            <Modal large onClose={() => this.setState({ largeModalOpen: false })}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n\n<Button\n  onClick={() => this.setState({ customSizeModal: true })}\n>\n    Open Custom Size Modal\n</Button>\n{this.state.customSizeModal && (\n<Modal style={{ width: '90%' }} onClose={() => this.setState({ customSizeModal: false })}>\n  {closeToggle => (\n    <div\n      style={{\n        width: '100%',\n        height: '250px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        background: 'white',\n      }}\n    >\n      <input\n        style={{ fontSize: '20px' }}\n        type=\"button\"\n        value=\"Close\"\n        onClick={closeToggle}\n      />\n    </div>\n  )}\n</Modal>\n)}\n`;\nexport {\n  autoCloseCode,\n  hideBackdropCode,\n  simpleCode,\n  onCloseCode,\n  modalSizeCode,\n};\n"]},"metadata":{},"sourceType":"module"}