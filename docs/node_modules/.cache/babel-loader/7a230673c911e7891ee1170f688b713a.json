{"ast":null,"code":"var customHeaderCode = \"\\n\";\nvar propsCode = \"\\n<Accordion onChange={({ index, opened }) => { console.log(index, opened); }}>\\n  <Accordion.Item index={1} open>\\n    <Accordion.Header>\\n      Accordion 1\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      This is open by default.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n  <Accordion.Item index={2} disabled>\\n    <Accordion.Header>\\n      This is a disabled header\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n  <Accordion.Item index={3}>\\n    <Accordion.Header>\\n      Check the console for events\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n</Accordion>\\n\";\nvar simpleCode = \"\\n<Accordion>\\n  <Accordion.Item index={1}>\\n    <Accordion.Header>\\n      Accordion 1\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n\\n  <Accordion.Item index={2}>\\n    <Accordion.Header>\\n      Accordion 2\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n\\n  <Accordion.Item index={3}>\\n    <Accordion.Header>\\n      Accordion 3\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n</Accordion>\\n\";\nvar singularCode = \"\\n<Accordion singular>\\n  <Accordion.Item index={1}>\\n    <Accordion.Header>\\n      Accordion 1\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n\\n  <Accordion.Item index={2}>\\n    <Accordion.Header>\\n      Accordion 2\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n\\n  <Accordion.Item index={3}>\\n    <Accordion.Header>\\n      Accordion 3\\n    </Accordion.Header>\\n    <Accordion.Body>\\n      A lot of things can be here.\\n      A paragraph of some other content, a component too and other things too...\\n    </Accordion.Body>\\n  </Accordion.Item>\\n</Accordion>\\n\";\nexport { customHeaderCode, propsCode, simpleCode, singularCode };","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/accordion/code-refrence.js"],"names":["customHeaderCode","propsCode","simpleCode","singularCode"],"mappings":"AAAA,IAAMA,gBAAgB,OAAtB;AAGA,IAAMC,SAAS,y4BAAf;AA+BA,IAAMC,UAAU,o3BAAhB;AAkCA,IAAMC,YAAY,63BAAlB;AAkCA,SACEH,gBADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,YAJF","sourcesContent":["const customHeaderCode = `\n`;\n\nconst propsCode = `\n<Accordion onChange={({ index, opened }) => { console.log(index, opened); }}>\n  <Accordion.Item index={1} open>\n    <Accordion.Header>\n      Accordion 1\n    </Accordion.Header>\n    <Accordion.Body>\n      This is open by default.\n    </Accordion.Body>\n  </Accordion.Item>\n  <Accordion.Item index={2} disabled>\n    <Accordion.Header>\n      This is a disabled header\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n  <Accordion.Item index={3}>\n    <Accordion.Header>\n      Check the console for events\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n</Accordion>\n`;\n\nconst simpleCode = `\n<Accordion>\n  <Accordion.Item index={1}>\n    <Accordion.Header>\n      Accordion 1\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n\n  <Accordion.Item index={2}>\n    <Accordion.Header>\n      Accordion 2\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n\n  <Accordion.Item index={3}>\n    <Accordion.Header>\n      Accordion 3\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n</Accordion>\n`;\n\nconst singularCode = `\n<Accordion singular>\n  <Accordion.Item index={1}>\n    <Accordion.Header>\n      Accordion 1\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n\n  <Accordion.Item index={2}>\n    <Accordion.Header>\n      Accordion 2\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n\n  <Accordion.Item index={3}>\n    <Accordion.Header>\n      Accordion 3\n    </Accordion.Header>\n    <Accordion.Body>\n      A lot of things can be here.\n      A paragraph of some other content, a component too and other things too...\n    </Accordion.Body>\n  </Accordion.Item>\n</Accordion>\n`;\n\nexport {\n  customHeaderCode,\n  propsCode,\n  simpleCode,\n  singularCode,\n};\n"]},"metadata":{},"sourceType":"module"}