{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = exports.shrink = exports.toastWidth = exports.gutter = exports.borderRadius = void 0;\n\nvar _react = require(\"../../../node_modules/react\");\n\nvar _core = require(\"../../../node_modules/@emotion/core/types\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"from { height: 100%; } to { height: 0% }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nvar borderRadius = 4;\nexports.borderRadius = borderRadius;\nvar gutter = 8;\nexports.gutter = gutter;\nvar toastWidth = 360;\nexports.toastWidth = toastWidth;\nvar shrink = (0, _core.keyframes)(_templateObject());\nexports.shrink = shrink;\nvar styles = {\n  toastContainer: function toastContainer(_ref) {\n    var children = _ref.children;\n    return {\n      boxSizing: 'border-box',\n      maxHeight: '100%',\n      overflowX: 'hidden',\n      overflowY: 'hidden',\n      padding: gutter,\n      pointerEvents: _react.Children.count(children) ? 'auto' : 'none',\n      position: 'fixed'\n    };\n  },\n  toastStyle: function toastStyle(_ref2) {\n    var transitionDuration = _ref2.transitionDuration;\n    return {\n      boxShadow: '0 3px 8px rgba(0, 0, 0, 0.175)',\n      display: 'flex',\n      marginBottom: gutter,\n      transition: \"transform \".concat(transitionDuration, \"ms cubic-bezier(0.2, 0, 0, 1)\"),\n      maxWidth: toastWidth,\n      width: 'auto'\n    };\n  },\n  getPlacements: function getPlacements(_ref3) {\n    var topLeft = _ref3.topLeft,\n        topCenter = _ref3.topCenter,\n        topRight = _ref3.topRight,\n        bottomLeft = _ref3.bottomLeft,\n        bottomCenter = _ref3.bottomCenter,\n        bottomRight = _ref3.bottomRight;\n    if (topLeft) return {\n      top: 0,\n      left: 0\n    };\n    if (topCenter) return {\n      top: 0,\n      left: '50%',\n      transform: 'translateX(-50%)'\n    };\n    if (bottomLeft) return {\n      bottom: 0,\n      left: 0\n    };\n    if (bottomCenter) return {\n      bottom: 0,\n      left: '50%',\n      transform: 'translateX(-50%)'\n    };\n    if (bottomRight) return {\n      bottom: 0,\n      right: 0\n    };\n    if (topRight) return {\n      top: 0,\n      right: 0\n    };\n    return null;\n  },\n  getTranslate: function getTranslate(_ref4) {\n    var topLeft = _ref4.topLeft,\n        topCenter = _ref4.topCenter,\n        topRight = _ref4.topRight,\n        bottomLeft = _ref4.bottomLeft,\n        bottomCenter = _ref4.bottomCenter,\n        bottomRight = _ref4.bottomRight; // const relevantPlacement = pos[1] === 'center' ? pos[0] : pos[1];\n\n    var translateMap = {\n      right: 'translate3d(120%, 0, 0)',\n      left: 'translate3d(-120%, 0, 0)',\n      bottom: 'translate3d(0, 120%, 0)',\n      top: 'translate3d(0, -120%, 0)'\n    };\n    if (topLeft) return translateMap.left;\n    if (topCenter) return translateMap.top;\n    if (bottomCenter) return translateMap.bottom;\n    if (bottomLeft) return translateMap.left;\n    if (bottomRight) return translateMap.right;\n    if (topRight) return translateMap.right;\n    return null;\n  },\n  toastStates: function toastStates(placement, transitionState) {\n    return {\n      entering: {\n        transform: styles.getTranslate(placement)\n      },\n      entered: {\n        transform: 'translate3d(0,0,0)'\n      },\n      exiting: {\n        transform: styles.getTranslate(placement)\n      },\n      exited: {\n        transform: styles.getTranslate(placement)\n      }\n    }[transitionState];\n  },\n  getStateDivStyle: function getStateDivStyle(_ref5) {\n    var topLeft = _ref5.topLeft,\n        topCenter = _ref5.topCenter,\n        topRight = _ref5.topRight,\n        bottomLeft = _ref5.bottomLeft,\n        bottomCenter = _ref5.bottomCenter,\n        bottomRight = _ref5.bottomRight,\n        transitionState = _ref5.transitionState;\n    var statesStyles = styles.toastStates({\n      topLeft: topLeft,\n      topCenter: topCenter,\n      topRight: topRight,\n      bottomLeft: bottomLeft,\n      bottomCenter: bottomCenter,\n      bottomRight: bottomRight\n    }, transitionState);\n    return statesStyles;\n  }\n};\nexports.styles = styles;","map":null,"metadata":{},"sourceType":"script"}