{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _css2 = _interopRequireDefault(require(\"@emotion/css\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _jquery = _interopRequireDefault(require(\"jquery\"));\n\nvar _styles = require(\"./styles\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Portal =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Portal, _PureComponent);\n\n  function Portal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Portal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Portal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"containerChildRef\", _react.default.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"conatinerBgRef\", _react.default.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", _react.default.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"animateIn\", function (left, right, bottom, top, container, elem, elemBg, hideBackDrop) {\n      var duration = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 300;\n      (0, _jquery.default)(container).show();\n      (0, _jquery.default)(elemBg).animate({\n        opacity: hideBackDrop ? 1 : 0.6\n      }, duration);\n\n      if (left) {\n        elem.style.marginLeft = \"\".concat(elem.offsetWidth * -1, \"px\");\n        (0, _jquery.default)(elem).animate({\n          marginLeft: 0\n        }, duration);\n      } else if (right) {\n        elem.style.marginRight = \"\".concat(elem.offsetWidth * -1, \"px\");\n        (0, _jquery.default)(elem).animate({\n          marginRight: 0\n        }, duration);\n      } else if (bottom) {\n        elem.style.marginBottom = \"\".concat(elem.offsetHeight * -1, \"px\");\n        (0, _jquery.default)(elem).animate({\n          marginBottom: 0\n        }, duration);\n      } else if (top) {\n        elem.style.marginTop = \"\".concat(elem.offsetHeight * -1, \"px\");\n        (0, _jquery.default)(elem).animate({\n          marginTop: 0\n        }, duration);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animateOut\", function (left, right, bottom, top, container, elem, elemBg, callBack) {\n      var duration = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 300;\n      (0, _jquery.default)(container).hide();\n      (0, _jquery.default)(elemBg).animate({\n        opacity: 0\n      }, duration, callBack);\n\n      if (left) {\n        (0, _jquery.default)(elem).animate({\n          marginLeft: \"\".concat(elem.offsetWidth * -1, \"px\")\n        }, duration);\n      } else if (right) {\n        (0, _jquery.default)(elem).animate({\n          marginRight: \"\".concat(elem.offsetWidth * -1, \"px\")\n        }, duration);\n      } else if (bottom) {\n        (0, _jquery.default)(elem).animate({\n          marginBottom: \"\".concat(elem.offsetHeight * -1, \"px\")\n        }, duration);\n      } else if (top) {\n        (0, _jquery.default)(elem).animate({\n          marginTop: \"\".concat(elem.offsetHeight * -1, \"px\")\n        }, duration);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getContainerDefaultStyle\", function (left, right, bottom, top) {\n      if (left) {\n        return {\n          left: 0,\n          height: '100%',\n          width: 'auto'\n        };\n      }\n\n      if (right) {\n        return {\n          right: 0,\n          height: '100%',\n          width: 'auto'\n        };\n      }\n\n      if (bottom) {\n        return {\n          bottom: 0,\n          width: '100%',\n          height: 'auto'\n        };\n      }\n\n      if (top) {\n        return {\n          top: 0,\n          width: '100%',\n          height: 'auto'\n        };\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"close\", function (event) {\n      var _this$props = _this.props,\n          left = _this$props.left,\n          right = _this$props.right,\n          bottom = _this$props.bottom,\n          top = _this$props.top;\n\n      _this.animateOut(left, right, bottom, top, _this.containerRef.current, _this.containerChildRef.current, _this.conatinerBgRef.current, function () {\n        if (_this.props.onClose) _this.props.onClose({\n          event: event\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Portal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          left = _this$props2.left,\n          right = _this$props2.right,\n          bottom = _this$props2.bottom,\n          top = _this$props2.top,\n          hideBackDrop = _this$props2.hideBackDrop;\n      this.animateIn(left, right, bottom, top, this.containerRef.current, this.containerChildRef.current, this.conatinerBgRef.current, hideBackDrop);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          left = _this$props3.left,\n          right = _this$props3.right,\n          bottom = _this$props3.bottom,\n          top = _this$props3.top,\n          autoClose = _this$props3.autoClose,\n          hideBackDrop = _this$props3.hideBackDrop,\n          children = _this$props3.children,\n          otherProps = _objectWithoutProperties(_this$props3, [\"left\", \"right\", \"bottom\", \"top\", \"autoClose\", \"hideBackDrop\", \"children\"]);\n\n      return (0, _core.jsx)(\"div\", _extends({\n        ref: this.containerRef,\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.container], \"label:Portal;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3BvcnRhbC9wb3J0YWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaVBRIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3BvcnRhbC9wb3J0YWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcblxuY2xhc3MgUG9ydGFsIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgcG9ydGFsIHdpbGwgYmUgcG9zaXRpb25lZCB0b3BcbiAgICAgKiBEZWZhdWx0cyB0byAndHJ1ZSdcbiAgICAgKi9cbiAgICB0b3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIHBvcnRhbCB3aWxsIGJlIHBvc2l0aW9uZWQgYm90dG9tXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgcG9ydGFsIHdpbGwgYmUgcG9zaXRpb25lZCBsZWZ0XG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIHBvcnRhbCB3aWxsIGJlIHBvc2l0aW9uZWQgcmlnaHRcbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgcmlnaHQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1vZGFsIGNhbiBiZSBjbG9zZWQgYnkgY2xpY2tpbmcgb3V0c2lkZSBpdFxuICAgICAqIERlZmF1bHRzIHRvICd0cnVlJ1xuICAgICAqL1xuICAgIGF1dG9DbG9zZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgYmFja2dyb3VuZCBpcyBub3QgdmlzaWJsZSBvbmNlIHRoZSBtb2RhbCBpcyBvcGVuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGhpZGVCYWNrRHJvcDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogVGhlIGNhbGxiYWNrIGNhbGxlZCB3aGVuIG1vZGFsIGlzIGNsb3NlZFxuICAgICAqL1xuICAgIG9uQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgdG9wOiB0cnVlLFxuICAgIGxlZnQ6IGZhbHNlLFxuICAgIHJpZ2h0OiBmYWxzZSxcbiAgICBib3R0b206IGZhbHNlLFxuICAgIGF1dG9DbG9zZTogdHJ1ZSxcbiAgICBoaWRlQmFja0Ryb3A6IGZhbHNlLFxuICAgIG9uQ2xvc2U6IHVuZGVmaW5lZCxcbiAgfTtcblxuICBjb250YWluZXJDaGlsZFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuXG4gIGNvbmF0aW5lckJnUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgY29udGFpbmVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGVmdCwgcmlnaHQsIGJvdHRvbSwgdG9wLCBoaWRlQmFja0Ryb3AsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5hbmltYXRlSW4oXG4gICAgICBsZWZ0LFxuICAgICAgcmlnaHQsXG4gICAgICBib3R0b20sXG4gICAgICB0b3AsXG4gICAgICB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LFxuICAgICAgdGhpcy5jb250YWluZXJDaGlsZFJlZi5jdXJyZW50LFxuICAgICAgdGhpcy5jb25hdGluZXJCZ1JlZi5jdXJyZW50LFxuICAgICAgaGlkZUJhY2tEcm9wLFxuICAgICk7XG4gIH1cblxuICBhbmltYXRlSW4gPSAoXG4gICAgbGVmdCxcbiAgICByaWdodCxcbiAgICBib3R0b20sXG4gICAgdG9wLFxuICAgIGNvbnRhaW5lcixcbiAgICBlbGVtLFxuICAgIGVsZW1CZyxcbiAgICBoaWRlQmFja0Ryb3AsXG4gICAgZHVyYXRpb24gPSAzMDAsXG4gICkgPT4ge1xuICAgICQoY29udGFpbmVyKS5zaG93KCk7XG4gICAgJChlbGVtQmcpLmFuaW1hdGUoXG4gICAgICB7XG4gICAgICAgIG9wYWNpdHk6IGhpZGVCYWNrRHJvcCA/IDEgOiAwLjYsXG4gICAgICB9LFxuICAgICAgZHVyYXRpb24sXG4gICAgKTtcbiAgICBpZiAobGVmdCkge1xuICAgICAgZWxlbS5zdHlsZS5tYXJnaW5MZWZ0ID0gYCR7ZWxlbS5vZmZzZXRXaWR0aCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpbkxlZnQ6IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHJpZ2h0KSB7XG4gICAgICBlbGVtLnN0eWxlLm1hcmdpblJpZ2h0ID0gYCR7ZWxlbS5vZmZzZXRXaWR0aCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpblJpZ2h0OiAwLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChib3R0b20pIHtcbiAgICAgIGVsZW0uc3R5bGUubWFyZ2luQm90dG9tID0gYCR7ZWxlbS5vZmZzZXRIZWlnaHQgKiAtMX1weGA7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5Cb3R0b206IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHRvcCkge1xuICAgICAgZWxlbS5zdHlsZS5tYXJnaW5Ub3AgPSBgJHtlbGVtLm9mZnNldEhlaWdodCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpblRvcDogMCxcbiAgICAgICAgfSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICBhbmltYXRlT3V0ID0gKFxuICAgIGxlZnQsXG4gICAgcmlnaHQsXG4gICAgYm90dG9tLFxuICAgIHRvcCxcbiAgICBjb250YWluZXIsXG4gICAgZWxlbSxcbiAgICBlbGVtQmcsXG4gICAgY2FsbEJhY2ssXG4gICAgZHVyYXRpb24gPSAzMDAsXG4gICkgPT4ge1xuICAgICQoY29udGFpbmVyKS5oaWRlKCk7XG4gICAgJChlbGVtQmcpLmFuaW1hdGUoXG4gICAgICB7XG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICB9LFxuICAgICAgZHVyYXRpb24sXG4gICAgICBjYWxsQmFjayxcbiAgICApO1xuICAgIGlmIChsZWZ0KSB7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5MZWZ0OiBgJHtlbGVtLm9mZnNldFdpZHRoICogLTF9cHhgLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChyaWdodCkge1xuICAgICAgJChlbGVtKS5hbmltYXRlKFxuICAgICAgICB7XG4gICAgICAgICAgbWFyZ2luUmlnaHQ6IGAke2VsZW0ub2Zmc2V0V2lkdGggKiAtMX1weGAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGJvdHRvbSkge1xuICAgICAgJChlbGVtKS5hbmltYXRlKFxuICAgICAgICB7XG4gICAgICAgICAgbWFyZ2luQm90dG9tOiBgJHtlbGVtLm9mZnNldEhlaWdodCAqIC0xfXB4YCxcbiAgICAgICAgfSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAodG9wKSB7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5Ub3A6IGAke2VsZW0ub2Zmc2V0SGVpZ2h0ICogLTF9cHhgLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIGdldENvbnRhaW5lckRlZmF1bHRTdHlsZSA9IChsZWZ0LCByaWdodCwgYm90dG9tLCB0b3ApID0+IHtcbiAgICBpZiAobGVmdCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGVmdDogMCxcbiAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgIHdpZHRoOiAnYXV0bycsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAocmlnaHQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgd2lkdGg6ICdhdXRvJyxcbiAgICAgIH07XG4gICAgfVxuICAgIGlmIChib3R0b20pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAodG9wKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6IDAsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJ2F1dG8nLFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgY2xvc2UgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBsZWZ0LCByaWdodCwgYm90dG9tLCB0b3AsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5hbmltYXRlT3V0KFxuICAgICAgbGVmdCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgdG9wLFxuICAgICAgdGhpcy5jb250YWluZXJSZWYuY3VycmVudCxcbiAgICAgIHRoaXMuY29udGFpbmVyQ2hpbGRSZWYuY3VycmVudCxcbiAgICAgIHRoaXMuY29uYXRpbmVyQmdSZWYuY3VycmVudCxcbiAgICAgICgpID0+IHsgaWYgKHRoaXMucHJvcHMub25DbG9zZSkgdGhpcy5wcm9wcy5vbkNsb3NlKHsgZXZlbnQgfSk7IH0sXG4gICAgKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGVmdCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgdG9wLFxuICAgICAgYXV0b0Nsb3NlLFxuICAgICAgaGlkZUJhY2tEcm9wLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lclJlZn1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgXX1cbiAgICAgICAgey4uLm90aGVyUHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICByZWY9e3RoaXMuY29uYXRpbmVyQmdSZWZ9XG4gICAgICAgICAgb25DbGljaz17YXV0b0Nsb3NlID8gdGhpcy5jbG9zZSA6IHVuZGVmaW5lZH1cbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5iZyxcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5iZ31cbiAgICAgICAgLz5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lckNoaWxkUmVmfVxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNoaWxkLFxuICAgICAgICAgICAgdGhpcy5nZXRDb250YWluZXJEZWZhdWx0U3R5bGUobGVmdCwgcmlnaHQsIGJvdHRvbSwgdG9wKSxcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgPlxuICAgICAgICAgIHt0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicgPyBjaGlsZHJlbih0aGlzLmNsb3NlKSA6IGNoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9ydGFsO1xuIl19 */\"))\n      }, otherProps), (0, _core.jsx)(\"div\", {\n        ref: this.conatinerBgRef,\n        onClick: autoClose ? this.close : undefined,\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.bg], \"label:Portal;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3BvcnRhbC9wb3J0YWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeVBVIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3BvcnRhbC9wb3J0YWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcblxuY2xhc3MgUG9ydGFsIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgcG9ydGFsIHdpbGwgYmUgcG9zaXRpb25lZCB0b3BcbiAgICAgKiBEZWZhdWx0cyB0byAndHJ1ZSdcbiAgICAgKi9cbiAgICB0b3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIHBvcnRhbCB3aWxsIGJlIHBvc2l0aW9uZWQgYm90dG9tXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgcG9ydGFsIHdpbGwgYmUgcG9zaXRpb25lZCBsZWZ0XG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIHBvcnRhbCB3aWxsIGJlIHBvc2l0aW9uZWQgcmlnaHRcbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgcmlnaHQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1vZGFsIGNhbiBiZSBjbG9zZWQgYnkgY2xpY2tpbmcgb3V0c2lkZSBpdFxuICAgICAqIERlZmF1bHRzIHRvICd0cnVlJ1xuICAgICAqL1xuICAgIGF1dG9DbG9zZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgYmFja2dyb3VuZCBpcyBub3QgdmlzaWJsZSBvbmNlIHRoZSBtb2RhbCBpcyBvcGVuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGhpZGVCYWNrRHJvcDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogVGhlIGNhbGxiYWNrIGNhbGxlZCB3aGVuIG1vZGFsIGlzIGNsb3NlZFxuICAgICAqL1xuICAgIG9uQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgdG9wOiB0cnVlLFxuICAgIGxlZnQ6IGZhbHNlLFxuICAgIHJpZ2h0OiBmYWxzZSxcbiAgICBib3R0b206IGZhbHNlLFxuICAgIGF1dG9DbG9zZTogdHJ1ZSxcbiAgICBoaWRlQmFja0Ryb3A6IGZhbHNlLFxuICAgIG9uQ2xvc2U6IHVuZGVmaW5lZCxcbiAgfTtcblxuICBjb250YWluZXJDaGlsZFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuXG4gIGNvbmF0aW5lckJnUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgY29udGFpbmVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGVmdCwgcmlnaHQsIGJvdHRvbSwgdG9wLCBoaWRlQmFja0Ryb3AsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5hbmltYXRlSW4oXG4gICAgICBsZWZ0LFxuICAgICAgcmlnaHQsXG4gICAgICBib3R0b20sXG4gICAgICB0b3AsXG4gICAgICB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LFxuICAgICAgdGhpcy5jb250YWluZXJDaGlsZFJlZi5jdXJyZW50LFxuICAgICAgdGhpcy5jb25hdGluZXJCZ1JlZi5jdXJyZW50LFxuICAgICAgaGlkZUJhY2tEcm9wLFxuICAgICk7XG4gIH1cblxuICBhbmltYXRlSW4gPSAoXG4gICAgbGVmdCxcbiAgICByaWdodCxcbiAgICBib3R0b20sXG4gICAgdG9wLFxuICAgIGNvbnRhaW5lcixcbiAgICBlbGVtLFxuICAgIGVsZW1CZyxcbiAgICBoaWRlQmFja0Ryb3AsXG4gICAgZHVyYXRpb24gPSAzMDAsXG4gICkgPT4ge1xuICAgICQoY29udGFpbmVyKS5zaG93KCk7XG4gICAgJChlbGVtQmcpLmFuaW1hdGUoXG4gICAgICB7XG4gICAgICAgIG9wYWNpdHk6IGhpZGVCYWNrRHJvcCA/IDEgOiAwLjYsXG4gICAgICB9LFxuICAgICAgZHVyYXRpb24sXG4gICAgKTtcbiAgICBpZiAobGVmdCkge1xuICAgICAgZWxlbS5zdHlsZS5tYXJnaW5MZWZ0ID0gYCR7ZWxlbS5vZmZzZXRXaWR0aCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpbkxlZnQ6IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHJpZ2h0KSB7XG4gICAgICBlbGVtLnN0eWxlLm1hcmdpblJpZ2h0ID0gYCR7ZWxlbS5vZmZzZXRXaWR0aCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpblJpZ2h0OiAwLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChib3R0b20pIHtcbiAgICAgIGVsZW0uc3R5bGUubWFyZ2luQm90dG9tID0gYCR7ZWxlbS5vZmZzZXRIZWlnaHQgKiAtMX1weGA7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5Cb3R0b206IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHRvcCkge1xuICAgICAgZWxlbS5zdHlsZS5tYXJnaW5Ub3AgPSBgJHtlbGVtLm9mZnNldEhlaWdodCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpblRvcDogMCxcbiAgICAgICAgfSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICBhbmltYXRlT3V0ID0gKFxuICAgIGxlZnQsXG4gICAgcmlnaHQsXG4gICAgYm90dG9tLFxuICAgIHRvcCxcbiAgICBjb250YWluZXIsXG4gICAgZWxlbSxcbiAgICBlbGVtQmcsXG4gICAgY2FsbEJhY2ssXG4gICAgZHVyYXRpb24gPSAzMDAsXG4gICkgPT4ge1xuICAgICQoY29udGFpbmVyKS5oaWRlKCk7XG4gICAgJChlbGVtQmcpLmFuaW1hdGUoXG4gICAgICB7XG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICB9LFxuICAgICAgZHVyYXRpb24sXG4gICAgICBjYWxsQmFjayxcbiAgICApO1xuICAgIGlmIChsZWZ0KSB7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5MZWZ0OiBgJHtlbGVtLm9mZnNldFdpZHRoICogLTF9cHhgLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChyaWdodCkge1xuICAgICAgJChlbGVtKS5hbmltYXRlKFxuICAgICAgICB7XG4gICAgICAgICAgbWFyZ2luUmlnaHQ6IGAke2VsZW0ub2Zmc2V0V2lkdGggKiAtMX1weGAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGJvdHRvbSkge1xuICAgICAgJChlbGVtKS5hbmltYXRlKFxuICAgICAgICB7XG4gICAgICAgICAgbWFyZ2luQm90dG9tOiBgJHtlbGVtLm9mZnNldEhlaWdodCAqIC0xfXB4YCxcbiAgICAgICAgfSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAodG9wKSB7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5Ub3A6IGAke2VsZW0ub2Zmc2V0SGVpZ2h0ICogLTF9cHhgLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIGdldENvbnRhaW5lckRlZmF1bHRTdHlsZSA9IChsZWZ0LCByaWdodCwgYm90dG9tLCB0b3ApID0+IHtcbiAgICBpZiAobGVmdCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGVmdDogMCxcbiAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgIHdpZHRoOiAnYXV0bycsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAocmlnaHQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgd2lkdGg6ICdhdXRvJyxcbiAgICAgIH07XG4gICAgfVxuICAgIGlmIChib3R0b20pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAodG9wKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6IDAsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJ2F1dG8nLFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgY2xvc2UgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBsZWZ0LCByaWdodCwgYm90dG9tLCB0b3AsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5hbmltYXRlT3V0KFxuICAgICAgbGVmdCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgdG9wLFxuICAgICAgdGhpcy5jb250YWluZXJSZWYuY3VycmVudCxcbiAgICAgIHRoaXMuY29udGFpbmVyQ2hpbGRSZWYuY3VycmVudCxcbiAgICAgIHRoaXMuY29uYXRpbmVyQmdSZWYuY3VycmVudCxcbiAgICAgICgpID0+IHsgaWYgKHRoaXMucHJvcHMub25DbG9zZSkgdGhpcy5wcm9wcy5vbkNsb3NlKHsgZXZlbnQgfSk7IH0sXG4gICAgKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGVmdCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgdG9wLFxuICAgICAgYXV0b0Nsb3NlLFxuICAgICAgaGlkZUJhY2tEcm9wLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lclJlZn1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgXX1cbiAgICAgICAgey4uLm90aGVyUHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICByZWY9e3RoaXMuY29uYXRpbmVyQmdSZWZ9XG4gICAgICAgICAgb25DbGljaz17YXV0b0Nsb3NlID8gdGhpcy5jbG9zZSA6IHVuZGVmaW5lZH1cbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5iZyxcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5iZ31cbiAgICAgICAgLz5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lckNoaWxkUmVmfVxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNoaWxkLFxuICAgICAgICAgICAgdGhpcy5nZXRDb250YWluZXJEZWZhdWx0U3R5bGUobGVmdCwgcmlnaHQsIGJvdHRvbSwgdG9wKSxcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgPlxuICAgICAgICAgIHt0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicgPyBjaGlsZHJlbih0aGlzLmNsb3NlKSA6IGNoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9ydGFsO1xuIl19 */\")),\n        className: _styles.BEMClassNames.bg\n      }), (0, _core.jsx)(\"div\", {\n        ref: this.containerChildRef,\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.child, this.getContainerDefaultStyle(left, right, bottom, top)], \"label:Portal;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3BvcnRhbC9wb3J0YWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaVFVIiwiZmlsZSI6Ii4uLy4uLy4uL2xpYi9jb21wb25lbnRzL3BvcnRhbC9wb3J0YWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IHN0eWxlcywgQkVNQ2xhc3NOYW1lcyB9IGZyb20gJy4vc3R5bGVzJztcblxuY2xhc3MgUG9ydGFsIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgcG9ydGFsIHdpbGwgYmUgcG9zaXRpb25lZCB0b3BcbiAgICAgKiBEZWZhdWx0cyB0byAndHJ1ZSdcbiAgICAgKi9cbiAgICB0b3A6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIHBvcnRhbCB3aWxsIGJlIHBvc2l0aW9uZWQgYm90dG9tXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGJvdHRvbTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgcG9ydGFsIHdpbGwgYmUgcG9zaXRpb25lZCBsZWZ0XG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGxlZnQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIHBvcnRhbCB3aWxsIGJlIHBvc2l0aW9uZWQgcmlnaHRcbiAgICAgKiBEZWZhdWx0cyB0byAnZmFsc2UnXG4gICAgICovXG4gICAgcmlnaHQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIElmICd0cnVlJywgdGhlIG1vZGFsIGNhbiBiZSBjbG9zZWQgYnkgY2xpY2tpbmcgb3V0c2lkZSBpdFxuICAgICAqIERlZmF1bHRzIHRvICd0cnVlJ1xuICAgICAqL1xuICAgIGF1dG9DbG9zZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogSWYgJ3RydWUnLCB0aGUgYmFja2dyb3VuZCBpcyBub3QgdmlzaWJsZSBvbmNlIHRoZSBtb2RhbCBpcyBvcGVuXG4gICAgICogRGVmYXVsdHMgdG8gJ2ZhbHNlJ1xuICAgICAqL1xuICAgIGhpZGVCYWNrRHJvcDogUHJvcFR5cGVzLmJvb2wsXG4gICAgLyoqXG4gICAgICogVGhlIGNhbGxiYWNrIGNhbGxlZCB3aGVuIG1vZGFsIGlzIGNsb3NlZFxuICAgICAqL1xuICAgIG9uQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgdG9wOiB0cnVlLFxuICAgIGxlZnQ6IGZhbHNlLFxuICAgIHJpZ2h0OiBmYWxzZSxcbiAgICBib3R0b206IGZhbHNlLFxuICAgIGF1dG9DbG9zZTogdHJ1ZSxcbiAgICBoaWRlQmFja0Ryb3A6IGZhbHNlLFxuICAgIG9uQ2xvc2U6IHVuZGVmaW5lZCxcbiAgfTtcblxuICBjb250YWluZXJDaGlsZFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuXG4gIGNvbmF0aW5lckJnUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgY29udGFpbmVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGVmdCwgcmlnaHQsIGJvdHRvbSwgdG9wLCBoaWRlQmFja0Ryb3AsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5hbmltYXRlSW4oXG4gICAgICBsZWZ0LFxuICAgICAgcmlnaHQsXG4gICAgICBib3R0b20sXG4gICAgICB0b3AsXG4gICAgICB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LFxuICAgICAgdGhpcy5jb250YWluZXJDaGlsZFJlZi5jdXJyZW50LFxuICAgICAgdGhpcy5jb25hdGluZXJCZ1JlZi5jdXJyZW50LFxuICAgICAgaGlkZUJhY2tEcm9wLFxuICAgICk7XG4gIH1cblxuICBhbmltYXRlSW4gPSAoXG4gICAgbGVmdCxcbiAgICByaWdodCxcbiAgICBib3R0b20sXG4gICAgdG9wLFxuICAgIGNvbnRhaW5lcixcbiAgICBlbGVtLFxuICAgIGVsZW1CZyxcbiAgICBoaWRlQmFja0Ryb3AsXG4gICAgZHVyYXRpb24gPSAzMDAsXG4gICkgPT4ge1xuICAgICQoY29udGFpbmVyKS5zaG93KCk7XG4gICAgJChlbGVtQmcpLmFuaW1hdGUoXG4gICAgICB7XG4gICAgICAgIG9wYWNpdHk6IGhpZGVCYWNrRHJvcCA/IDEgOiAwLjYsXG4gICAgICB9LFxuICAgICAgZHVyYXRpb24sXG4gICAgKTtcbiAgICBpZiAobGVmdCkge1xuICAgICAgZWxlbS5zdHlsZS5tYXJnaW5MZWZ0ID0gYCR7ZWxlbS5vZmZzZXRXaWR0aCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpbkxlZnQ6IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHJpZ2h0KSB7XG4gICAgICBlbGVtLnN0eWxlLm1hcmdpblJpZ2h0ID0gYCR7ZWxlbS5vZmZzZXRXaWR0aCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpblJpZ2h0OiAwLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChib3R0b20pIHtcbiAgICAgIGVsZW0uc3R5bGUubWFyZ2luQm90dG9tID0gYCR7ZWxlbS5vZmZzZXRIZWlnaHQgKiAtMX1weGA7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5Cb3R0b206IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHRvcCkge1xuICAgICAgZWxlbS5zdHlsZS5tYXJnaW5Ub3AgPSBgJHtlbGVtLm9mZnNldEhlaWdodCAqIC0xfXB4YDtcbiAgICAgICQoZWxlbSkuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIG1hcmdpblRvcDogMCxcbiAgICAgICAgfSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICBhbmltYXRlT3V0ID0gKFxuICAgIGxlZnQsXG4gICAgcmlnaHQsXG4gICAgYm90dG9tLFxuICAgIHRvcCxcbiAgICBjb250YWluZXIsXG4gICAgZWxlbSxcbiAgICBlbGVtQmcsXG4gICAgY2FsbEJhY2ssXG4gICAgZHVyYXRpb24gPSAzMDAsXG4gICkgPT4ge1xuICAgICQoY29udGFpbmVyKS5oaWRlKCk7XG4gICAgJChlbGVtQmcpLmFuaW1hdGUoXG4gICAgICB7XG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICB9LFxuICAgICAgZHVyYXRpb24sXG4gICAgICBjYWxsQmFjayxcbiAgICApO1xuICAgIGlmIChsZWZ0KSB7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5MZWZ0OiBgJHtlbGVtLm9mZnNldFdpZHRoICogLTF9cHhgLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChyaWdodCkge1xuICAgICAgJChlbGVtKS5hbmltYXRlKFxuICAgICAgICB7XG4gICAgICAgICAgbWFyZ2luUmlnaHQ6IGAke2VsZW0ub2Zmc2V0V2lkdGggKiAtMX1weGAsXG4gICAgICAgIH0sXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGJvdHRvbSkge1xuICAgICAgJChlbGVtKS5hbmltYXRlKFxuICAgICAgICB7XG4gICAgICAgICAgbWFyZ2luQm90dG9tOiBgJHtlbGVtLm9mZnNldEhlaWdodCAqIC0xfXB4YCxcbiAgICAgICAgfSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAodG9wKSB7XG4gICAgICAkKGVsZW0pLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBtYXJnaW5Ub3A6IGAke2VsZW0ub2Zmc2V0SGVpZ2h0ICogLTF9cHhgLFxuICAgICAgICB9LFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIGdldENvbnRhaW5lckRlZmF1bHRTdHlsZSA9IChsZWZ0LCByaWdodCwgYm90dG9tLCB0b3ApID0+IHtcbiAgICBpZiAobGVmdCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGVmdDogMCxcbiAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgIHdpZHRoOiAnYXV0bycsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAocmlnaHQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgd2lkdGg6ICdhdXRvJyxcbiAgICAgIH07XG4gICAgfVxuICAgIGlmIChib3R0b20pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAodG9wKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6IDAsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJ2F1dG8nLFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgY2xvc2UgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBsZWZ0LCByaWdodCwgYm90dG9tLCB0b3AsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5hbmltYXRlT3V0KFxuICAgICAgbGVmdCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgdG9wLFxuICAgICAgdGhpcy5jb250YWluZXJSZWYuY3VycmVudCxcbiAgICAgIHRoaXMuY29udGFpbmVyQ2hpbGRSZWYuY3VycmVudCxcbiAgICAgIHRoaXMuY29uYXRpbmVyQmdSZWYuY3VycmVudCxcbiAgICAgICgpID0+IHsgaWYgKHRoaXMucHJvcHMub25DbG9zZSkgdGhpcy5wcm9wcy5vbkNsb3NlKHsgZXZlbnQgfSk7IH0sXG4gICAgKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGVmdCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgdG9wLFxuICAgICAgYXV0b0Nsb3NlLFxuICAgICAgaGlkZUJhY2tEcm9wLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICAuLi5vdGhlclByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lclJlZn1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgXX1cbiAgICAgICAgey4uLm90aGVyUHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICByZWY9e3RoaXMuY29uYXRpbmVyQmdSZWZ9XG4gICAgICAgICAgb25DbGljaz17YXV0b0Nsb3NlID8gdGhpcy5jbG9zZSA6IHVuZGVmaW5lZH1cbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5iZyxcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5iZ31cbiAgICAgICAgLz5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lckNoaWxkUmVmfVxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNoaWxkLFxuICAgICAgICAgICAgdGhpcy5nZXRDb250YWluZXJEZWZhdWx0U3R5bGUobGVmdCwgcmlnaHQsIGJvdHRvbSwgdG9wKSxcbiAgICAgICAgICBdfVxuICAgICAgICAgIGNsYXNzTmFtZT17QkVNQ2xhc3NOYW1lcy5jaGlsZHJlbn1cbiAgICAgICAgPlxuICAgICAgICAgIHt0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicgPyBjaGlsZHJlbih0aGlzLmNsb3NlKSA6IGNoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9ydGFsO1xuIl19 */\")),\n        className: _styles.BEMClassNames.children\n      }, typeof children === 'function' ? children(this.close) : children));\n    }\n  }]);\n\n  return Portal;\n}(_react.PureComponent);\n\n_defineProperty(Portal, \"propTypes\", {\n  /**\n   * If 'true', the portal will be positioned top\n   * Defaults to 'true'\n   */\n  top: _propTypes.default.bool,\n\n  /**\n   * If 'true', the portal will be positioned bottom\n   * Defaults to 'false'\n   */\n  bottom: _propTypes.default.bool,\n\n  /**\n   * If 'true', the portal will be positioned left\n   * Defaults to 'false'\n   */\n  left: _propTypes.default.bool,\n\n  /**\n   * If 'true', the portal will be positioned right\n   * Defaults to 'false'\n   */\n  right: _propTypes.default.bool,\n\n  /**\n   * If 'true', the modal can be closed by clicking outside it\n   * Defaults to 'true'\n   */\n  autoClose: _propTypes.default.bool,\n\n  /**\n   * If 'true', the background is not visible once the modal is open\n   * Defaults to 'false'\n   */\n  hideBackDrop: _propTypes.default.bool,\n\n  /**\n   * The callback called when modal is closed\n   */\n  onClose: _propTypes.default.func\n});\n\n_defineProperty(Portal, \"defaultProps\", {\n  top: true,\n  left: false,\n  right: false,\n  bottom: false,\n  autoClose: true,\n  hideBackDrop: false,\n  onClose: undefined\n});\n\nvar _default = Portal;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}