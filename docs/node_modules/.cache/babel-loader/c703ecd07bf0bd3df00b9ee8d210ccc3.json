{"ast":null,"code":"import _classCallCheck from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/projects/reactify/docs/src/pages/login/login.js\";\nimport React, { Component } from 'react';\nimport { Login } from '@../../../../reactify/build';\nimport { simpleCode } from './code-refrence';\nimport './login.scss';\nimport DemoCard from '../../components/demo-card';\n\nvar ModalDemo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalDemo, _Component);\n\n  function ModalDemo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalDemo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalDemo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      config: {\n        fields: {\n          username: {\n            value: '',\n            isError: true,\n            errorText: 'username error',\n            isLoading: false,\n            disabled: false\n          },\n          password: {\n            value: '',\n            isError: true,\n            errorText: 'password error',\n            isLoading: false,\n            disabled: false\n          },\n          submit: {\n            isLoading: false,\n            disabled: false\n          },\n          error: {\n            visible: true,\n            text: 'main error'\n          }\n        }\n      }\n    };\n\n    _this.handleLogin = function (_ref) {\n      var action = _ref.action,\n          value = _ref.value,\n          prevState = _ref.prevState;\n\n      if (action === Login.actionTypes.username) {\n        if (value.indexOf(' ') >= 0) {\n          _this.setState({\n            config: {\n              fields: {\n                username: {\n                  value: value,\n                  isError: true,\n                  errorText: 'Username cannot have spaces'\n                }\n              }\n            }\n          });\n        } else {\n          _this.setState({\n            config: {\n              fields: {\n                username: {\n                  value: value,\n                  isError: false,\n                  errorText: ''\n                }\n              }\n            }\n          });\n        }\n      } else if (action === Login.actionTypes.password) {\n        _this.setState({\n          config: {\n            fields: {\n              password: {\n                value: value\n              }\n            }\n          }\n        });\n      } else if (action === Login.actionTypes.submit) {\n        _this.setState({\n          config: {\n            fields: {\n              username: {\n                isLoading: true,\n                disabled: true\n              },\n              password: {\n                isLoading: true,\n                disabled: true\n              },\n              submit: {\n                isLoading: true,\n                disabled: true\n              }\n            }\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalDemo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(DemoCard, {\n        title: \"Simple Use\",\n        uniqueIdentifier: \"simpleUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"You can consider this login component as similar to a controlled component. You set the internal state via the prop 'state' and any trigger inside the control calls the prop updateState with a actionType, value and prevState\"), React.createElement(Login, {\n        state: this.state.config,\n        updateState: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ModalDemo;\n}(Component);\n\nexport default ModalDemo;","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/login/login.js"],"names":["React","Component","Login","simpleCode","DemoCard","ModalDemo","state","config","fields","username","value","isError","errorText","isLoading","disabled","password","submit","error","visible","text","handleLogin","action","prevState","actionTypes","indexOf","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Login } from '@../../../../reactify/build';\nimport {\n  simpleCode,\n} from './code-refrence';\nimport './login.scss';\nimport DemoCard from '../../components/demo-card';\n\nclass ModalDemo extends Component {\n    state = {\n      config: {\n        fields: {\n          username: {\n            value: '',\n            isError: true,\n            errorText: 'username error',\n            isLoading: false,\n            disabled: false,\n          },\n          password: {\n            value: '',\n            isError: true,\n            errorText: 'password error',\n            isLoading: false,\n            disabled: false,\n          },\n          submit: {\n            isLoading: false,\n            disabled: false,\n          },\n          error: {\n            visible: true,\n            text: 'main error',\n          },\n        },\n      },\n    };\n\n    handleLogin = ({ action, value, prevState }) => {\n      if (action === Login.actionTypes.username) {\n        if (value.indexOf(' ') >= 0) { this.setState({ config: { fields: { username: { value, isError: true, errorText: 'Username cannot have spaces' } } } }); } else {\n          this.setState({ config: { fields: { username: { value, isError: false, errorText: '' } } } });\n        }\n      } else if (action === Login.actionTypes.password) {\n        this.setState({ config: { fields: { password: { value } } } });\n      } else if (action === Login.actionTypes.submit) {\n        this.setState(\n          {\n            config: {\n              fields: {\n                username: {\n                  isLoading: true,\n                  disabled: true,\n                },\n                password: {\n                  isLoading: true,\n                  disabled: true,\n                },\n                submit: {\n                  isLoading: true,\n                  disabled: true,\n                },\n              },\n            },\n          },\n        );\n      }\n    }\n\n    render() {\n      return (\n        <div>\n          <DemoCard\n            title=\"Simple Use\"\n            uniqueIdentifier=\"simpleUse\"\n            sourceCode={simpleCode}\n          >\n            <p>\nYou can consider this login component as similar to a controlled component.\n              You set the internal state via the prop 'state'\n              and any trigger inside the control calls the prop updateState with a actionType, value and prevState\n\n            </p>\n            <Login state={this.state.config} updateState={this.handleLogin} />\n          </DemoCard>\n        </div>\n      );\n    }\n}\n\nexport default ModalDemo;\n"]},"metadata":{},"sourceType":"module"}