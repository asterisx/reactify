{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commonStyles = void 0;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/* eslint-disable no-underscore-dangle */\n\n\nvar disabled = {\n  cursor: 'not-allowed',\n  pointerEvents: 'none',\n  opacity: '0.6 !important',\n  '&:hover': {\n    pointerEvents: ' none !important'\n  }\n};\nvar hidden = {\n  display: 'none !important'\n};\nvar darkeyBy = 0.25;\nvar zdIndex = {\n  z1: {\n    zIndex: '1'\n  },\n  z10: {\n    zIndex: '10'\n  },\n  z11: {\n    zIndex: '11'\n  },\n  z100: {\n    zIndex: '100'\n  },\n  z101: {\n    zIndex: '101'\n  },\n  z1000: {\n    zIndex: '1000'\n  },\n  z1001: {\n    zIndex: '1001'\n  },\n  z10000: {\n    zIndex: '10000'\n  },\n  z10001: {\n    zIndex: '10001'\n  },\n  z100000: {\n    zIndex: '100000'\n  },\n  z100001: {\n    zIndex: '100001'\n  }\n};\n\nvar getFontColor = function getFontColor(primary, secondary, dark, light, info, warning, danger, success, theme) {\n  return Object.entries({\n    primary: primary,\n    secondary: secondary,\n    dark: dark,\n    light: light,\n    info: info,\n    warning: warning,\n    danger: danger,\n    success: success\n  }).reduce(function (color, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        isTrue = _ref2[1];\n\n    return isTrue ? theme[key].fontColor : color;\n  }, undefined);\n};\n\nvar getThemeColor = function getThemeColor(primary, secondary, dark, light, info, warning, danger, success, theme) {\n  return Object.entries({\n    primary: primary,\n    secondary: secondary,\n    dark: dark,\n    light: light,\n    info: info,\n    warning: warning,\n    danger: danger,\n    success: success\n  }).reduce(function (color, _ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        isTrue = _ref4[1];\n\n    return isTrue ? theme[key].color : color;\n  }, undefined);\n};\n\nvar getDisabled = function getDisabled(isDisabled) {\n  return isDisabled ? disabled : undefined;\n};\n\nvar get = {\n  fontColor: {\n    forTheme: function forTheme(primary, secondary, dark, light, info, warning, danger, success, theme) {\n      return {\n        color: getFontColor(primary, secondary, dark, light, info, warning, danger, success, theme)\n      };\n    },\n    ofTheme: function ofTheme(primary, secondary, dark, light, info, warning, danger, success, theme) {\n      return {\n        color: getThemeColor(primary, secondary, dark, light, info, warning, danger, success, theme)\n      };\n    }\n  },\n  backgroundColor: {\n    forTheme: function forTheme(primary, secondary, dark, light, info, warning, danger, success, theme) {\n      return {\n        backgroundColor: getThemeColor(primary, secondary, dark, light, info, warning, danger, success, theme)\n      };\n    }\n  }\n};\nvar commonStyles = {\n  disabled: disabled,\n  hidden: hidden,\n  zdIndex: zdIndex,\n  darkeyBy: darkeyBy,\n  getThemeColor: getThemeColor,\n  getFontColor: getFontColor,\n  getDisabled: getDisabled,\n  get: get\n};\nexports.commonStyles = commonStyles;","map":null,"metadata":{},"sourceType":"script"}