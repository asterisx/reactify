{"ast":null,"code":"var simpleCode = \"\\n<Button onClick={() => this.setState({ simpleModalOpen: true })}>Open Modal</Button>\\n            {this.state.simpleModalOpen && (\\n            <Modal onClose={() => this.setState({ simpleModalOpen: false })}>\\n              {closeToggle => (\\n                <div\\n                  style={{\\n                    width: '100%',\\n                    height: '250px',\\n                    display: 'flex',\\n                    justifyContent: 'center',\\n                    alignContent: 'center',\\n                    alignItems: 'center',\\n                    background: 'white',\\n                  }}\\n                >\\n                  <input\\n                    style={{ fontSize: '20px' }}\\n                    type=\\\"button\\\"\\n                    value=\\\"Close\\\"\\n                    onClick={closeToggle}\\n                  />\\n                </div>\\n              )}\\n            </Modal>\\n            )}\\n\";\nvar portalLocationCode = \"\\n<Button onClick={() => this.setState({ topPortalOpen: true })}>Open Top Portal</Button>\\n  {this.state.topPortalOpen && (\\n  <Portal top>\\n    {closeToggle => (\\n      <div\\n        style={{\\n          width: '100%',\\n          height: '100px',\\n          display: 'flex',\\n          justifyContent: 'center',\\n          alignContent: 'center',\\n          alignItems: 'center',\\n          background: 'white',\\n        }}\\n      >\\n        <input\\n          style={{ fontSize: '20px' }}\\n          type=\\\"button\\\"\\n          value=\\\"Close\\\"\\n          onClick={() => this.setState({ topPortalOpen: true }, closeToggle())}\\n        />\\n      </div>\\n    )}\\n  </Portal>\\n  )}\\n\\n<Button\\n  onClick={() => this.setState({ leftPortalOpen: true })}\\n>\\n    Open Left Portal\\n</Button>\\n{this.state.leftPortalOpen && (\\n<Portal top>\\n  {closeToggle => (\\n    <div\\n      style={{\\n        width: '100px',\\n        height: '100%',\\n        display: 'flex',\\n        justifyContent: 'center',\\n        alignContent: 'center',\\n        alignItems: 'center',\\n        background: 'white',\\n      }}\\n    >\\n      <input\\n        style={{ fontSize: '20px' }}\\n        type=\\\"button\\\"\\n        value=\\\"Close\\\"\\n        onClick={() => this.setState({ leftPortalOpen: true }, closeToggle())}\\n      />\\n    </div>\\n  )}\\n</Portal>\\n)}\\n\\n<Button\\nonClick={() => this.setState({ rightPortalOpen: true })}\\n>\\n  Open Right Portal\\n</Button>\\n{this.state.rightPortalOpen && (\\n<Portal right>\\n{closeToggle => (\\n  <div\\n    style={{\\n      width: '100px',\\n      height: '100%',\\n      display: 'flex',\\n      justifyContent: 'center',\\n      alignContent: 'center',\\n      alignItems: 'center',\\n      background: 'white',\\n    }}\\n  >\\n    <input\\n      style={{ fontSize: '20px' }}\\n      type=\\\"button\\\"\\n      value=\\\"Close\\\"\\n      onClick={() => this.setState({ rightPortalOpen: true }, closeToggle())}\\n    />\\n  </div>\\n)}\\n</Portal>\\n)}\\n\\n<Button\\n  onClick={() => this.setState({ bottomPortalOpen: true })}\\n>\\n    Open Bottom Portal\\n</Button>\\n{this.state.bottomPortalOpen && (\\n<Portal bottom>\\n  {closeToggle => (\\n    <div\\n      style={{\\n        width: '100%',\\n        height: '100px',\\n        display: 'flex',\\n        justifyContent: 'center',\\n        alignContent: 'center',\\n        alignItems: 'center',\\n        background: 'white',\\n      }}\\n    >\\n      <input\\n        style={{ fontSize: '20px' }}\\n        type=\\\"button\\\"\\n        value=\\\"Close\\\"\\n        onClick={() => this.setState({ bottomPortalOpen: true }, closeToggle())}\\n      />\\n    </div>\\n  )}\\n</Portal>\\n)}\\n\";\nvar autoCloseCode = \"\\n<Button\\nonClick={() => this.setState({ autoClosePortalOpen: true })}\\n>\\n  Open Portal\\n</Button>\\n{this.state.autoClosePortalOpen && (\\n<Portal top autoClose={false}>\\n{closeToggle => (\\n  <div\\n    style={{\\n      width: '100%',\\n      height: '100px',\\n      display: 'flex',\\n      justifyContent: 'center',\\n      alignContent: 'center',\\n      alignItems: 'center',\\n      background: 'white',\\n    }}\\n  >\\n    <input\\n      style={{ fontSize: '20px' }}\\n      type=\\\"button\\\"\\n      value=\\\"Close\\\"\\n      onClick={() => this.setState({ autoClosePortalOpen: true }, closeToggle())}\\n    />\\n  </div>\\n)}\\n</Portal>\\n)}\\n\";\nvar hideBackdropCode = \"\\n<Button\\n  onClick={() => this.setState({ hideBackdropPortalOpen: true })}\\n>\\n    Open Portal\\n</Button>\\n{this.state.hideBackdropPortalOpen && (\\n<Portal top hideBackDrop>\\n  {closeToggle => (\\n    <div\\n      style={{\\n        width: '100%',\\n        height: '100px',\\n        display: 'flex',\\n        justifyContent: 'center',\\n        alignContent: 'center',\\n        alignItems: 'center',\\n        background: 'white',\\n      }}\\n    >\\n      <input\\n        style={{ fontSize: '20px' }}\\n        type=\\\"button\\\"\\n        value=\\\"Close\\\"\\n        onClick={() => this.setState({ hideBackdropPortalOpen: true }, closeToggle())}\\n      />\\n    </div>\\n  )}\\n</Portal>\\n)}\\n\";\nvar onCloseCode = \"\\n<Button\\nonClick={() => this.setState({ onClosePortal: true })}\\n>\\n  Open Portal\\n</Button>\\n{this.state.onClosePortal && (\\n<Portal top hideBackDrop onClose={() => { this.setState({ onClosePortal: false }); alert('Closed'); }}>\\n{closeToggle => (\\n  <div\\n    style={{\\n      width: '100%',\\n      height: '100px',\\n      display: 'flex',\\n      justifyContent: 'center',\\n      alignContent: 'center',\\n      alignItems: 'center',\\n      background: 'white',\\n    }}\\n  >\\n    <input\\n      style={{ fontSize: '20px' }}\\n      type=\\\"button\\\"\\n      value=\\\"Close\\\"\\n      onClick={closeToggle}\\n    />\\n  </div>\\n)}\\n</Portal>\\n)}\\n\";\nvar modalSizeCode = '';\nexport { autoCloseCode, hideBackdropCode, simpleCode, portalLocationCode, onCloseCode, modalSizeCode };","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/modal/code-refrence.js"],"names":["simpleCode","portalLocationCode","autoCloseCode","hideBackdropCode","onCloseCode","modalSizeCode"],"mappings":"AAAA,IAAMA,UAAU,85BAAhB;AA2BA,IAAMC,kBAAkB,qiFAAxB;AAsHA,IAAMC,aAAa,4nBAAnB;AA+BA,IAAMC,gBAAgB,4qBAAtB;AA+BA,IAAMC,WAAW,moBAAjB;AA+BA,IAAMC,aAAa,GAAG,EAAtB;AACA,SACEH,aADF,EAEEC,gBAFF,EAGEH,UAHF,EAIEC,kBAJF,EAKEG,WALF,EAMEC,aANF","sourcesContent":["const simpleCode = `\n<Button onClick={() => this.setState({ simpleModalOpen: true })}>Open Modal</Button>\n            {this.state.simpleModalOpen && (\n            <Modal onClose={() => this.setState({ simpleModalOpen: false })}>\n              {closeToggle => (\n                <div\n                  style={{\n                    width: '100%',\n                    height: '250px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    background: 'white',\n                  }}\n                >\n                  <input\n                    style={{ fontSize: '20px' }}\n                    type=\"button\"\n                    value=\"Close\"\n                    onClick={closeToggle}\n                  />\n                </div>\n              )}\n            </Modal>\n            )}\n`;\nconst portalLocationCode = `\n<Button onClick={() => this.setState({ topPortalOpen: true })}>Open Top Portal</Button>\n  {this.state.topPortalOpen && (\n  <Portal top>\n    {closeToggle => (\n      <div\n        style={{\n          width: '100%',\n          height: '100px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n          background: 'white',\n        }}\n      >\n        <input\n          style={{ fontSize: '20px' }}\n          type=\"button\"\n          value=\"Close\"\n          onClick={() => this.setState({ topPortalOpen: true }, closeToggle())}\n        />\n      </div>\n    )}\n  </Portal>\n  )}\n\n<Button\n  onClick={() => this.setState({ leftPortalOpen: true })}\n>\n    Open Left Portal\n</Button>\n{this.state.leftPortalOpen && (\n<Portal top>\n  {closeToggle => (\n    <div\n      style={{\n        width: '100px',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        background: 'white',\n      }}\n    >\n      <input\n        style={{ fontSize: '20px' }}\n        type=\"button\"\n        value=\"Close\"\n        onClick={() => this.setState({ leftPortalOpen: true }, closeToggle())}\n      />\n    </div>\n  )}\n</Portal>\n)}\n\n<Button\nonClick={() => this.setState({ rightPortalOpen: true })}\n>\n  Open Right Portal\n</Button>\n{this.state.rightPortalOpen && (\n<Portal right>\n{closeToggle => (\n  <div\n    style={{\n      width: '100px',\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      background: 'white',\n    }}\n  >\n    <input\n      style={{ fontSize: '20px' }}\n      type=\"button\"\n      value=\"Close\"\n      onClick={() => this.setState({ rightPortalOpen: true }, closeToggle())}\n    />\n  </div>\n)}\n</Portal>\n)}\n\n<Button\n  onClick={() => this.setState({ bottomPortalOpen: true })}\n>\n    Open Bottom Portal\n</Button>\n{this.state.bottomPortalOpen && (\n<Portal bottom>\n  {closeToggle => (\n    <div\n      style={{\n        width: '100%',\n        height: '100px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        background: 'white',\n      }}\n    >\n      <input\n        style={{ fontSize: '20px' }}\n        type=\"button\"\n        value=\"Close\"\n        onClick={() => this.setState({ bottomPortalOpen: true }, closeToggle())}\n      />\n    </div>\n  )}\n</Portal>\n)}\n`;\n\nconst autoCloseCode = `\n<Button\nonClick={() => this.setState({ autoClosePortalOpen: true })}\n>\n  Open Portal\n</Button>\n{this.state.autoClosePortalOpen && (\n<Portal top autoClose={false}>\n{closeToggle => (\n  <div\n    style={{\n      width: '100%',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      background: 'white',\n    }}\n  >\n    <input\n      style={{ fontSize: '20px' }}\n      type=\"button\"\n      value=\"Close\"\n      onClick={() => this.setState({ autoClosePortalOpen: true }, closeToggle())}\n    />\n  </div>\n)}\n</Portal>\n)}\n`;\nconst hideBackdropCode = `\n<Button\n  onClick={() => this.setState({ hideBackdropPortalOpen: true })}\n>\n    Open Portal\n</Button>\n{this.state.hideBackdropPortalOpen && (\n<Portal top hideBackDrop>\n  {closeToggle => (\n    <div\n      style={{\n        width: '100%',\n        height: '100px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        background: 'white',\n      }}\n    >\n      <input\n        style={{ fontSize: '20px' }}\n        type=\"button\"\n        value=\"Close\"\n        onClick={() => this.setState({ hideBackdropPortalOpen: true }, closeToggle())}\n      />\n    </div>\n  )}\n</Portal>\n)}\n`;\nconst onCloseCode = `\n<Button\nonClick={() => this.setState({ onClosePortal: true })}\n>\n  Open Portal\n</Button>\n{this.state.onClosePortal && (\n<Portal top hideBackDrop onClose={() => { this.setState({ onClosePortal: false }); alert('Closed'); }}>\n{closeToggle => (\n  <div\n    style={{\n      width: '100%',\n      height: '100px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      background: 'white',\n    }}\n  >\n    <input\n      style={{ fontSize: '20px' }}\n      type=\"button\"\n      value=\"Close\"\n      onClick={closeToggle}\n    />\n  </div>\n)}\n</Portal>\n)}\n`;\nconst modalSizeCode = '';\nexport {\n  autoCloseCode,\n  hideBackdropCode,\n  simpleCode,\n  portalLocationCode,\n  onCloseCode,\n  modalSizeCode,\n};\n"]},"metadata":{},"sourceType":"module"}