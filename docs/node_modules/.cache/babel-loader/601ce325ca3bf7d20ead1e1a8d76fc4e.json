{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _components = _interopRequireDefault(require(\"./components\"));\n\nvar _common = require(\"../../common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar getInterval = function getInterval(_ref) {\n  var showSeconds = _ref.showSeconds,\n      showMinutes = _ref.showMinutes,\n      showHours = _ref.showHours,\n      showDays = _ref.showDays;\n  if (showSeconds) return 1000;\n  if (showMinutes) return 1000 * 60;\n  if (showHours) return 1000 * 60 * 60;\n  if (showDays) return 1000 * 60 * 60 * 24;\n  return undefined;\n};\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"interval\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      direction: Date.now() > _this.props.milliseconds ? +1 : -1,\n      millis: _this.props.milliseconds\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateMillis\", function () {\n      _this.setState(function (prevState) {\n        return {\n          millis: prevState.millis + prevState.interval * prevState.direction\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getChildren\", function () {\n      var _ref2;\n\n      var millis = _this.state.millis;\n\n      var _getTimeFromMillis = (0, _common.getTimeFromMillis)(millis),\n          days = _getTimeFromMillis.days,\n          hours = _getTimeFromMillis.hours,\n          minutes = _getTimeFromMillis.minutes,\n          seconds = _getTimeFromMillis.seconds;\n\n      console.log((0, _common.getTimeFromMillis)(millis));\n      var _this$props = _this.props,\n          showDays = _this$props.showDays,\n          showHours = _this$props.showHours,\n          showMinutes = _this$props.showMinutes,\n          showSeconds = _this$props.showSeconds;\n      var components = [];\n      if (showDays) components.push((0, _core.jsx)(_components.default, {\n        key: \"d\",\n        value: days,\n        label: \"days\"\n      }));\n      if (showHours) components.push((0, _core.jsx)(_components.default, {\n        key: \"h\",\n        value: hours,\n        label: \"hours\"\n      }));\n      if (showMinutes) components.push((0, _core.jsx)(_components.default, {\n        key: \"m\",\n        value: minutes,\n        label: \"minutes\"\n      }));\n      if (showSeconds) components.push((0, _core.jsx)(_components.default, {\n        key: \"s\",\n        value: seconds,\n        label: \"seconds\"\n      }));\n      return (_ref2 = []).concat.apply(_ref2, _toConsumableArray(components.map(function (e) {\n        return [(0, _core.jsx)(\"span\", null, \":\"), e];\n      }))).slice(1);\n    });\n\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          showSeconds = _this$props2.showSeconds,\n          showMinutes = _this$props2.showMinutes,\n          showHours = _this$props2.showHours,\n          showDays = _this$props2.showDays;\n      var interval = getInterval({\n        showSeconds: showSeconds,\n        showMinutes: showMinutes,\n        showHours: showHours,\n        showDays: showDays\n      });\n      this.setState({\n        direction: interval\n      });\n      this.interval = setInterval(function () {\n        return _this2.updateMillis();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (0, _core.jsx)(\"div\", null, Array(this.getChildren()).map(function (comp) {\n        return comp;\n      }));\n    }\n  }]);\n\n  return Timer;\n}(_react.Component);\n\nTimer.propTypes = {\n  showSeconds: _propTypes.default.bool,\n  showMinutes: _propTypes.default.bool,\n  showHours: _propTypes.default.bool,\n  showDays: _propTypes.default.bool,\n  milliseconds: _propTypes.default.number.isRequired\n};\nTimer.defaultProps = {\n  showDays: true,\n  showHours: true,\n  showMinutes: true,\n  showSeconds: true\n};\nvar _default = Timer;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}