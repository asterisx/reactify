{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToastController = void 0;\n\nvar _core = require(\"../../../node_modules/@emotion/core/types\");\n\nvar _react = _interopRequireWildcard(require(\"../../../node_modules/react\"));\n\nvar _reactTransitionGroup = require(\"../../../node_modules/react-transition-group/cjs\");\n\nvar _propTypes = _interopRequireDefault(require(\"../../../node_modules/prop-types\"));\n\nvar _Toast = require(\"./Toast\");\n\nvar _dismiss = _interopRequireDefault(require(\"../dismiss\"));\n\nvar _common = require(\"../../common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ToastController =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToastController, _Component);\n\n  function ToastController() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToastController);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToastController)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      autoDismissTimeout: _this.props.autoDismissTimeout,\n      isRunning: _this.props.autoDismiss\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startTimer\", function () {\n      var _this$props = _this.props,\n          autoDismiss = _this$props.autoDismiss,\n          onDismiss = _this$props.onDismiss;\n      var autoDismissTimeout = _this.state.autoDismissTimeout;\n      if (!autoDismiss) return;\n\n      _this.setState({\n        isRunning: true\n      });\n\n      _this.timeout = new _common.Timer(onDismiss, autoDismissTimeout);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearTimer\", function () {\n      if (!_this.props.autoDismiss) return;\n      if (_this.timeout) _this.timeout.clear();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseEnter\", function () {\n      _this.setState({\n        isRunning: false\n      }, function () {\n        if (_this.timeout) _this.timeout.pause();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseLeave\", function () {\n      _this.setState({\n        isRunning: true\n      }, function () {\n        if (_this.timeout) _this.timeout.resume();\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ToastController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startTimer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          autoDismissTimeout = _this$state.autoDismissTimeout,\n          isRunning = _this$state.isRunning;\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          onDismiss = _this$props2.onDismiss,\n          transitionDuration = _this$props2.transitionDuration,\n          pauseOnHover = _this$props2.pauseOnHover,\n          autoDismiss = _this$props2.autoDismiss,\n          otherProps = _objectWithoutProperties(_this$props2, [\"children\", \"onDismiss\", \"transitionDuration\", \"pauseOnHover\", \"autoDismiss\"]);\n\n      var onMouseEnter = this.onMouseEnter,\n          onMouseLeave = this.onMouseLeave;\n      var hasMouseEvents = pauseOnHover && autoDismiss;\n      var handleMouseEnter = hasMouseEvents ? onMouseEnter : null;\n      var handleMouseLeave = hasMouseEvents ? onMouseLeave : null;\n      return (0, _core.jsx)(_reactTransitionGroup.Transition, _extends({\n        appear: true,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        timeout: transitionDuration\n      }, otherProps), function (transitionState) {\n        return (0, _core.jsx)(_Toast.Toast, _extends({\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: handleMouseLeave,\n          autoDismissTimeout: autoDismissTimeout,\n          isRunning: isRunning,\n          transitionState: transitionState,\n          transitionDuration: transitionDuration,\n          pauseOnHover: pauseOnHover\n        }, otherProps), _react.default.Children.map(children, function (child) {\n          var newProps = {};\n\n          if (child.type === _dismiss.default) {\n            newProps.autoDismiss = false;\n            newProps.onCloseIconClick = onDismiss;\n          }\n\n          return _react.default.cloneElement(child, newProps);\n        }));\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref) {\n      var autoDismiss = _ref.autoDismiss,\n          autoDismissTimeout = _ref.autoDismissTimeout;\n      if (!autoDismiss) return null;\n      var timeout = typeof autoDismiss === 'number' ? autoDismiss : autoDismissTimeout;\n      return {\n        autoDismissTimeout: timeout\n      };\n    }\n  }]);\n\n  return ToastController;\n}(_react.Component);\n\nexports.ToastController = ToastController;\n\n_defineProperty(ToastController, \"propTypes\", {\n  /**\n   * If 'true', the Toast is autodismissable and will dismiss\n   * after the timeout runs out\n   */\n  autoDismiss: _propTypes.default.bool,\n\n  /**\n   * The autodimss timeout\n   */\n  autoDismissTimeout: _propTypes.default.number,\n\n  /**\n   * The callback called when Toast is dismissed\n   */\n  onDismiss: _propTypes.default.func\n});\n\n_defineProperty(ToastController, \"defaultProps\", {\n  autoDismiss: false,\n  autoDismissTimeout: _propTypes.default.number.isRequired,\n  onDismiss: undefined\n});","map":null,"metadata":{},"sourceType":"script"}