{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isObject = isObject;\nexports.mergeDeep = mergeDeep;\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _css2 = _interopRequireDefault(require(\"@emotion/css\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _button = _interopRequireDefault(require(\"../button\"));\n\nvar _spinner = _interopRequireDefault(require(\"../spinner\"));\n\nvar _styles = require(\"./styles\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction isObject(item) {\n  return item && _typeof(item) === 'object' && !Array.isArray(item);\n}\n/**\n   * Deep merge two objects.\n   * @param target\n   * @param ...sources\n   */\n\n\nfunction mergeDeep(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (!sources.length) return target;\n  var source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, _defineProperty({}, key, {}));\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, _defineProperty({}, key, source[key]));\n      }\n    }\n  }\n\n  return mergeDeep.apply(void 0, [target].concat(sources));\n}\n\nvar defaultState = {\n  fields: {\n    username: {\n      value: '',\n      isError: false,\n      errorText: '',\n      isLoading: false,\n      disabled: false\n    },\n    password: {\n      value: '',\n      isError: false,\n      errorText: '',\n      isLoading: false,\n      disabled: false\n    },\n    submit: {\n      isLoading: false,\n      disabled: false\n    },\n    error: {\n      visible: false,\n      text: ''\n    }\n  }\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", mergeDeep(defaultState, _this.props.state));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleValueChange\", function (_ref) {\n      var action = _ref.action,\n          value = _ref.value;\n\n      _this.props.updateState({\n        action: action,\n        value: value,\n        prevState: _this.state\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state$fields = this.state.fields,\n          username = _this$state$fields.username,\n          password = _this$state$fields.password,\n          error = _this$state$fields.error,\n          submit = _this$state$fields.submit;\n\n      var _this$props = this.props,\n          state = _this$props.state,\n          updateState = _this$props.updateState,\n          otherProps = _objectWithoutProperties(_this$props, [\"state\", \"updateState\"]);\n\n      return (0, _core.jsx)(\"div\", _extends({\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.container], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlGVSIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, otherProps), (0, _core.jsx)(\"h4\", null, \"Login\"), (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.fieldContainer], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdHWSIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.inputContainer, _styles.styles.getDisabledStyle({\n          disabled: username.disabled\n        })], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFHYyIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, (0, _core.jsx)(\"input\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.input], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJHZ0IiLCJmaWxlIjoiLi4vLi4vLi4vbGliL2NvbXBvbmVudHMvbG9naW4vbG9naW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi4vc3Bpbm5lcic7XG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gIHJldHVybiAoaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSkpO1xufVxuXG4vKipcbiAgICogRGVlcCBtZXJnZSB0d28gb2JqZWN0cy5cbiAgICogQHBhcmFtIHRhcmdldFxuICAgKiBAcGFyYW0gLi4uc291cmNlc1xuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGlmICghc291cmNlcy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcblxuICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiB7fSB9KTtcbiAgICAgICAgbWVyZ2VEZWVwKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufVxuXG5jb25zdCBkZWZhdWx0U3RhdGUgPSB7XG4gIGZpZWxkczoge1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICB2YWx1ZTogJycsXG4gICAgICBpc0Vycm9yOiBmYWxzZSxcbiAgICAgIGVycm9yVGV4dDogJycsXG4gICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBzdWJtaXQ6IHtcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBlcnJvcjoge1xuICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICB0ZXh0OiAnJyxcbiAgICB9LFxuICB9LFxufTtcblxuXG5jbGFzcyBMb2dpbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGFjdGlvblR5cGVzID0geyB1c2VybmFtZTogJ3VzZXJuYW1lJywgcGFzc3dvcmQ6ICdwYXNzd29yZCcsIHN1Ym1pdDogJ3N1Ym1pdCcgfTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICB1cGRhdGVTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB9XG5cbiAgICBzdGF0ZSA9IG1lcmdlRGVlcChkZWZhdWx0U3RhdGUsIHRoaXMucHJvcHMuc3RhdGUpO1xuXG4gICAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhwcm9wcywgc3RhdGUpIHtcbiAgICAgIHJldHVybiBtZXJnZURlZXAoc3RhdGUsIHByb3BzLnN0YXRlKTtcbiAgICB9XG5cblxuICAgIGhhbmRsZVZhbHVlQ2hhbmdlID0gKHsgYWN0aW9uLCB2YWx1ZSB9KSA9PiB7XG4gICAgICB0aGlzLnByb3BzLnVwZGF0ZVN0YXRlKHsgYWN0aW9uLCB2YWx1ZSwgcHJldlN0YXRlOiB0aGlzLnN0YXRlIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgdXNlcm5hbWUsIHBhc3N3b3JkLCBlcnJvciwgc3VibWl0LFxuICAgICAgICB9LFxuICAgICAgfSA9IHRoaXMuc3RhdGU7XG4gICAgICBjb25zdCB7IHN0YXRlLCB1cGRhdGVTdGF0ZSwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5jb250YWluZXIsXG4gICAgICAgICAgXX1cbiAgICAgICAgICB7Li4ub3RoZXJQcm9wc31cbiAgICAgICAgPlxuICAgICAgICAgIDxoND5Mb2dpbjwvaDQ+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidXNlcm5hbWVcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXt1c2VybmFtZS52YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZXZ0ID0+IHRoaXMuaGFuZGxlVmFsdWVDaGFuZ2UoXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBldnQudGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8U3Bpbm5lclxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgdXNlcm5hbWUuaXNMb2FkaW5nICYmIHN0eWxlcy5vcGFjaXR5MSxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGZvbnRTaXplOiAnNzAlJywgb3BhY2l0eTogMCB9fVxuICAgICAgICAgICAgICAgIHNsaWNlc1xuICAgICAgICAgICAgICAgIHByaW1hcnlcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge3VzZXJuYW1lLmlzRXJyb3IgJiYgKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmVycm9yLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5mbGV4U3RhcnRdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7dXNlcm5hbWUuZXJyb3JUZXh0fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5nZXREaXNhYmxlZFN0eWxlKHsgZGlzYWJsZWQ6IHVzZXJuYW1lLmRpc2FibGVkIH0pLFxuICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dCxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBwYXNzd29yZC5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7cGFzc3dvcmQuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtwYXNzd29yZC5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtlcnJvci52aXNpYmxlICYmIDxzcGFuIGNzcz17W3N0eWxlcy5lcnJvcl19PntlcnJvci50ZXh0fTwvc3Bhbj59XG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIHN1Y2Nlc3NcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e3N1Ym1pdC5kaXNhYmxlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17ZXZlbnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMuc3VibWl0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3N1Ym1pdC5pc0xvYWRpbmcgJiYgPFNwaW5uZXIgc21hbGwgc2xpY2VzIGxpZ2h0IC8+fVxuICAgICAgICAgICAgU3VibWl0XG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG4iXX0= */\")),\n        type: \"text\",\n        placeholder: \"username\",\n        value: username.value,\n        onChange: function onChange(evt) {\n          return _this2.handleValueChange({\n            action: Login.actionTypes.username,\n            value: evt.target.value\n          });\n        }\n      }), (0, _core.jsx)(_spinner.default, {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([username.isLoading && _styles.styles.opacity1], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBIZ0IiLCJmaWxlIjoiLi4vLi4vLi4vbGliL2NvbXBvbmVudHMvbG9naW4vbG9naW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi4vc3Bpbm5lcic7XG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gIHJldHVybiAoaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSkpO1xufVxuXG4vKipcbiAgICogRGVlcCBtZXJnZSB0d28gb2JqZWN0cy5cbiAgICogQHBhcmFtIHRhcmdldFxuICAgKiBAcGFyYW0gLi4uc291cmNlc1xuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGlmICghc291cmNlcy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcblxuICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiB7fSB9KTtcbiAgICAgICAgbWVyZ2VEZWVwKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufVxuXG5jb25zdCBkZWZhdWx0U3RhdGUgPSB7XG4gIGZpZWxkczoge1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICB2YWx1ZTogJycsXG4gICAgICBpc0Vycm9yOiBmYWxzZSxcbiAgICAgIGVycm9yVGV4dDogJycsXG4gICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBzdWJtaXQ6IHtcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBlcnJvcjoge1xuICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICB0ZXh0OiAnJyxcbiAgICB9LFxuICB9LFxufTtcblxuXG5jbGFzcyBMb2dpbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGFjdGlvblR5cGVzID0geyB1c2VybmFtZTogJ3VzZXJuYW1lJywgcGFzc3dvcmQ6ICdwYXNzd29yZCcsIHN1Ym1pdDogJ3N1Ym1pdCcgfTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICB1cGRhdGVTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB9XG5cbiAgICBzdGF0ZSA9IG1lcmdlRGVlcChkZWZhdWx0U3RhdGUsIHRoaXMucHJvcHMuc3RhdGUpO1xuXG4gICAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhwcm9wcywgc3RhdGUpIHtcbiAgICAgIHJldHVybiBtZXJnZURlZXAoc3RhdGUsIHByb3BzLnN0YXRlKTtcbiAgICB9XG5cblxuICAgIGhhbmRsZVZhbHVlQ2hhbmdlID0gKHsgYWN0aW9uLCB2YWx1ZSB9KSA9PiB7XG4gICAgICB0aGlzLnByb3BzLnVwZGF0ZVN0YXRlKHsgYWN0aW9uLCB2YWx1ZSwgcHJldlN0YXRlOiB0aGlzLnN0YXRlIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgdXNlcm5hbWUsIHBhc3N3b3JkLCBlcnJvciwgc3VibWl0LFxuICAgICAgICB9LFxuICAgICAgfSA9IHRoaXMuc3RhdGU7XG4gICAgICBjb25zdCB7IHN0YXRlLCB1cGRhdGVTdGF0ZSwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5jb250YWluZXIsXG4gICAgICAgICAgXX1cbiAgICAgICAgICB7Li4ub3RoZXJQcm9wc31cbiAgICAgICAgPlxuICAgICAgICAgIDxoND5Mb2dpbjwvaDQ+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidXNlcm5hbWVcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXt1c2VybmFtZS52YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZXZ0ID0+IHRoaXMuaGFuZGxlVmFsdWVDaGFuZ2UoXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBldnQudGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8U3Bpbm5lclxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgdXNlcm5hbWUuaXNMb2FkaW5nICYmIHN0eWxlcy5vcGFjaXR5MSxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGZvbnRTaXplOiAnNzAlJywgb3BhY2l0eTogMCB9fVxuICAgICAgICAgICAgICAgIHNsaWNlc1xuICAgICAgICAgICAgICAgIHByaW1hcnlcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge3VzZXJuYW1lLmlzRXJyb3IgJiYgKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmVycm9yLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5mbGV4U3RhcnRdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7dXNlcm5hbWUuZXJyb3JUZXh0fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5nZXREaXNhYmxlZFN0eWxlKHsgZGlzYWJsZWQ6IHVzZXJuYW1lLmRpc2FibGVkIH0pLFxuICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dCxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBwYXNzd29yZC5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7cGFzc3dvcmQuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtwYXNzd29yZC5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtlcnJvci52aXNpYmxlICYmIDxzcGFuIGNzcz17W3N0eWxlcy5lcnJvcl19PntlcnJvci50ZXh0fTwvc3Bhbj59XG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIHN1Y2Nlc3NcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e3N1Ym1pdC5kaXNhYmxlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17ZXZlbnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMuc3VibWl0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3N1Ym1pdC5pc0xvYWRpbmcgJiYgPFNwaW5uZXIgc21hbGwgc2xpY2VzIGxpZ2h0IC8+fVxuICAgICAgICAgICAgU3VibWl0XG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG4iXX0= */\")),\n        style: {\n          fontSize: '70%',\n          opacity: 0\n        },\n        slices: true,\n        primary: true\n      })), username.isError && (0, _core.jsx)(\"span\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.error, _styles.styles.flexStart], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9JYyIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, username.errorText)), (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.fieldContainer], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThJWSIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.inputContainer, _styles.styles.getDisabledStyle({\n          disabled: username.disabled\n        })], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1KYyIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, (0, _core.jsx)(\"input\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.input], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlKZ0IiLCJmaWxlIjoiLi4vLi4vLi4vbGliL2NvbXBvbmVudHMvbG9naW4vbG9naW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi4vc3Bpbm5lcic7XG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gIHJldHVybiAoaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSkpO1xufVxuXG4vKipcbiAgICogRGVlcCBtZXJnZSB0d28gb2JqZWN0cy5cbiAgICogQHBhcmFtIHRhcmdldFxuICAgKiBAcGFyYW0gLi4uc291cmNlc1xuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGlmICghc291cmNlcy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcblxuICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiB7fSB9KTtcbiAgICAgICAgbWVyZ2VEZWVwKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufVxuXG5jb25zdCBkZWZhdWx0U3RhdGUgPSB7XG4gIGZpZWxkczoge1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICB2YWx1ZTogJycsXG4gICAgICBpc0Vycm9yOiBmYWxzZSxcbiAgICAgIGVycm9yVGV4dDogJycsXG4gICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBzdWJtaXQ6IHtcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBlcnJvcjoge1xuICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICB0ZXh0OiAnJyxcbiAgICB9LFxuICB9LFxufTtcblxuXG5jbGFzcyBMb2dpbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGFjdGlvblR5cGVzID0geyB1c2VybmFtZTogJ3VzZXJuYW1lJywgcGFzc3dvcmQ6ICdwYXNzd29yZCcsIHN1Ym1pdDogJ3N1Ym1pdCcgfTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICB1cGRhdGVTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB9XG5cbiAgICBzdGF0ZSA9IG1lcmdlRGVlcChkZWZhdWx0U3RhdGUsIHRoaXMucHJvcHMuc3RhdGUpO1xuXG4gICAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhwcm9wcywgc3RhdGUpIHtcbiAgICAgIHJldHVybiBtZXJnZURlZXAoc3RhdGUsIHByb3BzLnN0YXRlKTtcbiAgICB9XG5cblxuICAgIGhhbmRsZVZhbHVlQ2hhbmdlID0gKHsgYWN0aW9uLCB2YWx1ZSB9KSA9PiB7XG4gICAgICB0aGlzLnByb3BzLnVwZGF0ZVN0YXRlKHsgYWN0aW9uLCB2YWx1ZSwgcHJldlN0YXRlOiB0aGlzLnN0YXRlIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgdXNlcm5hbWUsIHBhc3N3b3JkLCBlcnJvciwgc3VibWl0LFxuICAgICAgICB9LFxuICAgICAgfSA9IHRoaXMuc3RhdGU7XG4gICAgICBjb25zdCB7IHN0YXRlLCB1cGRhdGVTdGF0ZSwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5jb250YWluZXIsXG4gICAgICAgICAgXX1cbiAgICAgICAgICB7Li4ub3RoZXJQcm9wc31cbiAgICAgICAgPlxuICAgICAgICAgIDxoND5Mb2dpbjwvaDQ+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidXNlcm5hbWVcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXt1c2VybmFtZS52YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZXZ0ID0+IHRoaXMuaGFuZGxlVmFsdWVDaGFuZ2UoXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBldnQudGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8U3Bpbm5lclxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgdXNlcm5hbWUuaXNMb2FkaW5nICYmIHN0eWxlcy5vcGFjaXR5MSxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGZvbnRTaXplOiAnNzAlJywgb3BhY2l0eTogMCB9fVxuICAgICAgICAgICAgICAgIHNsaWNlc1xuICAgICAgICAgICAgICAgIHByaW1hcnlcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge3VzZXJuYW1lLmlzRXJyb3IgJiYgKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmVycm9yLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5mbGV4U3RhcnRdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7dXNlcm5hbWUuZXJyb3JUZXh0fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5nZXREaXNhYmxlZFN0eWxlKHsgZGlzYWJsZWQ6IHVzZXJuYW1lLmRpc2FibGVkIH0pLFxuICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dCxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBwYXNzd29yZC5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7cGFzc3dvcmQuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtwYXNzd29yZC5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtlcnJvci52aXNpYmxlICYmIDxzcGFuIGNzcz17W3N0eWxlcy5lcnJvcl19PntlcnJvci50ZXh0fTwvc3Bhbj59XG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIHN1Y2Nlc3NcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e3N1Ym1pdC5kaXNhYmxlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17ZXZlbnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMuc3VibWl0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3N1Ym1pdC5pc0xvYWRpbmcgJiYgPFNwaW5uZXIgc21hbGwgc2xpY2VzIGxpZ2h0IC8+fVxuICAgICAgICAgICAgU3VibWl0XG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG4iXX0= */\")),\n        type: \"password\",\n        placeholder: \"password\",\n        value: password.value,\n        onChange: function onChange(evt) {\n          return _this2.handleValueChange({\n            action: Login.actionTypes.password,\n            value: evt.target.value\n          });\n        }\n      }), (0, _core.jsx)(_spinner.default, {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([password.isLoading && _styles.styles.opacity1], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdLZ0IiLCJmaWxlIjoiLi4vLi4vLi4vbGliL2NvbXBvbmVudHMvbG9naW4vbG9naW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi4vc3Bpbm5lcic7XG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gIHJldHVybiAoaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSkpO1xufVxuXG4vKipcbiAgICogRGVlcCBtZXJnZSB0d28gb2JqZWN0cy5cbiAgICogQHBhcmFtIHRhcmdldFxuICAgKiBAcGFyYW0gLi4uc291cmNlc1xuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGlmICghc291cmNlcy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcblxuICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiB7fSB9KTtcbiAgICAgICAgbWVyZ2VEZWVwKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufVxuXG5jb25zdCBkZWZhdWx0U3RhdGUgPSB7XG4gIGZpZWxkczoge1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICB2YWx1ZTogJycsXG4gICAgICBpc0Vycm9yOiBmYWxzZSxcbiAgICAgIGVycm9yVGV4dDogJycsXG4gICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBzdWJtaXQ6IHtcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBlcnJvcjoge1xuICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICB0ZXh0OiAnJyxcbiAgICB9LFxuICB9LFxufTtcblxuXG5jbGFzcyBMb2dpbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGFjdGlvblR5cGVzID0geyB1c2VybmFtZTogJ3VzZXJuYW1lJywgcGFzc3dvcmQ6ICdwYXNzd29yZCcsIHN1Ym1pdDogJ3N1Ym1pdCcgfTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICB1cGRhdGVTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB9XG5cbiAgICBzdGF0ZSA9IG1lcmdlRGVlcChkZWZhdWx0U3RhdGUsIHRoaXMucHJvcHMuc3RhdGUpO1xuXG4gICAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhwcm9wcywgc3RhdGUpIHtcbiAgICAgIHJldHVybiBtZXJnZURlZXAoc3RhdGUsIHByb3BzLnN0YXRlKTtcbiAgICB9XG5cblxuICAgIGhhbmRsZVZhbHVlQ2hhbmdlID0gKHsgYWN0aW9uLCB2YWx1ZSB9KSA9PiB7XG4gICAgICB0aGlzLnByb3BzLnVwZGF0ZVN0YXRlKHsgYWN0aW9uLCB2YWx1ZSwgcHJldlN0YXRlOiB0aGlzLnN0YXRlIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgdXNlcm5hbWUsIHBhc3N3b3JkLCBlcnJvciwgc3VibWl0LFxuICAgICAgICB9LFxuICAgICAgfSA9IHRoaXMuc3RhdGU7XG4gICAgICBjb25zdCB7IHN0YXRlLCB1cGRhdGVTdGF0ZSwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5jb250YWluZXIsXG4gICAgICAgICAgXX1cbiAgICAgICAgICB7Li4ub3RoZXJQcm9wc31cbiAgICAgICAgPlxuICAgICAgICAgIDxoND5Mb2dpbjwvaDQ+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidXNlcm5hbWVcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXt1c2VybmFtZS52YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZXZ0ID0+IHRoaXMuaGFuZGxlVmFsdWVDaGFuZ2UoXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBldnQudGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8U3Bpbm5lclxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgdXNlcm5hbWUuaXNMb2FkaW5nICYmIHN0eWxlcy5vcGFjaXR5MSxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGZvbnRTaXplOiAnNzAlJywgb3BhY2l0eTogMCB9fVxuICAgICAgICAgICAgICAgIHNsaWNlc1xuICAgICAgICAgICAgICAgIHByaW1hcnlcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge3VzZXJuYW1lLmlzRXJyb3IgJiYgKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmVycm9yLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5mbGV4U3RhcnRdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7dXNlcm5hbWUuZXJyb3JUZXh0fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5nZXREaXNhYmxlZFN0eWxlKHsgZGlzYWJsZWQ6IHVzZXJuYW1lLmRpc2FibGVkIH0pLFxuICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dCxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBwYXNzd29yZC5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7cGFzc3dvcmQuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtwYXNzd29yZC5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtlcnJvci52aXNpYmxlICYmIDxzcGFuIGNzcz17W3N0eWxlcy5lcnJvcl19PntlcnJvci50ZXh0fTwvc3Bhbj59XG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIHN1Y2Nlc3NcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e3N1Ym1pdC5kaXNhYmxlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17ZXZlbnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMuc3VibWl0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3N1Ym1pdC5pc0xvYWRpbmcgJiYgPFNwaW5uZXIgc21hbGwgc2xpY2VzIGxpZ2h0IC8+fVxuICAgICAgICAgICAgU3VibWl0XG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG4iXX0= */\")),\n        style: {\n          fontSize: '70%',\n          opacity: 0\n        },\n        slices: true,\n        primary: true\n      })), password.isError && (0, _core.jsx)(\"span\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.error, _styles.styles.flexStart], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtMYyIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, password.errorText)), (0, _core.jsx)(\"div\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.fieldContainer], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJMWSIsImZpbGUiOiIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICcuLi9zcGlubmVyJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIChpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKSk7XG59XG5cbi8qKlxuICAgKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzLlxuICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAqIEBwYXJhbSAuLi5zb3VyY2VzXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHt9IH0pO1xuICAgICAgICBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VEZWVwKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5cbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgZmllbGRzOiB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgaXNFcnJvcjogZmFsc2UsXG4gICAgICBlcnJvclRleHQ6ICcnLFxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIHN1Ym1pdDoge1xuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHRleHQ6ICcnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgYWN0aW9uVHlwZXMgPSB7IHVzZXJuYW1lOiAndXNlcm5hbWUnLCBwYXNzd29yZDogJ3Bhc3N3b3JkJywgc3VibWl0OiAnc3VibWl0JyB9O1xuXG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgIHVwZGF0ZVN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIH1cblxuICAgIHN0YXRlID0gbWVyZ2VEZWVwKGRlZmF1bHRTdGF0ZSwgdGhpcy5wcm9wcy5zdGF0ZSk7XG5cbiAgICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgcmV0dXJuIG1lcmdlRGVlcChzdGF0ZSwgcHJvcHMuc3RhdGUpO1xuICAgIH1cblxuXG4gICAgaGFuZGxlVmFsdWVDaGFuZ2UgPSAoeyBhY3Rpb24sIHZhbHVlIH0pID0+IHtcbiAgICAgIHRoaXMucHJvcHMudXBkYXRlU3RhdGUoeyBhY3Rpb24sIHZhbHVlLCBwcmV2U3RhdGU6IHRoaXMuc3RhdGUgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmQsIGVycm9yLCBzdWJtaXQsXG4gICAgICAgIH0sXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIHVwZGF0ZVN0YXRlLCAuLi5vdGhlclByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICBdfVxuICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPGg0PkxvZ2luPC9oND5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgc3R5bGVzLmZpZWxkQ29udGFpbmVyLFxuICAgICAgICAgICAgXX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZ2V0RGlzYWJsZWRTdHlsZSh7IGRpc2FibGVkOiB1c2VybmFtZS5kaXNhYmxlZCB9KSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXQsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3VzZXJuYW1lLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICB1c2VybmFtZS5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dXNlcm5hbWUuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt1c2VybmFtZS5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmQudmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2dCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IExvZ2luLmFjdGlvblR5cGVzLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkLmlzTG9hZGluZyAmJiBzdHlsZXMub3BhY2l0eTEsXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBmb250U2l6ZTogJzcwJScsIG9wYWNpdHk6IDAgfX1cbiAgICAgICAgICAgICAgICBzbGljZXNcbiAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHtwYXNzd29yZC5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5lcnJvcixcbiAgICAgICAgICAgICAgICBzdHlsZXMuZmxleFN0YXJ0XX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Bhc3N3b3JkLmVycm9yVGV4dH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2Vycm9yLnZpc2libGUgJiYgPHNwYW4gY3NzPXtbc3R5bGVzLmVycm9yXX0+e2Vycm9yLnRleHR9PC9zcGFuPn1cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc3VjY2Vzc1xuICAgICAgICAgICAgICBkaXNhYmxlZD17c3VibWl0LmRpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtldmVudCA9PiB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5zdWJtaXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c3VibWl0LmlzTG9hZGluZyAmJiA8U3Bpbm5lciBzbWFsbCBzbGljZXMgbGlnaHQgLz59XG4gICAgICAgICAgICBTdWJtaXRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiJdfQ== */\"))\n      }, error.visible && (0, _core.jsx)(\"span\", {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.error], \"label:Login;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStMb0MiLCJmaWxlIjoiLi4vLi4vLi4vbGliL2NvbXBvbmVudHMvbG9naW4vbG9naW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi4vc3Bpbm5lcic7XG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICcuL3N0eWxlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gIHJldHVybiAoaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSkpO1xufVxuXG4vKipcbiAgICogRGVlcCBtZXJnZSB0d28gb2JqZWN0cy5cbiAgICogQHBhcmFtIHRhcmdldFxuICAgKiBAcGFyYW0gLi4uc291cmNlc1xuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGlmICghc291cmNlcy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcblxuICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiB7fSB9KTtcbiAgICAgICAgbWVyZ2VEZWVwKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlRGVlcCh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufVxuXG5jb25zdCBkZWZhdWx0U3RhdGUgPSB7XG4gIGZpZWxkczoge1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICB2YWx1ZTogJycsXG4gICAgICBpc0Vycm9yOiBmYWxzZSxcbiAgICAgIGVycm9yVGV4dDogJycsXG4gICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIHZhbHVlOiAnJyxcbiAgICAgIGlzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3JUZXh0OiAnJyxcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBzdWJtaXQ6IHtcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICBlcnJvcjoge1xuICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICB0ZXh0OiAnJyxcbiAgICB9LFxuICB9LFxufTtcblxuXG5jbGFzcyBMb2dpbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGFjdGlvblR5cGVzID0geyB1c2VybmFtZTogJ3VzZXJuYW1lJywgcGFzc3dvcmQ6ICdwYXNzd29yZCcsIHN1Ym1pdDogJ3N1Ym1pdCcgfTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICB1cGRhdGVTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB9XG5cbiAgICBzdGF0ZSA9IG1lcmdlRGVlcChkZWZhdWx0U3RhdGUsIHRoaXMucHJvcHMuc3RhdGUpO1xuXG4gICAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhwcm9wcywgc3RhdGUpIHtcbiAgICAgIHJldHVybiBtZXJnZURlZXAoc3RhdGUsIHByb3BzLnN0YXRlKTtcbiAgICB9XG5cblxuICAgIGhhbmRsZVZhbHVlQ2hhbmdlID0gKHsgYWN0aW9uLCB2YWx1ZSB9KSA9PiB7XG4gICAgICB0aGlzLnByb3BzLnVwZGF0ZVN0YXRlKHsgYWN0aW9uLCB2YWx1ZSwgcHJldlN0YXRlOiB0aGlzLnN0YXRlIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgdXNlcm5hbWUsIHBhc3N3b3JkLCBlcnJvciwgc3VibWl0LFxuICAgICAgICB9LFxuICAgICAgfSA9IHRoaXMuc3RhdGU7XG4gICAgICBjb25zdCB7IHN0YXRlLCB1cGRhdGVTdGF0ZSwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgIHN0eWxlcy5jb250YWluZXIsXG4gICAgICAgICAgXX1cbiAgICAgICAgICB7Li4ub3RoZXJQcm9wc31cbiAgICAgICAgPlxuICAgICAgICAgIDxoND5Mb2dpbjwvaDQ+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgIHN0eWxlcy5maWVsZENvbnRhaW5lcixcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmdldERpc2FibGVkU3R5bGUoeyBkaXNhYmxlZDogdXNlcm5hbWUuZGlzYWJsZWQgfSksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0LFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidXNlcm5hbWVcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXt1c2VybmFtZS52YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZXZ0ID0+IHRoaXMuaGFuZGxlVmFsdWVDaGFuZ2UoXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBldnQudGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8U3Bpbm5lclxuICAgICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgICAgdXNlcm5hbWUuaXNMb2FkaW5nICYmIHN0eWxlcy5vcGFjaXR5MSxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGZvbnRTaXplOiAnNzAlJywgb3BhY2l0eTogMCB9fVxuICAgICAgICAgICAgICAgIHNsaWNlc1xuICAgICAgICAgICAgICAgIHByaW1hcnlcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge3VzZXJuYW1lLmlzRXJyb3IgJiYgKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmVycm9yLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5mbGV4U3RhcnRdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7dXNlcm5hbWUuZXJyb3JUZXh0fVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgc3R5bGVzLmlucHV0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgIHN0eWxlcy5nZXREaXNhYmxlZFN0eWxlKHsgZGlzYWJsZWQ6IHVzZXJuYW1lLmRpc2FibGVkIH0pLFxuICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICAgIHN0eWxlcy5pbnB1dCxcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtldnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBMb2dpbi5hY3Rpb25UeXBlcy5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGV2dC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxTcGlubmVyXG4gICAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgICBwYXNzd29yZC5pc0xvYWRpbmcgJiYgc3R5bGVzLm9wYWNpdHkxLFxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6ICc3MCUnLCBvcGFjaXR5OiAwIH19XG4gICAgICAgICAgICAgICAgc2xpY2VzXG4gICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7cGFzc3dvcmQuaXNFcnJvciAmJiAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMuZXJyb3IsXG4gICAgICAgICAgICAgICAgc3R5bGVzLmZsZXhTdGFydF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtwYXNzd29yZC5lcnJvclRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICBzdHlsZXMuZmllbGRDb250YWluZXIsXG4gICAgICAgICAgICBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtlcnJvci52aXNpYmxlICYmIDxzcGFuIGNzcz17W3N0eWxlcy5lcnJvcl19PntlcnJvci50ZXh0fTwvc3Bhbj59XG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIHN1Y2Nlc3NcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e3N1Ym1pdC5kaXNhYmxlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17ZXZlbnQgPT4gdGhpcy5oYW5kbGVWYWx1ZUNoYW5nZShcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgICAgICAgIGFjdGlvbjogTG9naW4uYWN0aW9uVHlwZXMuc3VibWl0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3N1Ym1pdC5pc0xvYWRpbmcgJiYgPFNwaW5uZXIgc21hbGwgc2xpY2VzIGxpZ2h0IC8+fVxuICAgICAgICAgICAgU3VibWl0XG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG4iXX0= */\"))\n      }, error.text), (0, _core.jsx)(_button.default, {\n        success: true,\n        disabled: submit.disabled,\n        onClick: function onClick(event) {\n          return _this2.handleValueChange({\n            event: event,\n            action: Login.actionTypes.submit\n          });\n        }\n      }, submit.isLoading && (0, _core.jsx)(_spinner.default, {\n        small: true,\n        slices: true,\n        light: true\n      }), \"Submit\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      return mergeDeep(state, props.state);\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\n_defineProperty(Login, \"actionTypes\", {\n  username: 'username',\n  password: 'password',\n  submit: 'submit'\n});\n\n_defineProperty(Login, \"propTypes\", {\n  updateState: _propTypes.default.func.isRequired\n});\n\nvar _default = Login;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}