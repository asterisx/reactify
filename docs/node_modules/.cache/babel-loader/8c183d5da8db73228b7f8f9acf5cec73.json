{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _css2 = _interopRequireDefault(require(\"@emotion/css\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _fa = require(\"react-icons/fa\");\n\nvar _styles = require(\"./styles\");\n\nvar _common = require(\"../../common\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Accordion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Accordion, _Component);\n\n  function Accordion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Accordion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Accordion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      /* items store the accordion items's open state\n       * If the mode is singular, items is an object with a single\n       * key matching the open items's index with value like: { open: true | false }\n       * If the mode is multiple, items is a collection of fields\n       * where the keys are same as index and values is an object like: { open: true | false }\n       */\n      items: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleItem\", function (index) {\n      if (_this.props.multiple && !_this.props.singular) {\n        var items = _this.state.items;\n        items[index].open = !items[index].open;\n\n        _this.setState({\n          items: items\n        }, function () {\n          if (_this.props.onChange) {\n            _this.props.onChange({\n              index: index,\n              opened: _this.state.items[index].open\n            });\n          }\n        });\n      } else {\n        var _items = {};\n\n        if (Object.prototype.hasOwnProperty.call(_this.state.items, index)) {\n          _items[index] = {\n            open: !_this.state.items[index].open\n          };\n        } else _items[index] = {\n          open: true\n        };\n\n        _this.setState({\n          items: _items\n        }, function () {\n          if (_this.props.onChange) {\n            _this.props.onChange({\n              index: index,\n              opened: _this.state.items[index].open\n            });\n          }\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Accordion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          singular = _this$props.singular;\n      var items = {};\n\n      _react.default.Children.forEach(children, function (child) {\n        var _child$props = child.props,\n            index = _child$props.index,\n            open = _child$props.open;\n\n        if (singular && child.open) {\n          items = {};\n        }\n\n        items[index] = {\n          open: open\n        };\n      });\n\n      this.setState({\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          singular = _this$props2.singular,\n          multiple = _this$props2.multiple,\n          disabled = _this$props2.disabled,\n          primary = _this$props2.primary,\n          secondary = _this$props2.secondary,\n          dark = _this$props2.dark,\n          light = _this$props2.light,\n          info = _this$props2.info,\n          warning = _this$props2.warning,\n          danger = _this$props2.danger,\n          success = _this$props2.success,\n          theme = _this$props2.theme,\n          otherProps = _objectWithoutProperties(_this$props2, [\"children\", \"singular\", \"multiple\", \"disabled\", \"primary\", \"secondary\", \"dark\", \"light\", \"info\", \"warning\", \"danger\", \"success\", \"theme\"]);\n\n      var items = this.state.items;\n      var toggleItem = this.toggleItem;\n      return (0, _core.jsx)(\"div\", _extends({}, otherProps, {\n        css:\n        /*#__PURE__*/\n        (0, _css2.default)([_styles.styles.getDisabledStyle({\n          disabled: disabled\n        })], \"label:Accordion;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"))\n      }), _react.default.Children.map(children, function (child) {\n        if (child.type === Accordion.Item) {\n          return _react.default.cloneElement(child, {\n            open: items[child.props.index] && items[child.props.index].open,\n            onHeaderClick: function onHeaderClick() {\n              return toggleItem(child.props.index);\n            },\n            primary: child.props.primary || primary,\n            secondary: child.props.secondary || secondary,\n            dark: child.props.dark || dark,\n            light: child.props.light || light,\n            info: child.props.info || info,\n            warning: child.props.warning || warning,\n            danger: child.props.danger || danger,\n            success: child.props.success || success,\n            theme: child.props.theme || theme\n          });\n        }\n\n        return child;\n      }));\n    }\n  }]);\n\n  return Accordion;\n}(_react.Component);\n\n_defineProperty(Accordion, \"Item\", function (_ref) {\n  var children = _ref.children,\n      index = _ref.index,\n      open = _ref.open,\n      disabled = _ref.disabled,\n      primary = _ref.primary,\n      secondary = _ref.secondary,\n      dark = _ref.dark,\n      light = _ref.light,\n      info = _ref.info,\n      warning = _ref.warning,\n      danger = _ref.danger,\n      success = _ref.success,\n      theme = _ref.theme,\n      onHeaderClick = _ref.onHeaderClick,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"index\", \"open\", \"disabled\", \"primary\", \"secondary\", \"dark\", \"light\", \"info\", \"warning\", \"danger\", \"success\", \"theme\", \"onHeaderClick\"]);\n\n  return (0, _core.jsx)(\"div\", otherProps, _react.default.Children.map(children, function (child) {\n    if (child.type === Accordion.Body && !open) {\n      return null;\n    }\n\n    if (child.type === Accordion.Header) {\n      return _react.default.cloneElement(child, _objectSpread({\n        toggleItem: function toggleItem() {\n          if (onHeaderClick) onHeaderClick(index);\n        },\n        open: open,\n        disabled: disabled\n      }, (0, _common.reconcileThemeProps)({\n        props: child.props,\n        primary: primary,\n        secondary: secondary,\n        dark: dark,\n        light: light,\n        info: info,\n        warning: warning,\n        danger: danger,\n        success: success\n      }), {\n        theme: child.props.theme || theme\n      }));\n    }\n\n    return child;\n  }));\n});\n\n_defineProperty(Accordion, \"Header\", function (_ref2) {\n  var children = _ref2.children,\n      icon = _ref2.icon,\n      showIcon = _ref2.showIcon,\n      disabled = _ref2.disabled,\n      primary = _ref2.primary,\n      secondary = _ref2.secondary,\n      dark = _ref2.dark,\n      light = _ref2.light,\n      info = _ref2.info,\n      warning = _ref2.warning,\n      danger = _ref2.danger,\n      success = _ref2.success,\n      theme = _ref2.theme,\n      open = _ref2.open,\n      toggleItem = _ref2.toggleItem,\n      otherProps = _objectWithoutProperties(_ref2, [\"children\", \"icon\", \"showIcon\", \"disabled\", \"primary\", \"secondary\", \"dark\", \"light\", \"info\", \"warning\", \"danger\", \"success\", \"theme\", \"open\", \"toggleItem\"]);\n\n  return typeof children === 'function' ? children({\n    toggleItem: toggleItem,\n    disabled: disabled\n  }) : (0, _core.jsx)(\"div\", _extends({\n    css:\n    /*#__PURE__*/\n    (0, _css2.default)([_styles.styles.header, _styles.styles.getDisabledStyle({\n      disabled: disabled\n    }), _styles.styles.getBackgroundStyle({\n      primary: primary,\n      secondary: secondary,\n      dark: dark,\n      light: light,\n      info: info,\n      warning: warning,\n      danger: danger,\n      success: success,\n      theme: theme\n    })], process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),\n    onClick: toggleItem\n  }, otherProps), children, showIcon && (0, _core.jsx)(\"span\", null, icon || (open ? (0, _core.jsx)(_fa.FaMinus, {\n    className: _styles.BEMClassNames.icon\n  }) : (0, _core.jsx)(_fa.FaPlus, {\n    className: _styles.BEMClassNames.icon\n  }))));\n});\n\n_defineProperty(Accordion, \"Body\", function (_ref3) {\n  var children = _ref3.children,\n      otherProps = _objectWithoutProperties(_ref3, [\"children\"]);\n\n  return (0, _core.jsx)(\"div\", _extends({\n    css:\n    /*#__PURE__*/\n    (0, _css2.default)([_styles.styles.body], process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")\n  }, otherProps), children);\n});\n\nAccordion.Item.displayName = 'Accordion.Item';\nAccordion.Header.displayName = 'Accordion.Header';\nAccordion.Body.displayName = 'Accordion.Body';\nAccordion.propTypes = _objectSpread({\n  /**\n   * If 'true' only one accordion item can be open at a time.\n   * Defaults to false\n   */\n  singular: _propTypes.default.bool,\n\n  /**\n   * If 'true' multiple accordion items can be open at a time.\n   * Defaults to true\n   */\n  multiple: _propTypes.default.bool,\n\n  /**\n   * If 'true' accordion will be disabled and will have no events\n   */\n  disabled: _propTypes.default.bool\n}, _common.themePropTypes);\nAccordion.defaultProps = _objectSpread({\n  singular: false,\n  multiple: true,\n  disabled: false\n}, _common.defaultThemePropTypes);\nAccordion.Item.propTypes = _objectSpread({\n  /**\n   * A unique identifier for each item,\n   * This is passed on as to event handlers\n   */\n  index: _propTypes.default.number.isRequired,\n\n  /**\n   * If 'true' the accordion item is opened by default\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * If 'true' accordion item will be disabled and will have no events\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {number} index The `index` of the accordion item on which the state change occurs.\n   * @param {boolean} selected The `selected` value of the accordion item is also passed\n   */\n  onChange: _propTypes.default.func\n}, _common.themePropTypes);\nAccordion.Item.defaultProps = _objectSpread({\n  open: false,\n  disabled: false,\n  onChange: undefined\n}, _common.defaultThemePropTypes);\nAccordion.Header.propTypes = _objectSpread({\n  icon: _propTypes.default.element,\n  showIcon: _propTypes.default.bool\n}, _common.themePropTypes);\nAccordion.Header.defaultProps = _objectSpread({\n  icon: undefined,\n  showIcon: true\n}, _common.defaultThemePropTypes);\nvar _default = Accordion;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}