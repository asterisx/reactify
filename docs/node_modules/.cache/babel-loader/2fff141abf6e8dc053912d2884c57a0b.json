{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _stripUnit5 =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"../helpers/stripUnit\"));\n\nvar _errors =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"../internalHelpers/_errors\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns a CSS calc formula for linear interpolation of a property between two values. Accepts optional minScreen (defaults to '320px') and maxScreen (defaults to '1200px').\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   fontSize: between('20px', '100px', '400px', '1000px'),\n *   fontSize: between('20px', '100px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   fontSize: ${between('20px', '100px', '400px', '1000px')};\n *   fontSize: ${between('20px', '100px')}\n * `\n *\n * // CSS as JS Output\n *\n * h1: {\n *   'fontSize': 'calc(-33.33333333333334px + 13.333333333333334vw)',\n *   'fontSize': 'calc(-9.090909090909093px + 9.090909090909092vw)'\n * }\n */\n\n\nfunction between(fromSize, toSize, minScreen, maxScreen) {\n  if (minScreen === void 0) {\n    minScreen = '320px';\n  }\n\n  if (maxScreen === void 0) {\n    maxScreen = '1200px';\n  }\n\n  var _stripUnit = (0, _stripUnit5.default)(fromSize, true),\n      unitlessFromSize = _stripUnit[0],\n      fromSizeUnit = _stripUnit[1];\n\n  var _stripUnit2 = (0, _stripUnit5.default)(toSize, true),\n      unitlessToSize = _stripUnit2[0],\n      toSizeUnit = _stripUnit2[1];\n\n  var _stripUnit3 = (0, _stripUnit5.default)(minScreen, true),\n      unitlessMinScreen = _stripUnit3[0],\n      minScreenUnit = _stripUnit3[1];\n\n  var _stripUnit4 = (0, _stripUnit5.default)(maxScreen, true),\n      unitlessMaxScreen = _stripUnit4[0],\n      maxScreenUnit = _stripUnit4[1];\n\n  if (typeof unitlessMinScreen !== 'number' || typeof unitlessMaxScreen !== 'number' || !minScreenUnit || !maxScreenUnit || minScreenUnit !== maxScreenUnit) {\n    throw new _errors.default(47);\n  }\n\n  if (typeof unitlessFromSize !== 'number' || typeof unitlessToSize !== 'number' || !fromSizeUnit || !toSizeUnit || fromSizeUnit !== toSizeUnit) {\n    throw new _errors.default(48);\n  }\n\n  var slope = (unitlessFromSize - unitlessToSize) / (unitlessMinScreen - unitlessMaxScreen);\n  var base = unitlessToSize - slope * unitlessMaxScreen;\n  return \"calc(\" + base.toFixed(2) + fromSizeUnit + \" + \" + (100 * slope).toFixed(2) + \"vw)\";\n}\n\nvar _default = between;\nexports.default = _default;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}