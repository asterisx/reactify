{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _common = require(\"../../../../common\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  from {\\n    background-position: 0px 0px;\\n  }\\n  to {\\n    background-position: -1em 0px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nvar spLoadBar = (0, _core.keyframes)(_templateObject());\nvar styles = {\n  getContainerStyle: function getContainerStyle(_ref) {\n    var primary = _ref.primary,\n        secondary = _ref.secondary,\n        dark = _ref.dark,\n        light = _ref.light,\n        info = _ref.info,\n        warning = _ref.warning,\n        danger = _ref.danger,\n        success = _ref.success,\n        theme = _ref.theme;\n    return function (_ref2) {\n      var animationDuration = _ref2.animationDuration,\n          _ref2$color = _ref2.color,\n          color = _ref2$color === void 0 ? _common.commonStyles.get.theme.color({\n        primary: primary,\n        secondary: secondary,\n        dark: dark,\n        light: light,\n        info: info,\n        warning: warning,\n        danger: danger,\n        success: success,\n        theme: theme\n      }) : _ref2$color;\n      return {\n        display: 'inline-block',\n        width: '2em',\n        height: '1em',\n        border: \"0.05em \".concat(color, \" solid\"),\n        borderRadius: '0.125em',\n        background: \"linear-gradient(-60deg, transparent 0%, transparent 50%, \".concat(color, \" 50%, \").concat(color, \" 75%, transparent 75%, transparent)\"),\n        backgroundSize: '1em 1.7em',\n        backgroundPosition: '0px 0px',\n        animation: \"\".concat(spLoadBar, \" \").concat(animationDuration, \" infinite linear\")\n      };\n    };\n  }\n};\nexports.styles = styles;","map":null,"metadata":{},"sourceType":"script"}