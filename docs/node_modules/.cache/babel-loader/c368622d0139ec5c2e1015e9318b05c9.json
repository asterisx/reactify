{"ast":null,"code":"import _classCallCheck from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/projects/reactify/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/projects/reactify/docs/src/pages/progress-bar/progress-bar.js\";\nimport React, { Component } from 'react';\nimport { ProgressBar } from '@../../../../reactify/build';\nimport { simpleCode } from './code-refrence';\nimport './progress-bar.scss';\nimport DemoCard from '../../components/demo-card';\n\nvar ProgressBarDemo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProgressBarDemo, _Component);\n\n  function ProgressBarDemo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProgressBarDemo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProgressBarDemo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      runningPercentage: 0\n    };\n    _this.interval = undefined;\n    return _this;\n  }\n\n  _createClass(ProgressBarDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.setState(function (prevState) {\n          return {\n            runningPercentage: prevState.runningPercentage + 1\n          };\n        }, function () {\n          if (_this2.state.runningPercentage === 100) clearInterval(_this2.interval);\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(DemoCard, {\n        title: \"Simple Use\",\n        uniqueIdentifier: \"simpleUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        percentage: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"30% complete\")), React.createElement(DemoCard, {\n        title: \"Striped Use\",\n        uniqueIdentifier: \"stripedUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        striped: true,\n        percentage: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"30% complete\")), React.createElement(DemoCard, {\n        title: \"Running Demo\",\n        uniqueIdentifier: \"onSelectionUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        striped: true,\n        dark: true,\n        style: {\n          transitionDuration: '700ms'\n        },\n        percentage: this.state.runningPercentage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"\".concat(this.state.runningPercentage, \"% complete\"))), React.createElement(DemoCard, {\n        title: \"No text Demo\",\n        uniqueIdentifier: \"onSelectionUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        striped: true,\n        percentage: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(DemoCard, {\n        title: \"Sizes\",\n        uniqueIdentifier: \"sizeUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        striped: true,\n        small: true,\n        percentage: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"30% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        medium: true,\n        percentage: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"30% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        large: true,\n        percentage: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"30% complete\")), React.createElement(DemoCard, {\n        title: \"Theme\",\n        uniqueIdentifier: \"onthemeUse\",\n        sourceCode: simpleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        striped: true,\n        primary: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"60% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        secondary: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"60% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        dark: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"60% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        light: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"60% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        info: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"60% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        warning: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"60% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        danger: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"60% complete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(ProgressBar, {\n        striped: true,\n        success: true,\n        percentage: 60,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"60% complete\")));\n    }\n  }]);\n\n  return ProgressBarDemo;\n}(Component);\n\nexport default ProgressBarDemo;","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/progress-bar/progress-bar.js"],"names":["React","Component","ProgressBar","simpleCode","DemoCard","ProgressBarDemo","state","runningPercentage","interval","undefined","setInterval","setState","prevState","clearInterval","transitionDuration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ProgressBar } from '@../../../../reactify/build';\nimport {\n  simpleCode,\n} from './code-refrence';\nimport './progress-bar.scss';\nimport DemoCard from '../../components/demo-card';\n\nclass ProgressBarDemo extends Component {\n  state = { runningPercentage: 0 }\n\n\n  interval = undefined;\n\n  componentDidMount() {\n    this.interval = setInterval(\n      () => this.setState(prevState => ({ runningPercentage: prevState.runningPercentage + 1 }),\n        () => { if (this.state.runningPercentage === 100) clearInterval(this.interval); }), 1000,\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <DemoCard\n          title=\"Simple Use\"\n          uniqueIdentifier=\"simpleUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar percentage={30}>30% complete</ProgressBar>\n        </DemoCard>\n\n        <DemoCard\n          title=\"Striped Use\"\n          uniqueIdentifier=\"stripedUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar striped percentage={30}>30% complete</ProgressBar>\n        </DemoCard>\n\n        <DemoCard\n          title=\"Running Demo\"\n          uniqueIdentifier=\"onSelectionUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar striped dark style={{ transitionDuration: '700ms' }} percentage={this.state.runningPercentage}>{`${this.state.runningPercentage}% complete`}</ProgressBar>\n        </DemoCard>\n\n        <DemoCard\n          title=\"No text Demo\"\n          uniqueIdentifier=\"onSelectionUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar striped percentage={30} />\n        </DemoCard>\n\n        <DemoCard\n          title=\"Sizes\"\n          uniqueIdentifier=\"sizeUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar striped small percentage={30}>30% complete</ProgressBar>\n          <br />\n          <ProgressBar striped medium percentage={30}>30% complete</ProgressBar>\n          <br />\n          <ProgressBar striped large percentage={30}>30% complete</ProgressBar>\n        </DemoCard>\n\n        <DemoCard\n          title=\"Theme\"\n          uniqueIdentifier=\"onthemeUse\"\n          sourceCode={simpleCode}\n        >\n          <ProgressBar striped primary percentage={60}>60% complete</ProgressBar>\n          <br />\n          <ProgressBar striped secondary percentage={60}>60% complete</ProgressBar>\n          <br />\n          <ProgressBar striped dark percentage={60}>60% complete</ProgressBar>\n          <br />\n          <ProgressBar striped light percentage={60}>60% complete</ProgressBar>\n          <br />\n          <ProgressBar striped info percentage={60}>60% complete</ProgressBar>\n          <br />\n          <ProgressBar striped warning percentage={60}>60% complete</ProgressBar>\n          <br />\n          <ProgressBar striped danger percentage={60}>60% complete</ProgressBar>\n          <br />\n          <ProgressBar striped success percentage={60}>60% complete</ProgressBar>\n        </DemoCard>\n      </div>\n    );\n  }\n}\n\nexport default ProgressBarDemo;\n"]},"metadata":{},"sourceType":"module"}