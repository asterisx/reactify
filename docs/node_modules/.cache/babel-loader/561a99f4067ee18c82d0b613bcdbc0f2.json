{"ast":null,"code":"var _jsxFileName = \"/Users/mac/projects/reactify/docs/src/pages/group-toggle/group-toggle.js\";\nimport React from 'react';\nimport { GroupToggle, Button } from '@../../../../reactify/build';\nimport { onSelectionCode, simpleCode, disabledCode, selectedIndexCode } from './code-refrence';\nimport './group-toggle.scss';\nimport DemoCard from '../../components/demo-card';\n\nvar GroupToggleDemo = function GroupToggleDemo() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(DemoCard, {\n    title: \"Simple Use\",\n    uniqueIdentifier: \"simpleUse\",\n    sourceCode: simpleCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(GroupToggle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, function (_ref) {\n    var selectedIndex = _ref.selectedIndex;\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      index: 0,\n      success: selectedIndex === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(Button, {\n      index: 1,\n      success: selectedIndex === 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(Button, {\n      index: 2,\n      success: selectedIndex === 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Option 3\"));\n  })), React.createElement(DemoCard, {\n    title: \"Selected Index\",\n    uniqueIdentifier: \"selectedIndexUse\",\n    sourceCode: selectedIndexCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(GroupToggle, {\n    selectedIndex: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, function (_ref2) {\n    var selectedIndex = _ref2.selectedIndex;\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      index: 0,\n      success: selectedIndex === 0,\n      default: selectedIndex !== 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(Button, {\n      index: 1,\n      success: selectedIndex === 1,\n      default: selectedIndex !== 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(Button, {\n      index: 2,\n      success: selectedIndex === 2,\n      default: selectedIndex !== 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Option 3\"));\n  })), React.createElement(DemoCard, {\n    title: \"onSelection\",\n    uniqueIdentifier: \"onSelectionUse\",\n    sourceCode: onSelectionCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(GroupToggle, {\n    onSelectionChange: function onSelectionChange(_ref3) {\n      var event = _ref3.event,\n          index = _ref3.index;\n      return alrt(\"Selected index \".concat(index));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, function (_ref4) {\n    var selectedIndex = _ref4.selectedIndex;\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      index: 0,\n      success: selectedIndex === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(Button, {\n      index: 1,\n      success: selectedIndex === 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(Button, {\n      index: 2,\n      success: selectedIndex === 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Option 3\"));\n  })), React.createElement(DemoCard, {\n    title: \"Disabled\",\n    uniqueIdentifier: \"diabledUse\",\n    sourceCode: disabledCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(GroupToggle, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, function (_ref5) {\n    var selectedIndex = _ref5.selectedIndex;\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      index: 0,\n      success: selectedIndex === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(Button, {\n      index: 1,\n      success: selectedIndex === 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(Button, {\n      index: 2,\n      success: selectedIndex === 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Option 3\"));\n  })));\n};\n\nexport default GroupToggleDemo;","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/group-toggle/group-toggle.js"],"names":["React","GroupToggle","Button","onSelectionCode","simpleCode","disabledCode","selectedIndexCode","DemoCard","GroupToggleDemo","selectedIndex","event","index","alrt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,6BAApC;AACA,SACEC,eADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,iBAJF,QAKO,iBALP;AAMA,OAAO,qBAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,gBAAgB,EAAC,WAFnB;AAGE,IAAA,UAAU,EAAEJ,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGK,aAAH,QAAGA,aAAH;AAAA,WACC,0CACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAaE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CADD;AAAA,GADH,CALF,CADF,EAgCE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,gBAAgB,EAAC,kBAFnB;AAGE,IAAA,UAAU,EAAEH,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,aAAa,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGG,aAAH,SAAGA,aAAH;AAAA,WACC,0CACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAGE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAQE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAGE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,EAeE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAGE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CADD;AAAA,GADH,CALF,CAhCF,EAkEE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,gBAAgB,EAAC,gBAFnB;AAGE,IAAA,UAAU,EAAEN,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,iBAAiB,EAAE;AAAA,UAAGO,KAAH,SAAGA,KAAH;AAAA,UAAUC,KAAV,SAAUA,KAAV;AAAA,aAAsBC,IAAI,0BAAmBD,KAAnB,EAA1B;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGF,aAAH,SAAGA,aAAH;AAAA,WACC,0CACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAaE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CADD;AAAA,GADH,CALF,CAlEF,EAiGE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,gBAAgB,EAAC,YAFnB;AAGE,IAAA,UAAU,EAAEJ,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,QAAQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGI,aAAH,SAAGA,aAAH;AAAA,WACC,0CACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAaE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,OAAO,EAAEA,aAAa,KAAK,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CADD;AAAA,GADH,CALF,CAjGF,CADsB;AAAA,CAAxB;;AAmIA,eAAeD,eAAf","sourcesContent":["import React from 'react';\nimport { GroupToggle, Button } from '@../../../../reactify/build';\nimport {\n  onSelectionCode,\n  simpleCode,\n  disabledCode,\n  selectedIndexCode,\n} from './code-refrence';\nimport './group-toggle.scss';\nimport DemoCard from '../../components/demo-card';\n\nconst GroupToggleDemo = () => (\n  <div>\n    <DemoCard\n      title=\"Simple Use\"\n      uniqueIdentifier=\"simpleUse\"\n      sourceCode={simpleCode}\n    >\n      <GroupToggle>\n        {({ selectedIndex }) => (\n          <>\n            <Button\n              index={0}\n              success={selectedIndex === 0}\n            >\n              Option 1\n            </Button>\n            <Button\n              index={1}\n              success={selectedIndex === 1}\n            >\n              Option 2\n            </Button>\n            <Button\n              index={2}\n              success={selectedIndex === 2}\n            >\n              Option 3\n            </Button>\n          </>\n        )}\n      </GroupToggle>\n    </DemoCard>\n\n    <DemoCard\n      title=\"Selected Index\"\n      uniqueIdentifier=\"selectedIndexUse\"\n      sourceCode={selectedIndexCode}\n    >\n      <GroupToggle selectedIndex={1}>\n        {({ selectedIndex }) => (\n          <>\n            <Button\n              index={0}\n              success={selectedIndex === 0}\n              default={selectedIndex !== 0}\n            >\n              Option 1\n            </Button>\n            <Button\n              index={1}\n              success={selectedIndex === 1}\n              default={selectedIndex !== 1}\n            >\n              Option 2\n            </Button>\n            <Button\n              index={2}\n              success={selectedIndex === 2}\n              default={selectedIndex !== 2}\n            >\n              Option 3\n            </Button>\n          </>\n        )}\n      </GroupToggle>\n    </DemoCard>\n\n    <DemoCard\n      title=\"onSelection\"\n      uniqueIdentifier=\"onSelectionUse\"\n      sourceCode={onSelectionCode}\n    >\n      <GroupToggle onSelectionChange={({ event, index }) => alrt(`Selected index ${index}`)}>\n        {({ selectedIndex }) => (\n          <>\n            <Button\n              index={0}\n              success={selectedIndex === 0}\n            >\n              Option 1\n            </Button>\n            <Button\n              index={1}\n              success={selectedIndex === 1}\n            >\n              Option 2\n            </Button>\n            <Button\n              index={2}\n              success={selectedIndex === 2}\n            >\n              Option 3\n            </Button>\n          </>\n        )}\n      </GroupToggle>\n    </DemoCard>\n\n    <DemoCard\n      title=\"Disabled\"\n      uniqueIdentifier=\"diabledUse\"\n      sourceCode={disabledCode}\n    >\n      <GroupToggle disabled>\n        {({ selectedIndex }) => (\n          <>\n            <Button\n              index={0}\n              success={selectedIndex === 0}\n            >\n              Option 1\n            </Button>\n            <Button\n              index={1}\n              success={selectedIndex === 1}\n            >\n              Option 2\n            </Button>\n            <Button\n              index={2}\n              success={selectedIndex === 2}\n            >\n              Option 3\n            </Button>\n          </>\n        )}\n      </GroupToggle>\n    </DemoCard>\n  </div>\n);\n\nexport default GroupToggleDemo;\n"]},"metadata":{},"sourceType":"module"}