{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _server = require(\"react-dom/server\");\n\nvar _label = _interopRequireDefault(require(\"../label\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar replaceAll = function replaceAll(target, strReplace, callback) {\n  // See http://stackoverflow.com/a/3561711/556609\n  // eslint-disable-next-line no-useless-escape\n  var esc = strReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  var reg = new RegExp(esc, 'ig');\n  return target.replace(reg, callback);\n};\n\nvar labelStyle = {\n  fontSize: 'inherit',\n  padding: '0 2px',\n  margin: 0\n};\n\nvar getHighlightedText = function getHighlightedText(_ref) {\n  var children = _ref.children,\n      filter = _ref.filter,\n      insensitive = _ref.insensitive,\n      props = _objectWithoutProperties(_ref, [\"children\", \"filter\", \"insensitive\"]);\n\n  if (filter === undefined) {\n    return {\n      __html: children\n    };\n  }\n\n  var text = children;\n\n  if (insensitive) {\n    text = replaceAll(text, filter, function (match) {\n      return (0, _server.renderToString)((0, _core.jsx)(_label.default, _extends({\n        style: labelStyle\n      }, props), match));\n    });\n  } else {\n    text = text.replace(filter, (0, _server.renderToString)((0, _core.jsx)(_label.default, _extends({\n      style: labelStyle\n    }, props), filter)));\n  }\n\n  return {\n    __html: text\n  };\n};\n\nvar Highlight = function Highlight(_ref2) {\n  var children = _ref2.children,\n      filter = _ref2.filter,\n      insensitive = _ref2.insensitive,\n      primary = _ref2.primary,\n      secondary = _ref2.secondary,\n      dark = _ref2.dark,\n      light = _ref2.light,\n      info = _ref2.info,\n      warning = _ref2.warning,\n      danger = _ref2.danger,\n      success = _ref2.success,\n      theme = _ref2.theme;\n  return (// eslint-disable-next-line react/no-danger\n    (0, _core.jsx)(\"span\", {\n      dangerouslySetInnerHTML: getHighlightedText({\n        children: children,\n        filter: filter,\n        insensitive: insensitive,\n        primary: primary,\n        secondary: secondary,\n        dark: dark,\n        light: light,\n        info: info,\n        warning: warning,\n        danger: danger,\n        success: success,\n        theme: theme\n      })\n    })\n  );\n};\n\nHighlight.propTypes = {\n  filter: _propTypes.default.string,\n  insensitive: _propTypes.default.bool\n};\nHighlight.defaultProps = {\n  filter: undefined,\n  insensitive: false\n};\nvar _default = Highlight;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}