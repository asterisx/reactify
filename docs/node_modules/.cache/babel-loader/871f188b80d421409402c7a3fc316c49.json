{"ast":null,"code":"var simpleCode = \"\\nstate = {\\n  config: {\\n    fields: {\\n      username: {\\n        value: '',\\n        isError: true,\\n        errorText: 'username error',\\n        isLoading: false,\\n        disabled: false,\\n      },\\n      password: {\\n        value: '',\\n        isError: true,\\n        errorText: 'password error',\\n        isLoading: false,\\n        disabled: false,\\n      },\\n      submit: {\\n        isLoading: false,\\n        disabled: false,\\n      },\\n      error: {\\n        visible: true,\\n        text: 'main error',\\n      },\\n    },\\n  },\\n};\\n\\nhandleLogin = ({ action, value, prevState }) => {\\n  if (action === Login.actionTypes.username) {\\n    if (value.indexOf(' ') >= 0) { this.setState({ config: { fields: { username: { value, isError: true, errorText: 'Username cannot have spaces' } } } }); } else {\\n      this.setState({ config: { fields: { username: { value, isError: false, errorText: '' } } } });\\n    }\\n  } else if (action === Login.actionTypes.password) {\\n    this.setState({ config: { fields: { password: { value } } } });\\n  } else if (action === Login.actionTypes.submit) {\\n    this.setState(\\n      {\\n        config: {\\n          fields: {\\n            username: {\\n              isLoading: true,\\n              disabled: true,\\n            },\\n            password: {\\n              isLoading: true,\\n              disabled: true,\\n            },\\n            submit: {\\n              isLoading: true,\\n              disabled: true,\\n            },\\n          },\\n        },\\n      },\\n    );\\n  }\\n}\\n\\n<Login state={this.state.config} updateState={this.handleLogin} />\\n\";\nexport { simpleCode };","map":{"version":3,"sources":["/Users/mac/projects/reactify/docs/src/pages/login/code-refrence.js"],"names":["simpleCode"],"mappings":"AAAA,IAAMA,UAAU,qkDAAhB;AAiEA,SACEA,UADF","sourcesContent":["const simpleCode = `\nstate = {\n  config: {\n    fields: {\n      username: {\n        value: '',\n        isError: true,\n        errorText: 'username error',\n        isLoading: false,\n        disabled: false,\n      },\n      password: {\n        value: '',\n        isError: true,\n        errorText: 'password error',\n        isLoading: false,\n        disabled: false,\n      },\n      submit: {\n        isLoading: false,\n        disabled: false,\n      },\n      error: {\n        visible: true,\n        text: 'main error',\n      },\n    },\n  },\n};\n\nhandleLogin = ({ action, value, prevState }) => {\n  if (action === Login.actionTypes.username) {\n    if (value.indexOf(' ') >= 0) { this.setState({ config: { fields: { username: { value, isError: true, errorText: 'Username cannot have spaces' } } } }); } else {\n      this.setState({ config: { fields: { username: { value, isError: false, errorText: '' } } } });\n    }\n  } else if (action === Login.actionTypes.password) {\n    this.setState({ config: { fields: { password: { value } } } });\n  } else if (action === Login.actionTypes.submit) {\n    this.setState(\n      {\n        config: {\n          fields: {\n            username: {\n              isLoading: true,\n              disabled: true,\n            },\n            password: {\n              isLoading: true,\n              disabled: true,\n            },\n            submit: {\n              isLoading: true,\n              disabled: true,\n            },\n          },\n        },\n      },\n    );\n  }\n}\n\n<Login state={this.state.config} updateState={this.handleLogin} />\n`;\n\n\nexport {\n  simpleCode,\n};\n"]},"metadata":{},"sourceType":"module"}