{"lib/components/accordion/accordion.js":{"description":"","displayName":"Accordion","methods":[{"name":"Item","docblock":null,"modifiers":["static"],"params":[{"name":"{\n  children,\n  index,\n  open,\n  disabled,\n  primary,\n  secondary,\n  dark,\n  light,\n  info,\n  warning,\n  danger,\n  success,\n  theme,\n  onHeaderClick,\n  ...otherProps\n}","type":null}],"returns":null},{"name":"Header","docblock":null,"modifiers":["static"],"params":[{"name":"{\n  children,\n  icon,\n  showIcon,\n  disabled,\n  primary,\n  secondary,\n  dark,\n  light,\n  info,\n  warning,\n  danger,\n  success,\n  theme,\n  open,\n  toggleItem,\n  ...otherProps\n}","type":null}],"returns":null},{"name":"Body","docblock":null,"modifiers":["static"],"params":[{"name":"{\n  children,\n  ...otherProps\n}","type":null}],"returns":null},{"name":"toggleItem","docblock":null,"modifiers":[],"params":[{"name":"index","type":null}],"returns":null}],"props":{"multiple":{"type":{"name":"bool"},"required":false,"description":"If 'true' multiple accordion items can be open at a time.\nDefaults to true","defaultValue":{"value":"true","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true' accordion will be disabled and will have no events","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/alert/alert.js":{"description":"","displayName":"Alert","methods":[],"props":{"borderLeft":{"type":{"name":"bool"},"required":false,"description":"If 'true' shows a border on left\nDefault is 'true'","defaultValue":{"value":"true","computed":false}},"borderRight":{"type":{"name":"bool"},"required":false,"description":"If 'true' shows a border on left\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"borderTop":{"type":{"name":"bool"},"required":false,"description":"If 'true' shows a border on left\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"borderBottom":{"type":{"name":"bool"},"required":false,"description":"If 'true' shows a border on left\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/badge/badge.js":{"description":"","displayName":"Badge","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}}},"lib/components/breadcrumbs/breadcrumbs.js":{"description":"","displayName":"BreadCrumbs","methods":[],"props":{"items":{"type":{"name":"arrayOf","value":{"name":"any"}},"required":false,"description":"The items themeselves. It is an array with elements of form\n{ key: number (reuired), content: any, ...otherValues (these are drilled directly to the li) }","defaultValue":{"value":"[]","computed":false}},"seperator":{"type":{"name":"any"},"required":false,"description":"The seperator which is used to seperate\ntwo breadcrumb items","defaultValue":{"value":"'/'","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/button/button.js":{"description":"","displayName":"Button","methods":[],"props":{"clear":{"type":{"name":"bool"},"required":false,"description":"If 'true', the background is transparent\nand the font color matches the passed theme's color\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"bordered":{"type":{"name":"bool"},"required":false,"description":"Used in conjunction with 'clear'\nIf 'true' all same as clear prop + border is same as theme's color\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/card/card.js":{"description":"","displayName":"Card","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"shadowed":{"type":{"name":"bool"},"required":false,"description":"If 'true', shows a shadow\nDefault to 'true'","defaultValue":{"value":"true","computed":false}}},"composes":["../../common"]},"lib/components/checkbox/checkbox.js":{"description":"","displayName":"Checkbox","methods":[{"name":"handleCheckboxClick","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"checked":{"type":{"name":"bool"},"required":false,"description":"If 'true', sets checkbox to checked\nDefault to 'false'.","defaultValue":{"value":"undefined","computed":true}},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true', makes the checkbox component 'Controlled'\nDefault to 'false'","defaultValue":{"value":"false","computed":false}},"iconColor":{"type":{"name":"string"},"required":false,"description":"The color of the checkbox 'icon'\naceepts any valid CSS value for this","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n@param {object} val of shape:\n@param {object} event The event source for the callback.\n@param {boolean} checked The `checked` value of the checkbox is also passed.","defaultValue":{"value":"() => {}","computed":false}}},"composes":["../../common"]},"lib/components/context-menu/components/sub-menu/sub-menu.js":{"description":"","displayName":"SubMenu","methods":[{"name":"getPos","docblock":null,"modifiers":["static"],"params":[{"name":"{\n  left,\n  top,\n  width,\n  height,\n  parentWidth,\n  small,\n  medium,\n  large,\n  isBaseMenu,\n  isInView,\n}","type":null}],"returns":null}],"props":{"isBaseMenu":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}},"composes":["../../../../common"]},"lib/components/context-menu/components/sub-menu-item/sub-menu-item.js":{"description":"","displayName":"SubMenuItem","methods":[{"name":"showSub","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"hideSub","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"icon":{"type":{"name":"any"},"required":false,"description":"`Optional` An optional icon to show"},"text":{"type":{"name":"string"},"required":false,"description":"The 'text' value itself","defaultValue":{"value":"''","computed":false}},"content":{"type":{"name":"any"},"required":false,"description":"If passed, this is all that goes inside the menu item,\ntext, icon and drop down icon are not shown/ ignored"},"sub":{"type":{"name":"any"},"required":false,"description":"An object of shape\nicon: PropTypes.any,\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`Of same shape as sub`\nsub: PropTypes.any,\ndisabled: PropTypes.bool,"},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the menu item is disabled,\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../../../common"]},"lib/components/context-menu/context-menu.js":{"description":"","displayName":"ContextMenu","methods":[{"name":"showMenu","docblock":null,"modifiers":[],"params":[{"name":"x","type":null},{"name":"y","type":null}],"returns":null},{"name":"hideMenu","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"onContextMenu","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null},{"name":"onMouseDown","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"items":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"icon":{"name":"any","required":false},"text":{"name":"string","required":false},"content":{"name":"any","required":false},"sub":{"name":"any","required":false},"disabled":{"name":"bool","required":false}}}},"required":false,"description":"A collection of a array of shape\nicon: PropTypes.any\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`Of same shape as items`\nsub: PropTypes.any,\ndisabled: PropTypes.bool,"}},"composes":["../../common"]},"lib/components/dismiss/dismiss.js":{"description":"","displayName":"Dismiss","methods":[{"name":"getIcon","docblock":null,"modifiers":[],"params":[{"name":"{\n  primary,\n  secondary,\n  dark,\n  light,\n  info,\n  warning,\n  danger,\n  success,\n}","type":null}],"returns":null},{"name":"close","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"onClose":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onCloseIconClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"autoDismiss":{"defaultValue":{"value":"true","computed":false},"required":false}},"composes":["../../common"]},"lib/components/dropdown/dropdown.js":{"description":"","displayName":"Dropdown","methods":[{"name":"closeTray","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"toggleTray","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"updateWindowDimensions","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"trayOpen":{"type":{"name":"bool"},"required":false,"description":"If 'true', the dropdown's try is open, i.e dropdown is displaying content\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"label":{"type":{"name":"any"},"required":false,"description":"The label prop, can be any valid react element,","defaultValue":{"value":"''","computed":false}},"sm":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for sm screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"md":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for md screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"lg":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for lg screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"xl":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for xl screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/file-upload/file-upload.js":{"description":"","displayName":"FileUpload","methods":[{"name":"onDrop","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"onDragOver","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"onDragEnter","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"onDragLeave","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"clickFileInput","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when files are dropped/changes.\n\n@param {object} obj Use something like { files } = obj to get the files","defaultValue":{"value":"undefined","computed":true}},"clickable":{"type":{"name":"bool"},"required":false,"description":"If 'true' clicking the component triggers a file chooser\nDefault to 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', no events\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/full-screen/full-screen.js":{"description":"","displayName":"FullScreen","methods":[{"name":"handleKeyDown","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"saveCurrentContainerState","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"resetContainerState","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"expand","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"reset","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"expanded":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is expanded by default\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"hideIcon":{"type":{"name":"bool"},"required":false,"description":"If 'true', the icon is hidden\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"contractOnEscapeKey":{"type":{"name":"bool"},"required":false,"description":"If 'true', the expanded state can be contracted with esc key\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/group-toggle/group-toggle.js":{"description":"","displayName":"GroupToggle","methods":[{"name":"toggleSelect","docblock":null,"modifiers":[],"params":[{"name":"{ event, index }","type":null}],"returns":null}],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"selectedIndex":{"type":{"name":"number"},"required":false,"description":"The current selectedIndex","defaultValue":{"value":"0","computed":false}},"onSelectionChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n\n@param {object} event The event source for the callback (its a click event)\n@param {number} index The `index` of the selected toggle","defaultValue":{"value":"() => {}","computed":false}}}},"lib/components/heat-map/heat-map.js":{"description":"","displayName":"HeatMap","methods":[],"props":{"items":{"type":{"name":"arrayOf","value":{"name":"arrayOf","value":{"name":"number"}}},"required":false,"description":"The dataset itself,\nThis is a multdimensional array of numbers.\nYou can also pass `undefined` and that cell\nwill be there but won't show anything.","defaultValue":{"value":"[]","computed":false}},"baseColor":{"type":{"name":"string"},"required":false,"description":"The baseColor acts as a base for cell background colors,\nThe maximum value in the items has the baseColor,\nThe least value has no background color\nAll other cells get a compound ratio of `alpha` applied to the baseColor\ndepending on their item value","defaultValue":{"value":"undefined","computed":true}},"onCellClick":{"type":{"name":"func"},"required":false,"description":"Callback fired when a cell is clicked\n@param {number} row This is the row number\n@param {number} column This is the column number","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', no pointer events on Cells\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/heirarchy-view/components/heirarchy-view-item.js":{"description":"","displayName":"HeirarchyViewItem","methods":[],"props":{"content":{"type":{"name":"any"},"required":false,"description":"Content accepts any valid React component or text or number or value.","defaultValue":{"value":"undefined","computed":true}},"text":{"type":{"name":"string"},"required":false,"description":"The 'text' value itself.","defaultValue":{"value":"undefined","computed":true}},"sub":{"type":{"name":"any"},"required":false,"description":"A collection or a single object array of shape\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`And array or object of same shape as sub`\nsub: PropTypes.any,","defaultValue":{"value":"undefined","computed":true}},"vertical":{"type":{"name":"bool"},"required":false,"description":"If 'true', the heirarchy view is displayed vertically\nDefault is 'false'.\n`WARNING`: This value is used passed down from HeirarchyView to HeirarchyView.Item\nand should not be passed directly to HeirarchyView.Item","defaultValue":{"value":"false","computed":false}}}},"lib/components/heirarchy-view/heirarchy-view.js":{"description":"","displayName":"HeirarchyView","methods":[],"props":{"item":{"type":{"name":"any"},"required":false,"description":"Of shape\n`A single item of shape:`\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`And array or object of same shape as item`","defaultValue":{"value":"undefined","computed":true}},"vertical":{"type":{"name":"bool"},"required":false,"description":"If 'true', the heirarchy view is displayed vertically\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/highlight/highlight.js":{"description":"","displayName":"Highlight","methods":[],"props":{"filter":{"type":{"name":"string"},"required":false,"description":"The filter text","defaultValue":{"value":"undefined","computed":true}},"insensitive":{"type":{"name":"bool"},"required":false,"description":"If 'true', the filtering is case insensitive\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/horizontal-card/horizontal-card.js":{"description":"","displayName":"HorizontalCard","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"shadowed":{"type":{"name":"bool"},"required":false,"description":"If 'true', shows a shadow\nDefault to 'true'","defaultValue":{"value":"true","computed":false}}},"composes":["../../common"]},"lib/components/input/input.js":{"description":"","displayName":"Input","methods":[],"composes":["../../common"]},"lib/components/label/label.js":{"description":"","displayName":"Label","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/link/link.js":{"description":"","displayName":"Link","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/list-panel/list-panel.js":{"description":"","displayName":"ListPanel","methods":[{"name":"Item","docblock":null,"modifiers":["static"],"params":[{"name":"{\n  primary,\n  secondary,\n  dark,\n  light,\n  info,\n  warning,\n  danger,\n  success,\n  theme,\n  small,\n  medium,\n  large,\n  selected,\n  bordered,\n  children,\n  disabled,\n  isSelectable,\n  isControlled,\n  onClick,\n  noItemDefaultStyling,\n  ...otherProps\n}","type":null}],"returns":null},{"name":"itemClicked","docblock":null,"modifiers":[],"params":[{"name":"{ event, index }","type":null}],"returns":null}],"props":{"bordered":{"type":{"name":"bool"},"required":false,"description":"This is used to set a borderTop to list items\nThis is drilled directly to ListPanel.Item 'as is'","defaultValue":{"value":"true","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"multiple":{"type":{"name":"bool"},"required":false,"description":"If 'true' multiple items can be open at a time.\nDefaults to true","defaultValue":{"value":"false","computed":false}},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true', makes the item controlled\nDefault is 'false'.","defaultValue":{"value":"false","computed":false}},"onItemClicked":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n@param {object} val of shape:\n@param {number} index The value of index prop of the selected value.\n@param {object} event The 'event' itself\n@param {boolean} [selected] The `selected` value of the selected item is also passed","defaultValue":{"value":"undefined","computed":true}},"noItemDefaultStyling":{"type":{"name":"bool"},"required":false,"description":"If 'true', no styling is applied to list panel items'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/login/login.js":{"description":"","displayName":"Login","methods":[{"name":"handleValueChange","docblock":null,"modifiers":[],"params":[{"name":"{ action, value }","type":null}],"returns":null}],"props":{"updateState":{"type":{"name":"func"},"required":true,"description":""}}},"lib/components/modal/modal.js":{"description":"","displayName":"Modal","methods":[{"name":"animateIn","docblock":null,"modifiers":[],"params":[{"name":"container","type":null},{"name":"child","type":null},{"name":"Bg","type":null},{"name":"hideBackDrop","type":null},{"name":"duration","type":null}],"returns":null},{"name":"animateOut","docblock":null,"modifiers":[],"params":[{"name":"container","type":null},{"name":"child","type":null},{"name":"Bg","type":null},{"name":"callBack","type":null},{"name":"duration","type":null}],"returns":null},{"name":"close","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"autoClose":{"type":{"name":"bool"},"required":false,"description":"If 'true', the modal can be closed by clicking outside it\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"hideBackDrop":{"type":{"name":"bool"},"required":false,"description":"If 'true', the background is not visible once the modal is open\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"The callback called when modal is closed","defaultValue":{"value":"undefined","computed":true}},"style":{"defaultValue":{"value":"{ width: undefined }","computed":false},"required":false}},"composes":["../../common"]},"lib/components/number-counter/number-counter.js":{"description":"","displayName":"NumberCounter","methods":[{"name":"reset","docblock":null,"modifiers":[],"params":[{"name":"ticker","type":null}],"returns":null},{"name":"updateTicker","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"createInterval","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"createTimeout","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"startTicker","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"clearTimeoutAndInterval","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"from":{"type":{"name":"number"},"required":false,"description":"The 'from' where the counter starts from","defaultValue":{"value":"0","computed":false}},"to":{"type":{"name":"number"},"required":true,"description":"The 'to' where the counter goes to"},"delay":{"type":{"name":"number"},"required":false,"description":"The delay before the counter starts","defaultValue":{"value":"0","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"interval":{"type":{"name":"number"},"required":false,"description":"The interval for the setInterval","defaultValue":{"value":"10","computed":false}},"step":{"type":{"name":"number"},"required":false,"description":"By how much the counter steps by","defaultValue":{"value":"23","computed":false}},"onValueChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the value is changed.\n\n@param {number} value The new `value` value of the number counter"},"onComplete":{"type":{"name":"func"},"required":false,"description":""}},"composes":["../../common"]},"lib/components/paginator/paginator.js":{"description":"","displayName":"Paginator","methods":[{"name":"Before","docblock":null,"modifiers":["static"],"params":[{"name":"{ children, ...otherProps }","type":null}],"returns":null},{"name":"After","docblock":null,"modifiers":["static"],"params":[{"name":"{ children, ...otherProps }","type":null}],"returns":null},{"name":"onChange","docblock":null,"modifiers":[],"params":[{"name":"value","type":null}],"returns":null}],"props":{"currentPage":{"type":{"name":"number"},"required":false,"description":"The current page itself","defaultValue":{"value":"1","computed":false}},"noOfPages":{"type":{"name":"number"},"required":true,"description":"The total no. of pages"},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is in controlled mode\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the value is changed.\n\n@param {object} obj Use { values } = obj to ge the new value"},"sm":{"type":{"name":"bool"},"required":false,"description":"If 'true', the layout changes flex direction to 'row'\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"md":{"type":{"name":"bool"},"required":false,"description":"If 'true', the layout changes flex direction to 'row'\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"lg":{"type":{"name":"bool"},"required":false,"description":"If 'true', the layout changes flex direction to 'row'\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"xl":{"type":{"name":"bool"},"required":false,"description":"If 'true', the layout changes flex direction to 'row'\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/paper/paper.js":{"description":"","displayName":"Paper","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"noShadow":{"type":{"name":"bool"},"required":false,"description":"If 'true', no shaodow is applied to the component\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/portal/portal.js":{"description":"","displayName":"Portal","methods":[{"name":"animateIn","docblock":null,"modifiers":[],"params":[{"name":"left","type":null},{"name":"right","type":null},{"name":"bottom","type":null},{"name":"top","type":null},{"name":"container","type":null},{"name":"elem","type":null},{"name":"elemBg","type":null},{"name":"hideBackDrop","type":null},{"name":"duration","type":null}],"returns":null},{"name":"animateOut","docblock":null,"modifiers":[],"params":[{"name":"left","type":null},{"name":"right","type":null},{"name":"bottom","type":null},{"name":"top","type":null},{"name":"container","type":null},{"name":"elem","type":null},{"name":"elemBg","type":null},{"name":"callBack","type":null},{"name":"duration","type":null}],"returns":null},{"name":"getContainerDefaultStyle","docblock":null,"modifiers":[],"params":[{"name":"left","type":null},{"name":"right","type":null},{"name":"bottom","type":null},{"name":"top","type":null}],"returns":null},{"name":"close","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"top":{"type":{"name":"bool"},"required":false,"description":"If 'true', the portal will be positioned top\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"bottom":{"type":{"name":"bool"},"required":false,"description":"If 'true', the portal will be positioned bottom\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"left":{"type":{"name":"bool"},"required":false,"description":"If 'true', the portal will be positioned left\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"right":{"type":{"name":"bool"},"required":false,"description":"If 'true', the portal will be positioned right\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"autoClose":{"type":{"name":"bool"},"required":false,"description":"If 'true', the modal can be closed by clicking outside it\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"hideBackDrop":{"type":{"name":"bool"},"required":false,"description":"If 'true', the background is not visible once the modal is open\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"The callback called when modal is closed","defaultValue":{"value":"undefined","computed":true}}}},"lib/components/progress-bar/progress-bar.js":{"description":"","displayName":"ProgressBar","methods":[],"props":{"textLeft":{"type":{"name":"bool"},"required":false,"description":"If 'true', the text is left inside the progress bar\nDefault value is 'true'","defaultValue":{"value":"true","computed":false}},"textRight":{"type":{"name":"bool"},"required":false,"description":"If 'true', the text is right inside the progress bar\nDefault value is 'false'","defaultValue":{"value":"false","computed":false}},"textCenter":{"type":{"name":"bool"},"required":false,"description":"If 'true', the text is center inside the progress bar\nDefault value is 'false'","defaultValue":{"value":"false","computed":false}},"striped":{"type":{"name":"bool"},"required":false,"description":"If 'true', stripes are shown\nDefault value is 'false'","defaultValue":{"value":"false","computed":false}},"percentage":{"type":{"name":"custom","raw":"function(props, propName, componentName) {\n  const percentage = props[propName];\n\n  if (percentage === undefined) {\n    return new Error(`Percentage is a required prop in ${componentName}`);\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  if (isNaN(percentage)) {\n    return new Error(`Percentage must be a number in ${componentName}`);\n  }\n\n  return percentage >= 0 && percentage <= 100 ? null : new Error(`Percentage must be between 0 to 100 in ${componentName}`);\n}"},"required":false,"description":"Required\nThe current progress bar value"}},"composes":["../../common"]},"lib/components/radio-group/radio-group.js":{"description":"","displayName":"RadioGroup","methods":[{"name":"toggleSelect","docblock":null,"modifiers":[],"params":[{"name":"index","type":null}],"returns":null}],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"onSelectionChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when new radio input is selected\n@param {number} index The `index` of the new radio input","defaultValue":{"value":"() => {}","computed":false}},"selectedIndex":{"type":{"name":"number"},"required":false,"description":"The index of the currently selected radio input\nThis should match the `index` prop of the radio input"}},"composes":["../../common"]},"lib/components/radio-input/radio-input.js":{"description":"","displayName":"RadioInput","methods":[{"name":"handleOnChange","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"getStyle","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"checked":{"type":{"name":"bool"},"required":false,"description":"If 'true', sets radio-input to checked\nDefaults to 'false'.","defaultValue":{"value":"undefined","computed":true}},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true', makes the radio-input component 'Controlled'\nDefault to 'false'","defaultValue":{"value":"false","computed":false}},"iconColor":{"type":{"name":"string"},"required":false,"description":"The color of the radio-input 'icon'\naceepts any valid CSS value for this","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n@param {object} val of shape:\n@param {object} event The event source for the callback.\nYou can use `event.target.checked` to get the new value\n@param {boolean} checked The `checked` value of the radio-input is also passed","defaultValue":{"value":"() => {}","computed":false}}},"composes":["../../common"]},"lib/components/search-bar/search-bar.js":{"description":"","displayName":"SearchBar","methods":[{"name":"handleOnChange","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"clearInput","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true' the SearchBar is disabled.\nDefault to 'false'.","defaultValue":{"value":"false","computed":false}},"value":{"type":{"name":"string"},"required":false,"description":"Used to set the value of the searchbar,\npassing this makes the searchbar 'controlled'","defaultValue":{"value":"''","computed":false}},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true', makes the searchBar component 'Controlled'\nDefault to 'false'","defaultValue":{"value":"false","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"A placeholder for input","defaultValue":{"value":"''","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n@param {object} val of shape:\n@param {object} event The event source for the callback.\nYou can use `event.target.value` to get the new value\n@param {string} value The `value` of the searchbar is also passed","defaultValue":{"value":"undefined","computed":true}}},"composes":["../../common"]},"lib/components/select/select.js":{"description":"","displayName":"Select","methods":[{"name":"Item","docblock":null,"modifiers":["static"],"params":[{"name":"{ children, ...otherProps }","type":null}],"returns":null},{"name":"getItem","docblock":null,"modifiers":[],"params":[{"name":"child","type":null}],"returns":null},{"name":"handleOnChange","docblock":null,"modifiers":[],"params":[{"name":"{ index }","type":null}],"returns":null},{"name":"filterItems","docblock":null,"modifiers":[],"params":[{"name":"{ value }","type":null}],"returns":null},{"name":"toggleAll","docblock":null,"modifiers":[],"params":[{"name":"checked","type":null}],"returns":null}],"props":{"searchable":{"type":{"name":"bool"},"required":false,"description":"If 'true' select items are searcable\ni.e Shows a search box which filters select items\nDefaults to false","defaultValue":{"value":"false","computed":false}},"allSelectable":{"type":{"name":"bool"},"required":false,"description":"If 'true' select items are all selectable\ni.e Shows a check box which select all items\nDefaults to false","defaultValue":{"value":"false","computed":false}},"multiple":{"type":{"name":"bool"},"required":false,"description":"If 'true' multiple items can be open at a time.\nDefaults to true","defaultValue":{"value":"true","computed":false}},"sm":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for sm screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"md":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for md screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"lg":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for lg screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"xl":{"type":{"name":"bool"},"required":false,"description":"If 'true', the view is optimized for xl screens\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"onSelectionChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n\n@param {number} index The value of index prop of the selected value.\n@param {boolean} selected The `selected` value of the selected item is also passed","defaultValue":{"value":"undefined","computed":true}}},"composes":["../../common"]},"lib/components/sidebar/components/sidebar-item/sidebar-item.js":{"description":"","displayName":"SidebarItem","methods":[{"name":"toggleSub","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"text":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"content":{"type":{"name":"any"},"required":false,"description":"If passed, this is all that goes inside the menu item,\ntext, icon and drop down icon are not shown/ ignored","defaultValue":{"value":"undefined","computed":true}},"sub":{"type":{"name":"any"},"required":false,"description":"An object of shape\nopenIcon: PropTypes.any,\ncloseIcon: PropTypes.any,\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`Of same shape as sub`\nsub: PropTypes.any,\ndisabled: PropTypes.bool,","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the menu item is disabled,\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"positionFull":{"type":{"name":"bool"},"required":false,"description":"If 'true', the sub sidebar are position\nabsolutely and take up the whole space\nThis makes it possible to have a 'stack' like effect\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/sidebar/components/sub-sidebar/sub-sidebar.js":{"description":"","displayName":"SubSidebar","methods":[],"props":{"items":{"type":{"name":"arrayOf","value":{"name":"any"}},"required":false,"description":"A collection of a array of shape\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`Of same shape as items`\nsub: PropTypes.any,\ndisabled: PropTypes.bool,","defaultValue":{"value":"undefined","computed":true}},"header":{"type":{"name":"any"},"required":false,"description":"[INTERNAL] The header text","defaultValue":{"value":"undefined","computed":true}},"onHeaderClick":{"type":{"name":"func"},"required":false,"description":"[INTERNAL] Callback on click","defaultValue":{"value":"undefined","computed":true}},"positionFull":{"type":{"name":"bool"},"required":false,"description":"If 'true', the sub sidebar are position\nabsolutely and take up the whole space\nThis makes it possible to have a 'stack' like effect\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}}},"lib/components/sidebar/sidebar.js":{"description":"","displayName":"Sidebar","methods":[],"props":{"items":{"type":{"name":"arrayOf","value":{"name":"any"}},"required":false,"description":"A collection of a array of shape\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`Of same shape as items`\nsub: PropTypes.any,\ndisabled: PropTypes.bool,","defaultValue":{"value":"undefined","computed":true}},"positionFull":{"type":{"name":"bool"},"required":false,"description":"If 'true', the sub sidebar are position\nabsolutely and take up the whole space\nThis makes it possible to have a 'stack' like effect\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/slider/slider.js":{"description":"","displayName":"Slider","methods":[{"name":"getValue","docblock":null,"modifiers":["static"],"params":[{"name":"value","type":null},{"name":"min","type":null},{"name":"max","type":null}],"returns":null},{"name":"handleOnChange","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"fill":{"type":{"name":"bool"},"required":false,"description":"If 'true' the background is filled","defaultValue":{"value":"true","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true' the slider is disabled","defaultValue":{"value":"false","computed":false}},"value":{"type":{"name":"number"},"required":false,"description":"Used to set the value of the slider,","defaultValue":{"value":"0","computed":false}},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true', makes the slider component 'Controlled'\nDefault to 'false'","defaultValue":{"value":"false","computed":false}},"min":{"type":{"name":"number"},"required":false,"description":"The min value of the slider","defaultValue":{"value":"0","computed":false}},"max":{"type":{"name":"number"},"required":false,"description":"The max value of the slider","defaultValue":{"value":"100","computed":false}},"minAllowed":{"type":{"name":"number"},"required":false,"description":"The min value allowed for the slider","defaultValue":{"value":"0","computed":false}},"maxAllowed":{"type":{"name":"number"},"required":false,"description":"The max value allowed for the slider","defaultValue":{"value":"100","computed":false}},"fillColor":{"type":{"name":"string"},"required":false,"description":"The fill color","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n@param {object} val of shape:\n@param {object} event The event source for the callback.\nYou can use `event.target.value` to get the new value\n@param {number} value The `value` of the slider is also passed","defaultValue":{"value":"undefined","computed":true}}},"composes":["../../common"]},"lib/components/snackbar/snackbar.js":{"description":"","displayName":"Snackbar","methods":[{"name":"dismiss","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"closed","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"startTimeout","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"clearTimeout","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"message":{"type":{"name":"string"},"required":false,"description":"The message to show","defaultValue":{"value":"''","computed":false}},"action":{"type":{"name":"string"},"required":false,"description":"The name of optional action","defaultValue":{"value":"undefined","computed":true}},"duration":{"type":{"name":"number"},"required":false,"description":"The duration to make the snackbar visible for","defaultValue":{"value":"1000","computed":false}},"topLeft":{"type":{"name":"bool"},"required":false,"description":"If 'true', the snackbar will be positioned top left\nDefaults to 'true'","defaultValue":{"value":"false","computed":false}},"topRight":{"type":{"name":"bool"},"required":false,"description":"If 'true', the snackbar will be positioned top right\nDefaults to 'false'","defaultValue":{"value":"true","computed":false}},"bottomLeft":{"type":{"name":"bool"},"required":false,"description":"If 'true', the snackbar will be positioned bottom left\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"bottomRight":{"type":{"name":"bool"},"required":false,"description":"If 'true', the snackbar will be positioned bottom right\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"bottomCenter":{"type":{"name":"bool"},"required":false,"description":"If 'true', the snackbar will be positioned bottom center\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"topCenter":{"type":{"name":"bool"},"required":false,"description":"If 'true', the snackbar will be positioned top center\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"onActionClick":{"type":{"name":"func"},"required":false,"description":"The callback called when action is clicked\n@param {object} event The `event` itself","defaultValue":{"value":"undefined","computed":true}},"onClose":{"type":{"name":"func"},"required":false,"description":"The callback when snackbar is closed","defaultValue":{"value":"undefined","computed":true}}},"composes":["../../common"]},"lib/components/spinner/components/balls/balls.js":{"description":"","displayName":"Balls","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/bars/bars.js":{"description":"","displayName":"Bars","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/circle/circle.js":{"description":"","displayName":"Circle","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/clock/clock.js":{"description":"","displayName":"Clock","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/hydrogen/hydrogen.js":{"description":"","displayName":"Hydrogen","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/loadbar/loadbar.js":{"description":"","displayName":"Loadbar","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/slices/slices.js":{"description":"","displayName":"Vortex","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/sphere/sphere.js":{"description":"","displayName":"Sphere","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/texture/texture.js":{"description":"","displayName":"Texture","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/volume/volume.js":{"description":"","displayName":"Volume","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/vortex/vortex.js":{"description":"","displayName":"Vortex","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/components/wave/wave.js":{"description":"","displayName":"Vortex","methods":[],"props":{"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../../../common"]},"lib/components/spinner/spinner.js":{"description":"","displayName":"Spinner","methods":[],"props":{"balls":{"type":{"name":"bool"},"required":false,"description":"If 'true' the balls type is used\nDefault is 'true'","defaultValue":{"value":"true","computed":false}},"bars":{"type":{"name":"bool"},"required":false,"description":"If 'true' the bars type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"circle":{"type":{"name":"bool"},"required":false,"description":"If 'true' the circle type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"clock":{"type":{"name":"bool"},"required":false,"description":"If 'true' the clock type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"hydrogen":{"type":{"name":"bool"},"required":false,"description":"If 'true' the hydrogen type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"loadbar":{"type":{"name":"bool"},"required":false,"description":"If 'true' the loadbar type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"sphere":{"type":{"name":"bool"},"required":false,"description":"If 'true' the sphere type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"slices":{"type":{"name":"bool"},"required":false,"description":"If 'true' the slices type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"texture":{"type":{"name":"bool"},"required":false,"description":"If 'true' the texture type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"volume":{"type":{"name":"bool"},"required":false,"description":"If 'true' the volume type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"vortex":{"type":{"name":"bool"},"required":false,"description":"If 'true' the vortex type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"wave":{"type":{"name":"bool"},"required":false,"description":"If 'true' the wave type is used\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"style":{"defaultValue":{"value":"{ animationDuration: '1s', color: undefined }","computed":false},"required":false}},"composes":["../../common"]},"lib/components/split-pane/components/pane/pane.js":{"description":"","displayName":"Pane","methods":[],"props":{"eleRef":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}}},"lib/components/split-pane/components/resizer/resizer.js":{"description":"","displayName":"Resizer","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the reszizing is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"vertical":{"type":{"name":"bool"},"required":false,"description":"If 'true' the split pane is in vertical mode\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../../../common"]},"lib/components/split-pane/split-pane.js":{"description":"","displayName":"SplitPane","methods":[{"name":"calculateAndSetClientSize","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"addEventListeners","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"removeEventListeners","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"startResize","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"stopResize","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"resizePanel","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"vertical":{"type":{"name":"bool"},"required":false,"description":"If 'true' the split pane is in vertical mode\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the resize occurs.\n\n@param {number} delta The value change","defaultValue":{"value":"undefined","computed":true}}},"composes":["../../common"]},"lib/components/stacked-card/stacked-card.js":{"description":"","displayName":"StackedCard","methods":[],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"shadowed":{"type":{"name":"bool"},"required":false,"description":"If 'true', shows a shadow\nDefault to 'true'","defaultValue":{"value":"true","computed":false}}},"composes":["../../common"]},"lib/components/star-rating/star-rating.js":{"description":"","displayName":"StarRating","methods":[{"name":"setRating","docblock":null,"modifiers":[],"params":[{"name":"rating","type":null}],"returns":null},{"name":"starOver","docblock":null,"modifiers":[],"params":[{"name":"rating","type":null}],"returns":null},{"name":"starOut","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"getStars","docblock":null,"modifiers":[],"params":[{"name":"highestRating","type":null}],"returns":null}],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"highestRating":{"type":{"name":"number"},"required":false,"description":"The no of stars","defaultValue":{"value":"5","computed":false}},"rating":{"type":{"name":"number"},"required":false,"description":"The current rating","defaultValue":{"value":"0","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n\n@param {number} `rating` The new rating.","defaultValue":{"value":"() => {}","computed":false}}},"composes":["../../common"]},"lib/components/switch/switch.js":{"description":"","displayName":"Switch","methods":[{"name":"handleOnChange","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null}],"props":{"checked":{"type":{"name":"bool"},"required":false,"description":"If 'true', sets switch to checked\nDefaults to 'false'.","defaultValue":{"value":"undefined","computed":true}},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true', makes the switch component 'Controlled'\nDefault to 'false'","defaultValue":{"value":"false","computed":false}},"iconColor":{"type":{"name":"string"},"required":false,"description":"The color of the switch 'icon'\naceepts any valid CSS value for this","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n@param {object} val of shape:\n@param {object} event The event source for the callback.\nYou can use `event.target.checked` to get the new value\n@param {boolean} checked The `checked` value of the switch is also passed","defaultValue":{"value":"() => {}","computed":false}}},"composes":["../../common"]},"lib/components/tabs/tabs.js":{"description":"","displayName":"Tabs","methods":[],"props":{"selectedIndex":{"type":{"name":"number"},"required":false,"description":"The index of the currently selected tab\nThis should match the `index` prop of the tab","defaultValue":{"value":"0","computed":false}},"tabsDisabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the tabs are disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}},"onSelectionChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when new tab is selected\n\n@param {object} event The event source\n@param {number} index The `index` of the new selected tab","defaultValue":{"value":"undefined","computed":true}}}},"lib/components/text/text.js":{"description":"","displayName":"Text","methods":[],"composes":["../../common"]},"lib/components/timer/components/time.js":{"description":"","displayName":"Time","methods":[]},"lib/components/timer/timer.js":{"description":"","displayName":"Timer","methods":[{"name":"updateMillis","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"getChildren","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"showSeconds":{"type":{"name":"bool"},"required":false,"description":"If 'true', seconds are shown\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"showMinutes":{"type":{"name":"bool"},"required":false,"description":"If 'true', minutes are shown\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"showHours":{"type":{"name":"bool"},"required":false,"description":"If 'true', hours are shown\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"showDays":{"type":{"name":"bool"},"required":false,"description":"If 'true', days are shown\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"milliseconds":{"type":{"name":"number"},"required":true,"description":"The milliseconds of a certain time,\nIf this is of a time in future, the timer\nwill count down, else will count up"}},"composes":["../../common"]},"lib/components/toast/toast-container.js":{"description":"","displayName":"ToastContainer","methods":[],"props":{"topLeft":{"type":{"name":"bool"},"required":true,"description":"If 'true', the Toast will be positioned top left\nDefaults to 'true'"},"topRight":{"type":{"name":"bool"},"required":true,"description":"If 'true', the Toast will be positioned top right\nDefaults to 'false'"},"bottomLeft":{"type":{"name":"bool"},"required":true,"description":"If 'true', the tooltip will be positioned bottom left\nDefaults to 'false'"},"bottomRight":{"type":{"name":"bool"},"required":true,"description":"If 'true', the Toast will be positioned bottom right\nDefaults to 'false'"},"bottomCenter":{"type":{"name":"bool"},"required":true,"description":"If 'true', the Toast will be positioned bottom center\nDefaults to 'false'"},"topCenter":{"type":{"name":"bool"},"required":true,"description":"If 'true', the Toast will be positioned top center\nDefaults to 'false'"}}},"lib/components/toast/toast-controller.js":{"description":"","displayName":"ToastController","methods":[{"name":"startTimer","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"clearTimer","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"onMouseEnter","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"onMouseLeave","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"autoDismiss":{"type":{"name":"bool"},"required":false,"description":"If 'true', the Toast is autodismissable and will dismiss\nafter the timeout runs out","defaultValue":{"value":"false","computed":false}},"autoDismissTimeout":{"type":{"name":"number"},"required":true,"description":"The autodimss timeout"},"onDismiss":{"type":{"name":"func"},"required":false,"description":"The callback called when Toast is dismissed","defaultValue":{"value":"undefined","computed":true}}}},"lib/components/toast/toast.js":{"description":"","displayName":"Toast","methods":[],"props":{"topLeft":{"type":{"name":"bool"},"required":false,"description":"If 'true', the Toast will be positioned top left\nDefaults to 'true'","defaultValue":{"value":"false","computed":false}},"topRight":{"type":{"name":"bool"},"required":false,"description":"If 'true', the Toast will be positioned top right\nDefaults to 'false'","defaultValue":{"value":"true","computed":false}},"bottomLeft":{"type":{"name":"bool"},"required":false,"description":"If 'true', the tooltip will be positioned bottom left\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"bottomRight":{"type":{"name":"bool"},"required":false,"description":"If 'true', the Toast will be positioned bottom right\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"bottomCenter":{"type":{"name":"bool"},"required":false,"description":"If 'true', the Toast will be positioned bottom center\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"topCenter":{"type":{"name":"bool"},"required":false,"description":"If 'true', the Toast will be positioned top center\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"transitionDuration":{"type":{"name":"number"},"required":false,"description":"The transition duration for the Toast transitions","defaultValue":{"value":"220","computed":false}},"pauseOnHover":{"type":{"name":"bool"},"required":true,"description":"If 'true', the countdown is paused on hover\nDefaults to 'false'"},"transitionState":{"type":{"name":"enum","value":[{"value":"'entering'","computed":false},{"value":"'entered'","computed":false},{"value":"'exiting'","computed":false},{"value":"'exited'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'entering'","computed":false}},"onMouseEnter":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onMouseLeave":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}}},"lib/components/tooltip/tooltip.js":{"description":"","displayName":"Tooltip","methods":[{"name":"hideTooltip","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"showTooltip","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"top":{"type":{"name":"bool"},"required":false,"description":"If 'true', the tooltip will be positioned top\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"bottom":{"type":{"name":"bool"},"required":false,"description":"If 'true', the tooltip will be positioned bottom\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"left":{"type":{"name":"bool"},"required":false,"description":"If 'true', the tooltip will be positioned left\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"right":{"type":{"name":"bool"},"required":false,"description":"If 'true', the tooltip will be positioned right\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]},"lib/components/top-bar/top-bar.js":{"description":"","displayName":"TopBar","methods":[],"composes":["../../common"]},"lib/components/tree-view/components/tree-view-item/tree-view-item.js":{"description":"","displayName":"TreeViewItem","methods":[{"name":"toggleTree","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"closeIcon":{"type":{"name":"any"},"required":false,"description":"This icon is shown when the sub tree is closed for the node","defaultValue":{"value":"<FaAngleRight />","computed":false}},"openIcon":{"type":{"name":"any"},"required":false,"description":"This icon is shown when the sub tree is open for the node","defaultValue":{"value":"<FaAngleDown />","computed":false}},"text":{"type":{"name":"string"},"required":false,"description":"The text value itself","defaultValue":{"value":"''","computed":false}},"content":{"type":{"name":"any"},"required":false,"description":"If passed, this is all that goes inside the menu item,\ntext, icon and drop down icon are not shown/ ignored","defaultValue":{"value":"undefined","computed":true}},"sub":{"type":{"name":"any"},"required":false,"description":"An object of shape\nopenIcon: PropTypes.any,\ncloseIcon: PropTypes.any,\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`Of same shape as sub`\nsub: PropTypes.any,\ndisabled: PropTypes.bool,","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the menu item is disabled,\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../../../common"]},"lib/components/tree-view/tree-view.js":{"description":"","displayName":"TreeView","methods":[],"props":{"items":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"openIcon":{"name":"any","required":false},"closeIcon":{"name":"any","required":false},"text":{"name":"string","required":false},"content":{"name":"any","required":false},"sub":{"name":"any","required":false},"disabled":{"name":"bool","required":false}}}},"required":false,"description":"A collection of a array of shape\nopenIcon: PropTypes.any,\ncloseIcon: PropTypes.any,\ntext: PropTypes.string,\ncontent: PropTypes.any,\n`Of same shape as items`\nsub: PropTypes.any,\ndisabled: PropTypes.bool,","defaultValue":{"value":"undefined","computed":true}}},"composes":["../../common"]},"lib/components/typeahead/typeahead.js":{"description":"","displayName":"Typeahead","methods":[{"name":"Suggestion","docblock":"This static component is merely a placeholder\nand does not serve any other purpose.\nThis is to make the Typeahead 'behave' like a\ndeclarative component, but its props are used to\nbuild the ListPanel instead.\n\n@static\n@memberof Typeahead","modifiers":["static"],"params":[{"name":"{\n  value,\n  index,\n  children,\n}"}],"returns":null,"description":"This static component is merely a placeholder\nand does not serve any other purpose.\nThis is to make the Typeahead 'behave' like a\ndeclarative component, but its props are used to\nbuild the ListPanel instead."},{"name":"filterSuggestions","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"handleListItemOnClick","docblock":null,"modifiers":[],"params":[{"name":"{ value }","type":null}],"returns":null},{"name":"handleOnChange","docblock":null,"modifiers":[],"params":[{"name":"{ value }","type":null}],"returns":null},{"name":"handleOnKeyUp","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true' the components is disabled","defaultValue":{"value":"false","computed":false}},"isControlled":{"type":{"name":"bool"},"required":false,"description":"If 'true' the components is set to controlled\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"isSelectable":{"type":{"name":"bool"},"required":false,"description":"If 'true' the suggestions can be selected\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"searchTerm":{"type":{"name":"string"},"required":false,"description":"The search term itself","defaultValue":{"value":"undefined","computed":true}},"suggestions":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"index":{"name":"number","required":true},"value":{"name":"string","required":true},"content":{"name":"any","required":false}}}},"required":false,"description":"The collection which makes up the\nsuggestions","defaultValue":{"value":"[]","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when the state is changed.\n@param {string} value The new `value` itself","defaultValue":{"value":"undefined","computed":true}}},"composes":["../../common"]},"lib/components/user-profile/user-profile.js":{"description":"","displayName":"UserProfile","methods":[{"name":"closeTray","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"toggleTray","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"userName":{"type":{"name":"string"},"required":true,"description":"The username value of the user"},"avatarLeft":{"type":{"name":"bool"},"required":false,"description":"If 'true', the avatar is place left of username","defaultValue":{"value":"true","computed":false}},"avatarRight":{"type":{"name":"bool"},"required":false,"description":"If 'true', the avatar is place right of username","defaultValue":{"value":"false","computed":false}},"showMessage":{"type":{"name":"bool"},"required":false,"description":"If 'true', the message is to shown\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"welcomeMessage":{"type":{"name":"string"},"required":false,"description":"The welcome mesaage","defaultValue":{"value":"'Welcome'","computed":false}},"imgPath":{"type":{"name":"string"},"required":true,"description":"The `path` of the avatar"},"dropDownTop":{"type":{"name":"bool"},"required":false,"description":"If 'true', the dropdown is shown top\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"dropDownBottom":{"type":{"name":"bool"},"required":false,"description":"If 'true', the dropdown is shown bottom\nDefaults to 'true'","defaultValue":{"value":"true","computed":false}},"sm":{"type":{"name":"bool"},"required":false,"description":"If 'true', the message and username is\nnot shown on sm screens.\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"md":{"type":{"name":"bool"},"required":false,"description":"If 'true', the message and username is\nnot shown on sm screens.\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"lg":{"type":{"name":"bool"},"required":false,"description":"If 'true', the message and username is\nnot shown on lg screens.\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"xl":{"type":{"name":"bool"},"required":false,"description":"If 'true', the message and username is\nnot shown on xl screens.\nDefaults to 'false'","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If 'true', the component is disabled\nDefault is 'false'","defaultValue":{"value":"false","computed":false}}},"composes":["../../common"]}}